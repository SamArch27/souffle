diff --git a/compile b/compile
new file mode 120000
index 000000000..b6af40053
--- /dev/null
+++ b/compile
@@ -0,0 +1 @@
+/usr/share/automake-1.16/compile
\ No newline at end of file
diff --git a/depcomp b/depcomp
new file mode 120000
index 000000000..4ed246b49
--- /dev/null
+++ b/depcomp
@@ -0,0 +1 @@
+/usr/share/automake-1.16/depcomp
\ No newline at end of file
diff --git a/install-sh b/install-sh
new file mode 120000
index 000000000..ae5e89b40
--- /dev/null
+++ b/install-sh
@@ -0,0 +1 @@
+/usr/share/automake-1.16/install-sh
\ No newline at end of file
diff --git a/ltmain.sh b/ltmain.sh
new file mode 120000
index 000000000..8cff389ad
--- /dev/null
+++ b/ltmain.sh
@@ -0,0 +1 @@
+/usr/share/libtool/build-aux/ltmain.sh
\ No newline at end of file
diff --git a/missing b/missing
new file mode 120000
index 000000000..60599889a
--- /dev/null
+++ b/missing
@@ -0,0 +1 @@
+/usr/share/automake-1.16/missing
\ No newline at end of file
diff --git a/src/BinaryConstraintOps.h b/src/BinaryConstraintOps.h
index 1d2cd2e4a..32bfe36ab 100644
--- a/src/BinaryConstraintOps.h
+++ b/src/BinaryConstraintOps.h
@@ -75,7 +75,7 @@ inline bool isEqConstraint(const BinaryConstraintOp constraintOp) {
 }
 
 // need to distinguish which inequalities are indexable and thus introduce isIneqConstraint
-inline bool isIneqConstraint(const BinaryConstraintOp constraintOp) {
+inline bool isIneqSigned(const BinaryConstraintOp constraintOp) {
     switch (constraintOp) {
         case BinaryConstraintOp::LT:
         case BinaryConstraintOp::GT:
@@ -86,22 +86,75 @@ inline bool isIneqConstraint(const BinaryConstraintOp constraintOp) {
     return false;
 }
 
-inline bool isLessThanConstraint(const BinaryConstraintOp constraintOp) {
+inline bool isIneqUnsigned(const BinaryConstraintOp constraintOp) {
+    switch (constraintOp) {
+        case BinaryConstraintOp::ULT:
+        case BinaryConstraintOp::UGT:
+        case BinaryConstraintOp::ULE:
+        case BinaryConstraintOp::UGE: return true;
+        default: break;
+    }
+    return false;
+}
+
+inline bool isIneqFloat(const BinaryConstraintOp constraintOp) {
+    switch (constraintOp) {
+        case BinaryConstraintOp::FLT:
+        case BinaryConstraintOp::FGT:
+        case BinaryConstraintOp::FLE:
+        case BinaryConstraintOp::FGE: return true;
+        default: break;
+    }
+    return false;
+}
+
+inline bool isLessThanSigned(const BinaryConstraintOp constraintOp) {
     return constraintOp == BinaryConstraintOp::LT;
 }
 
-inline bool isGreaterThanConstraint(const BinaryConstraintOp constraintOp) {
+inline bool isGreaterThanSigned(const BinaryConstraintOp constraintOp) {
     return constraintOp == BinaryConstraintOp::GT;
 }
 
-inline bool isLessEqualConstraint(const BinaryConstraintOp constraintOp) {
+inline bool isLessEqualSigned(const BinaryConstraintOp constraintOp) {
     return constraintOp == BinaryConstraintOp::LE;
 }
 
-inline bool isGreaterEqualConstraint(const BinaryConstraintOp constraintOp) {
+inline bool isGreaterEqualSigned(const BinaryConstraintOp constraintOp) {
     return constraintOp == BinaryConstraintOp::GE;
 }
 
+inline bool isLessThanUnsigned(const BinaryConstraintOp constraintOp) {
+    return constraintOp == BinaryConstraintOp::ULT;
+}
+
+inline bool isGreaterThanUnsigned(const BinaryConstraintOp constraintOp) {
+    return constraintOp == BinaryConstraintOp::UGT;
+}
+
+inline bool isLessEqualUnsigned(const BinaryConstraintOp constraintOp) {
+    return constraintOp == BinaryConstraintOp::ULE;
+}
+
+inline bool isGreaterEqualUnsigned(const BinaryConstraintOp constraintOp) {
+    return constraintOp == BinaryConstraintOp::UGE;
+}
+
+inline bool isLessThanFloat(const BinaryConstraintOp constraintOp) {
+    return constraintOp == BinaryConstraintOp::FLT;
+}
+
+inline bool isGreaterThanFloat(const BinaryConstraintOp constraintOp) {
+    return constraintOp == BinaryConstraintOp::FGT;
+}
+
+inline bool isLessEqualFloat(const BinaryConstraintOp constraintOp) {
+    return constraintOp == BinaryConstraintOp::FLE;
+}
+
+inline bool isGreaterEqualFloat(const BinaryConstraintOp constraintOp) {
+    return constraintOp == BinaryConstraintOp::FGE;
+}
 /**
  * Utility function, informing whether constraint is overloaded.
  * Only the signed version's are treated as overloaded (as they are returned by the parser).
diff --git a/src/ExplainProvenanceImpl.h b/src/ExplainProvenanceImpl.h
index 8add1de1a..789525924 100644
--- a/src/ExplainProvenanceImpl.h
+++ b/src/ExplainProvenanceImpl.h
@@ -821,7 +821,6 @@ private:
                 return std::make_tuple(ruleNum, levelNum, subtreeLevels);
             }
         }
-
         // if no tuple exists
         return std::make_tuple(-1, -1, std::vector<RamDomain>());
     }
diff --git a/src/InterpreterEngine.cpp b/src/InterpreterEngine.cpp
index 6892a6dcc..3b1bcd776 100644
--- a/src/InterpreterEngine.cpp
+++ b/src/InterpreterEngine.cpp
@@ -807,10 +807,23 @@ RamDomain InterpreterEngine::execute(const InterpreterNode* node, InterpreterCon
             RamDomain hig[arity];
             for (size_t i = 0; i < arity; i++) {
                 if (node->getChild(i) != nullptr) {
-                    low[i] = execute(node->getChild(i), ctxt);
-                    hig[i] = execute(node->getChild(i + arity), ctxt);
+                    if (isRamUndefValue(dynamic_cast<const RamExpression*>(node->getChild(i)->getShadow()))) {
+                        low[i] = MIN_RAM_SIGNED;
+                    } else {
+                        low[i] = execute(node->getChild(i), ctxt);
+                    }
                 } else {
                     low[i] = MIN_RAM_SIGNED;
+                }
+
+                if (node->getChild(i + arity) != nullptr) {
+                    if (isRamUndefValue(
+                                dynamic_cast<const RamExpression*>(node->getChild(i + arity)->getShadow()))) {
+                        hig[i] = MAX_RAM_SIGNED;
+                    } else {
+                        hig[i] = execute(node->getChild(i + arity), ctxt);
+                    }
+                } else {
                     hig[i] = MAX_RAM_SIGNED;
                 }
             }
@@ -836,11 +849,24 @@ RamDomain InterpreterEngine::execute(const InterpreterNode* node, InterpreterCon
             RamDomain low[arity];
             RamDomain hig[arity];
             for (size_t i = 0; i < arity; i++) {
-                if (node->getChild(i)) {
-                    low[i] = execute(node->getChild(i), ctxt);
-                    hig[i] = execute(node->getChild(i + arity), ctxt);
+                if (node->getChild(i) != nullptr) {
+                    if (isRamUndefValue(dynamic_cast<const RamExpression*>(node->getChild(i)->getShadow()))) {
+                        low[i] = MIN_RAM_SIGNED;
+                    } else {
+                        low[i] = execute(node->getChild(i), ctxt);
+                    }
                 } else {
                     low[i] = MIN_RAM_SIGNED;
+                }
+
+                if (node->getChild(i + arity) != nullptr) {
+                    if (isRamUndefValue(
+                                dynamic_cast<const RamExpression*>(node->getChild(i + arity)->getShadow()))) {
+                        hig[i] = MAX_RAM_SIGNED;
+                    } else {
+                        hig[i] = execute(node->getChild(i + arity), ctxt);
+                    }
+                } else {
                     hig[i] = MAX_RAM_SIGNED;
                 }
             }
@@ -914,10 +940,23 @@ RamDomain InterpreterEngine::execute(const InterpreterNode* node, InterpreterCon
             RamDomain hig[arity];
             for (size_t i = 0; i < arity; i++) {
                 if (node->getChild(i) != nullptr) {
-                    low[i] = execute(node->getChild(i), ctxt);
-                    hig[i] = execute(node->getChild(i + arity), ctxt);
+                    if (isRamUndefValue(dynamic_cast<const RamExpression*>(node->getChild(i)->getShadow()))) {
+                        low[i] = MIN_RAM_SIGNED;
+                    } else {
+                        low[i] = execute(node->getChild(i), ctxt);
+                    }
                 } else {
                     low[i] = MIN_RAM_SIGNED;
+                }
+
+                if (node->getChild(i + arity) != nullptr) {
+                    if (isRamUndefValue(
+                                dynamic_cast<const RamExpression*>(node->getChild(i + arity)->getShadow()))) {
+                        hig[i] = MAX_RAM_SIGNED;
+                    } else {
+                        hig[i] = execute(node->getChild(i + arity), ctxt);
+                    }
+                } else {
                     hig[i] = MAX_RAM_SIGNED;
                 }
             }
@@ -948,10 +987,23 @@ RamDomain InterpreterEngine::execute(const InterpreterNode* node, InterpreterCon
             RamDomain hig[arity];
             for (size_t i = 0; i < arity; i++) {
                 if (node->getChild(i) != nullptr) {
-                    low[i] = execute(node->getChild(i), ctxt);
-                    hig[i] = execute(node->getChild(i + arity), ctxt);
+                    if (isRamUndefValue(dynamic_cast<const RamExpression*>(node->getChild(i)->getShadow()))) {
+                        low[i] = MIN_RAM_SIGNED;
+                    } else {
+                        low[i] = execute(node->getChild(i), ctxt);
+                    }
                 } else {
                     low[i] = MIN_RAM_SIGNED;
+                }
+
+                if (node->getChild(i + arity) != nullptr) {
+                    if (isRamUndefValue(
+                                dynamic_cast<const RamExpression*>(node->getChild(i + arity)->getShadow()))) {
+                        hig[i] = MAX_RAM_SIGNED;
+                    } else {
+                        hig[i] = execute(node->getChild(i + arity), ctxt);
+                    }
+                } else {
                     hig[i] = MAX_RAM_SIGNED;
                 }
             }
@@ -1059,10 +1111,23 @@ RamDomain InterpreterEngine::execute(const InterpreterNode* node, InterpreterCon
 
             for (size_t i = 0; i < arity; i++) {
                 if (node->getChild(i) != nullptr) {
-                    low[i] = execute(node->getChild(i), ctxt);
-                    hig[i] = execute(node->getChild(i + arity), ctxt);
+                    if (isRamUndefValue(dynamic_cast<const RamExpression*>(node->getChild(i)->getShadow()))) {
+                        low[i] = MIN_RAM_SIGNED;
+                    } else {
+                        low[i] = execute(node->getChild(i), ctxt);
+                    }
                 } else {
                     low[i] = MIN_RAM_SIGNED;
+                }
+
+                if (node->getChild(i + arity) != nullptr) {
+                    if (isRamUndefValue(
+                                dynamic_cast<const RamExpression*>(node->getChild(i + arity)->getShadow()))) {
+                        hig[i] = MAX_RAM_SIGNED;
+                    } else {
+                        hig[i] = execute(node->getChild(i + arity), ctxt);
+                    }
+                } else {
                     hig[i] = MAX_RAM_SIGNED;
                 }
             }
diff --git a/src/RamTypes.h b/src/RamTypes.h
index 08c1bf2e8..6aed50666 100644
--- a/src/RamTypes.h
+++ b/src/RamTypes.h
@@ -105,6 +105,6 @@ constexpr RamSigned MAX_RAM_SIGNED = std::numeric_limits<RamSigned>::max();
 constexpr RamUnsigned MIN_RAM_UNSIGNED = std::numeric_limits<RamUnsigned>::min();
 constexpr RamUnsigned MAX_RAM_UNSIGNED = std::numeric_limits<RamUnsigned>::max();
 
-constexpr RamFloat MIN_RAM_FLOAT = std::numeric_limits<RamFloat>::min();
+constexpr RamFloat MIN_RAM_FLOAT = std::numeric_limits<RamFloat>::lowest();
 constexpr RamFloat MAX_RAM_FLOAT = std::numeric_limits<RamFloat>::max();
 }  // end of namespace souffle
diff --git a/src/Synthesiser.cpp b/src/Synthesiser.cpp
index c3ca27155..36db7b8cf 100644
--- a/src/Synthesiser.cpp
+++ b/src/Synthesiser.cpp
@@ -642,14 +642,45 @@ void Synthesiser::emitCode(std::ostream& out, const RamStatement& stmt) {
 
             PRINT_BEGIN_COMMENT(out);
 
-            out << "const Tuple<RamDomain," << arity << "> lower{{";
+            out << "Tuple<RamDomain," << arity << "> lower{{";
             out << join(rangePatternLower.begin(), rangePatternLower.begin() + arity, ",", recWithDefault);
             out << "}};\n";
 
-            out << "const Tuple<RamDomain," << arity << "> upper{{";
+            out << "Tuple<RamDomain," << arity << "> upper{{";
             out << join(rangePatternUpper.begin(), rangePatternUpper.begin() + arity, ",", recWithDefault);
             out << "}};\n";
 
+            for (size_t column = 0; column < arity; column++) {
+                std::string supremum;
+                std::string infimum;
+
+                switch (rel.getAttributeTypes()[column][0]) {
+                    case 'i':
+                        supremum = "ramBitCast<RamDomain, RamSigned>(MIN_RAM_SIGNED)";
+                        infimum = "ramBitCast<RamDomain, RamSigned>(MAX_RAM_SIGNED)";
+                        break;
+                    case 'u':
+                        supremum = "ramBitCast<RamDomain, RamUnsigned>(MIN_RAM_UNSIGNED)";
+                        infimum = "ramBitCast<RamDomain, RamUnsigned>(MAX_RAM_UNSIGNED)";
+                        break;
+                    case 'f':
+                        supremum = "ramBitCast<RamDomain, RamFloat>(MIN_RAM_FLOAT)";
+                        infimum = "ramBitCast<RamDomain, RamFloat>(MAX_RAM_FLOAT)";
+                        break;
+                    default:
+                        supremum = "ramBitCast<RamDomain, RamSigned>(MIN_RAM_SIGNED)";
+                        infimum = "ramBitCast<RamDomain, RamSigned>(MAX_RAM_SIGNED)";
+                }
+
+                // if we have an inequality where either side is not set
+                if (isRamUndefValue(rangePatternLower[column])) {
+                    out << "lower[" << column << "] = " << supremum << ";\n";
+                }
+                if (isRamUndefValue(rangePatternUpper[column])) {
+                    out << "upper[" << column << "] = " << infimum << ";\n";
+                }
+            }
+
             auto ctxName = "READ_OP_CONTEXT(" + synthesiser.getOpContextName(rel) + ")";
 
             out << "auto range = " << relName << "->"
@@ -680,14 +711,45 @@ void Synthesiser::emitCode(std::ostream& out, const RamStatement& stmt) {
 
             PRINT_BEGIN_COMMENT(out);
 
-            out << "const Tuple<RamDomain," << arity << "> lower{{";
+            out << "Tuple<RamDomain," << arity << "> lower{{";
             out << join(rangePatternLower.begin(), rangePatternLower.begin() + arity, ",", recWithDefault);
             out << "}};\n";
 
-            out << "const Tuple<RamDomain," << arity << "> upper{{";
+            out << "Tuple<RamDomain," << arity << "> upper{{";
             out << join(rangePatternUpper.begin(), rangePatternUpper.begin() + arity, ",", recWithDefault);
             out << "}};\n";
 
+            for (size_t column = 0; column < arity; column++) {
+                std::string supremum;
+                std::string infimum;
+
+                switch (rel.getAttributeTypes()[column][0]) {
+                    case 'i':
+                        supremum = "ramBitCast<RamDomain, RamSigned>(MIN_RAM_SIGNED)";
+                        infimum = "ramBitCast<RamDomain, RamSigned>(MAX_RAM_SIGNED)";
+                        break;
+                    case 'u':
+                        supremum = "ramBitCast<RamDomain, RamUnsigned>(MIN_RAM_UNSIGNED)";
+                        infimum = "ramBitCast<RamDomain, RamUnsigned>(MAX_RAM_UNSIGNED)";
+                        break;
+                    case 'f':
+                        supremum = "ramBitCast<RamDomain, RamFloat>(MIN_RAM_FLOAT)";
+                        infimum = "ramBitCast<RamDomain, RamFloat>(MAX_RAM_FLOAT)";
+                        break;
+                    default:
+                        supremum = "ramBitCast<RamDomain, RamSigned>(MIN_RAM_SIGNED)";
+                        infimum = "ramBitCast<RamDomain, RamSigned>(MAX_RAM_SIGNED)";
+                }
+
+                // if we have an inequality where either side is not set
+                if (isRamUndefValue(rangePatternLower[column])) {
+                    out << "lower[" << column << "] = " << supremum << ";\n";
+                }
+                if (isRamUndefValue(rangePatternUpper[column])) {
+                    out << "upper[" << column << "] = " << infimum << ";\n";
+                }
+            }
+
             out << "auto range = " << relName
                 << "->"
                 // TODO (b-scholz): context may be missing here?
@@ -721,14 +783,45 @@ void Synthesiser::emitCode(std::ostream& out, const RamStatement& stmt) {
             // check list of keys
             assert(arity > 0 && "AstTranslator failed");
 
-            out << "const Tuple<RamDomain," << arity << "> lower{{";
+            out << "Tuple<RamDomain," << arity << "> lower{{";
             out << join(rangePatternLower.begin(), rangePatternLower.begin() + arity, ",", recWithDefault);
             out << "}};\n";
 
-            out << "const Tuple<RamDomain," << arity << "> upper{{";
+            out << "Tuple<RamDomain," << arity << "> upper{{";
             out << join(rangePatternUpper.begin(), rangePatternUpper.begin() + arity, ",", recWithDefault);
             out << "}};\n";
 
+            for (size_t column = 0; column < arity; column++) {
+                std::string supremum;
+                std::string infimum;
+
+                switch (rel.getAttributeTypes()[column][0]) {
+                    case 'i':
+                        supremum = "ramBitCast<RamDomain, RamSigned>(MIN_RAM_SIGNED)";
+                        infimum = "ramBitCast<RamDomain, RamSigned>(MAX_RAM_SIGNED)";
+                        break;
+                    case 'u':
+                        supremum = "ramBitCast<RamDomain, RamUnsigned>(MIN_RAM_UNSIGNED)";
+                        infimum = "ramBitCast<RamDomain, RamUnsigned>(MAX_RAM_UNSIGNED)";
+                        break;
+                    case 'f':
+                        supremum = "ramBitCast<RamDomain, RamFloat>(MIN_RAM_FLOAT)";
+                        infimum = "ramBitCast<RamDomain, RamFloat>(MAX_RAM_FLOAT)";
+                        break;
+                    default:
+                        supremum = "ramBitCast<RamDomain, RamSigned>(MIN_RAM_SIGNED)";
+                        infimum = "ramBitCast<RamDomain, RamSigned>(MAX_RAM_SIGNED)";
+                }
+
+                // if we have an inequality where either side is not set
+                if (isRamUndefValue(rangePatternLower[column])) {
+                    out << "lower[" << column << "] = " << supremum << ";\n";
+                }
+                if (isRamUndefValue(rangePatternUpper[column])) {
+                    out << "upper[" << column << "] = " << infimum << ";\n";
+                }
+            }
+
             auto ctxName = "READ_OP_CONTEXT(" + synthesiser.getOpContextName(rel) + ")";
 
             out << "auto range = " << relName << "->"
@@ -767,14 +860,45 @@ void Synthesiser::emitCode(std::ostream& out, const RamStatement& stmt) {
 
             PRINT_BEGIN_COMMENT(out);
 
-            out << "const Tuple<RamDomain," << arity << "> lower{{";
+            out << "Tuple<RamDomain," << arity << "> lower{{";
             out << join(rangePatternLower.begin(), rangePatternLower.begin() + arity, ",", recWithDefault);
             out << "}};\n";
 
-            out << "const Tuple<RamDomain," << arity << "> upper{{";
+            out << "Tuple<RamDomain," << arity << "> upper{{";
             out << join(rangePatternUpper.begin(), rangePatternUpper.begin() + arity, ",", recWithDefault);
             out << "}};\n";
 
+            for (size_t column = 0; column < arity; column++) {
+                std::string supremum;
+                std::string infimum;
+
+                switch (rel.getAttributeTypes()[column][0]) {
+                    case 'i':
+                        supremum = "ramBitCast<RamDomain, RamSigned>(MIN_RAM_SIGNED)";
+                        infimum = "ramBitCast<RamDomain, RamSigned>(MAX_RAM_SIGNED)";
+                        break;
+                    case 'u':
+                        supremum = "ramBitCast<RamDomain, RamUnsigned>(MIN_RAM_UNSIGNED)";
+                        infimum = "ramBitCast<RamDomain, RamUnsigned>(MAX_RAM_UNSIGNED)";
+                        break;
+                    case 'f':
+                        supremum = "ramBitCast<RamDomain, RamFloat>(MIN_RAM_FLOAT)";
+                        infimum = "ramBitCast<RamDomain, RamFloat>(MAX_RAM_FLOAT)";
+                        break;
+                    default:
+                        supremum = "ramBitCast<RamDomain, RamSigned>(MIN_RAM_SIGNED)";
+                        infimum = "ramBitCast<RamDomain, RamSigned>(MAX_RAM_SIGNED)";
+                }
+
+                // if we have an inequality where either side is not set
+                if (isRamUndefValue(rangePatternLower[column])) {
+                    out << "lower[" << column << "] = " << supremum << ";\n";
+                }
+                if (isRamUndefValue(rangePatternUpper[column])) {
+                    out << "upper[" << column << "] = " << infimum << ";\n";
+                }
+            }
+
             out << "auto range = " << relName
                 << "->"
                 // TODO (b-scholz): context may be missing here?
@@ -1113,14 +1237,45 @@ void Synthesiser::emitCode(std::ostream& out, const RamStatement& stmt) {
                 const auto& patternsLower = aggregate.getRangePattern().first;
                 const auto& patternsUpper = aggregate.getRangePattern().second;
 
-                out << "const " << tuple_type << " lower{{";
+                out << tuple_type << " lower{{";
                 out << join(patternsLower.begin(), patternsLower.begin() + arity, ",", recWithDefault);
                 out << "}};\n";
 
-                out << "const " << tuple_type << " upper{{";
+                out << tuple_type << " upper{{";
                 out << join(patternsUpper.begin(), patternsUpper.begin() + arity, ",", recWithDefault);
                 out << "}};\n";
 
+                for (size_t column = 0; column < arity; column++) {
+                    std::string supremum;
+                    std::string infimum;
+
+                    switch (rel.getAttributeTypes()[column][0]) {
+                        case 'i':
+                            supremum = "ramBitCast<RamDomain, RamSigned>(MIN_RAM_SIGNED)";
+                            infimum = "ramBitCast<RamDomain, RamSigned>(MAX_RAM_SIGNED)";
+                            break;
+                        case 'u':
+                            supremum = "ramBitCast<RamDomain, RamUnsigned>(MIN_RAM_UNSIGNED)";
+                            infimum = "ramBitCast<RamDomain, RamUnsigned>(MAX_RAM_UNSIGNED)";
+                            break;
+                        case 'f':
+                            supremum = "ramBitCast<RamDomain, RamFloat>(MIN_RAM_FLOAT)";
+                            infimum = "ramBitCast<RamDomain, RamFloat>(MAX_RAM_FLOAT)";
+                            break;
+                        default:
+                            supremum = "ramBitCast<RamDomain, RamSigned>(MIN_RAM_SIGNED)";
+                            infimum = "ramBitCast<RamDomain, RamSigned>(MAX_RAM_SIGNED)";
+                    }
+
+                    // if we have an inequality where either side is not set
+                    if (isRamUndefValue(patternsLower[column])) {
+                        out << "lower[" << column << "] = " << supremum << ";\n";
+                    }
+                    if (isRamUndefValue(patternsUpper[column])) {
+                        out << "upper[" << column << "] = " << infimum << ";\n";
+                    }
+                }
+
                 out << "auto range = " << relName << "->"
                     << "lowerUpperRange_" << keys << "(lower,upper," << ctxName << ");\n";
 
@@ -1678,15 +1833,68 @@ void Synthesiser::emitCode(std::ostream& out, const RamStatement& stmt) {
                 return;
             }
 
+            std::stringstream low;
+            std::stringstream high;
+
+            low << "Tuple<RamDomain," << arity << ">{{";
+            high << "Tuple<RamDomain," << arity << ">{{";
+
+            auto rangePatternLower = exists.getValues();
+            auto rangePatternUpper = exists.getValues();
+
+            for (size_t column = 0; column < arity; column++) {
+                std::string supremum;
+                std::string infimum;
+
+                switch (rel.getAttributeTypes()[column][0]) {
+                    case 'i':
+                        supremum = "ramBitCast<RamDomain, RamSigned>(MIN_RAM_SIGNED)";
+                        infimum = "ramBitCast<RamDomain, RamSigned>(MAX_RAM_SIGNED)";
+                        break;
+                    case 'u':
+                        supremum = "ramBitCast<RamDomain, RamUnsigned>(MIN_RAM_UNSIGNED)";
+                        infimum = "ramBitCast<RamDomain, RamUnsigned>(MAX_RAM_UNSIGNED)";
+                        break;
+                    case 'f':
+                        supremum = "ramBitCast<RamDomain, RamFloat>(MIN_RAM_FLOAT)";
+                        infimum = "ramBitCast<RamDomain, RamFloat>(MAX_RAM_FLOAT)";
+                        break;
+                    default:
+                        supremum = "ramBitCast<RamDomain, RamSigned>(MIN_RAM_SIGNED)";
+                        infimum = "ramBitCast<RamDomain, RamSigned>(MAX_RAM_SIGNED)";
+                }
+
+                // if we have an inequality where either side is not set
+                if (column != 0) {
+                    low << ", ";
+                    high << ", ";
+                }
+
+                if (isRamUndefValue(rangePatternLower[column])) {
+                    low << supremum;
+                } else {
+                    low << "ramBitCast(";
+                    visit(rangePatternLower[column], low);
+                    low << ")";
+                }
+
+                if (isRamUndefValue(rangePatternUpper[column])) {
+                    high << infimum;
+                } else {
+                    high << "ramBitCast(";
+                    visit(rangePatternUpper[column], high);
+                    high << ")";
+                }
+            }
+
+            low << "}}";
+            high << "}}";
+
             // else we conduct a range query
             out << "!" << relName << "->"
                 << "lowerUpperRange";
             out << "_" << isa->getSearchSignature(&exists);
-            out << "(Tuple<RamDomain," << arity << ">{{";
-            out << join(exists.getValues(), ",", recWithDefault);
-            out << "}},Tuple<RamDomain," << arity << ">{{";
-            out << join(exists.getValues(), ",", recWithDefault);
-            out << "}}," << ctxName << ").empty()" << after;
+            out << "(" << low.str() << "," << high.str() << "," << ctxName << ").empty()" << after;
             PRINT_END_COMMENT(out);
         }
 
diff --git a/src/SynthesiserRelation.cpp b/src/SynthesiserRelation.cpp
index 70d8dcf6e..90dfebecc 100644
--- a/src/SynthesiserRelation.cpp
+++ b/src/SynthesiserRelation.cpp
@@ -49,7 +49,46 @@ std::unique_ptr<SynthesiserRelation> SynthesiserRelation::getSynthesiserRelation
     }
 
     assert(rel != nullptr && "relation type not specified");
+    /*
+    auto chains = indexSet.getAllChains();
+
+    size_t inequalities = 0;
+    for (const auto& chain : chains) {
+        auto end = *chain.rbegin();
+        bool hasIndexedInequality = false;
+        for (size_t i = 0; i < end.arity(); ++i) {
+            if (end[i] == AttributeConstraint::Inequal) {
+                hasIndexedInequality = true;
+            }
+        }
+        if (hasIndexedInequality) {
+            ++inequalities;
+        }
+    }
 
+    std::cout << "Relation: " << ramRel.getName() << "\t";
+    std::cout << "Indexes: " << chains.size() << "\t";
+    std::cout << "Inequalities: " << inequalities << "\t";
+    std::cout << "Chains: ";
+    bool isFirst = true;
+    for (const auto& chain : chains) {
+        if (isFirst) {
+            std::cout << "|";
+            isFirst = false;
+        }
+        bool first = true;
+        for (auto search : chain) {
+            if (first) {
+                first = false;
+            } else {
+                std::cout << "-->";
+            }
+            std::cout << search;
+        }
+        std::cout << "|";
+    }
+    std::cout << "\n";
+    */
     // generate index set
     rel->computeIndices();
 
@@ -203,6 +242,7 @@ std::string SynthesiserDirectRelation::getTypeName() {
 void SynthesiserDirectRelation::generateTypeStruct(std::ostream& out) {
     size_t arity = getArity();
     size_t auxiliaryArity = relation.getAuxiliaryArity();
+    auto types = relation.getAttributeTypes();
     const auto& inds = getIndices();
     size_t numIndexes = inds.size();
     std::map<MinIndexSelection::LexOrder, int> indexToNumMap;
@@ -240,8 +280,18 @@ void SynthesiserDirectRelation::generateTypeStruct(std::ostream& out) {
             out << "  return ";
             std::function<void(size_t)> gencmp = [&](size_t i) {
                 size_t attrib = ind[i];
-                out << "(a[" << attrib << "] < b[" << attrib << "]) ? -1 : ((a[" << attrib << "] > b["
-                    << attrib << "]) ? 1 :(";
+
+                std::string element_type_cast("");
+
+                switch (types[attrib][0]) {
+                    case 'i': element_type_cast = "(RamSigned)"; break;
+                    case 'u': element_type_cast = "(RamUnsigned)"; break;
+                    case 'f': element_type_cast = "(RamFloat)"; break;
+                }
+
+                out << "(" << element_type_cast << "a[" << attrib << "] < " << element_type_cast << "b["
+                    << attrib << "]) ? -1 : ((" << element_type_cast << "a[" << attrib << "] > "
+                    << element_type_cast << "b[" << attrib << "]) ? 1 :(";
                 if (i + 1 < bound) {
                     gencmp(i + 1);
                 } else {
@@ -255,9 +305,20 @@ void SynthesiserDirectRelation::generateTypeStruct(std::ostream& out) {
             out << "  return ";
             std::function<void(size_t)> genless = [&](size_t i) {
                 size_t attrib = ind[i];
-                out << " a[" << attrib << "] < b[" << attrib << "]";
+
+                std::string element_type_cast("");
+
+                switch (types[attrib][0]) {
+                    case 'i': element_type_cast = "(RamSigned)"; break;
+                    case 'u': element_type_cast = "(RamUnsigned)"; break;
+                    case 'f': element_type_cast = "(RamFloat)"; break;
+                }
+
+                out << " " << element_type_cast << "a[" << attrib << "] < " << element_type_cast << "b["
+                    << attrib << "]";
                 if (i + 1 < bound) {
-                    out << "|| (a[" << attrib << "] == b[" << attrib << "] && (";
+                    out << "|| (" << element_type_cast << "a[" << attrib << "] == " << element_type_cast
+                        << "b[" << attrib << "] && (";
                     genless(i + 1);
                     out << "))";
                 }
@@ -268,7 +329,17 @@ void SynthesiserDirectRelation::generateTypeStruct(std::ostream& out) {
             out << "return ";
             std::function<void(size_t)> geneq = [&](size_t i) {
                 size_t attrib = ind[i];
-                out << "a[" << attrib << "] == b[" << attrib << "]";
+
+                std::string element_type_cast("");
+
+                switch (types[attrib][0]) {
+                    case 'i': element_type_cast = "(RamSigned)"; break;
+                    case 'u': element_type_cast = "(RamUnsigned)"; break;
+                    case 'f': element_type_cast = "(RamFloat)"; break;
+                }
+
+                out << "" << element_type_cast << "a[" << attrib << "] == " << element_type_cast << "b["
+                    << attrib << "]";
                 if (i + 1 < bound) {
                     out << "&&";
                     geneq(i + 1);
@@ -284,12 +355,13 @@ void SynthesiserDirectRelation::generateTypeStruct(std::ostream& out) {
 
         // for provenance, all indices must be full so we use btree_set
         // also strong/weak comparators and updater methods
+
         if (isProvenance) {
             std::string comparator_aux;
             if (provenanceIndexNumbers.find(i) == provenanceIndexNumbers.end()) {
                 // index for bottom up phase
                 comparator_aux = "t_comparator_" + std::to_string(i) + "_aux";
-                genstruct(comparator_aux, ind.size() - 2);
+                genstruct(comparator_aux, ind.size() - auxiliaryArity);
             } else {
                 // index for top down phase
                 comparator_aux = comparator;
@@ -315,7 +387,10 @@ void SynthesiserDirectRelation::generateTypeStruct(std::ostream& out) {
     // create a struct storing hints for each btree
     out << "struct context {\n";
     for (size_t i = 0; i < numIndexes; i++) {
-        out << "t_ind_" << i << "::operation_hints hints_" << i << ";\n";
+        out << "t_ind_" << i << "::operation_hints hints_" << i << "_lower"
+            << ";\n";
+        out << "t_ind_" << i << "::operation_hints hints_" << i << "_upper"
+            << ";\n";
     }
     out << "};\n";
     out << "context createContext() { return context(); }\n";
@@ -327,10 +402,12 @@ void SynthesiserDirectRelation::generateTypeStruct(std::ostream& out) {
     out << "}\n";  // end of insert(t_tuple&)
 
     out << "bool insert(const t_tuple& t, context& h) {\n";
-    out << "if (ind_" << masterIndex << ".insert(t, h.hints_" << masterIndex << ")) {\n";
+    out << "if (ind_" << masterIndex << ".insert(t, h.hints_" << masterIndex << "_lower"
+        << ")) {\n";
     for (size_t i = 0; i < numIndexes; i++) {
         if (i != masterIndex && provenanceIndexNumbers.find(i) == provenanceIndexNumbers.end()) {
-            out << "ind_" << i << ".insert(t, h.hints_" << i << ");\n";
+            out << "ind_" << i << ".insert(t, h.hints_" << i << "_lower"
+                << ");\n";
         }
     }
     out << "return true;\n";
@@ -358,7 +435,8 @@ void SynthesiserDirectRelation::generateTypeStruct(std::ostream& out) {
 
     // contains methods
     out << "bool contains(const t_tuple& t, context& h) const {\n";
-    out << "return ind_" << masterIndex << ".contains(t, h.hints_" << masterIndex << ");\n";
+    out << "return ind_" << masterIndex << ".contains(t, h.hints_" << masterIndex << "_lower"
+        << ");\n";
     out << "}\n";
 
     out << "bool contains(const t_tuple& t) const {\n";
@@ -373,7 +451,8 @@ void SynthesiserDirectRelation::generateTypeStruct(std::ostream& out) {
 
     // find methods
     out << "iterator find(const t_tuple& t, context& h) const {\n";
-    out << "return ind_" << masterIndex << ".find(t, h.hints_" << masterIndex << ");\n";
+    out << "return ind_" << masterIndex << ".find(t, h.hints_" << masterIndex << "_lower"
+        << ");\n";
     out << "}\n";
 
     out << "iterator find(const t_tuple& t) const {\n";
@@ -404,33 +483,35 @@ void SynthesiserDirectRelation::generateTypeStruct(std::ostream& out) {
         out << "(const t_tuple& lower, const t_tuple& upper, context& h) const {\n";
 
         // count size of search pattern
-        size_t indSize = 0;
+        size_t eqSize = 0;
         for (size_t column = 0; column < arity; column++) {
-            if (search[column] != AttributeConstraint::None) {
-                indSize++;
+            if (search[column] == AttributeConstraint::Equal) {
+                eqSize++;
             }
         }
 
-        // use the more efficient find() method if the search pattern is full
-        if (indSize == arity) {
-            out << "auto pos = ind_" << indNum << ".find(lower, h.hints_" << indNum << ");\n";
-            out << "auto fin = ind_" << indNum << ".end();\n";
-            out << "if (pos != fin) {fin = pos; ++fin;}\n";
-            out << "return make_range(pos, fin);\n";
-        } else {
-            // generate lower and upper bounds for range search
-            out << "t_tuple low(lower); t_tuple high(lower);\n";
-            // check which indices to pad out
-            for (size_t column = 0; column < arity; column++) {
-                // if bit number column is not set
-                if (search[column] == AttributeConstraint::None) {
-                    out << "low[" << column << "] = MIN_RAM_SIGNED;\n";
-                    out << "high[" << column << "] = MAX_RAM_SIGNED;\n";
-                }
-            }
-            out << "return make_range(ind_" << indNum << ".lower_bound(low, h.hints_" << indNum << "), ind_"
-                << indNum << ".upper_bound(high, h.hints_" << indNum << "));\n";
+        out << "t_comparator_" << indNum << " comparator;\n";
+        out << "int cmp = comparator(lower, upper);\n";
+
+        // if search signature is full we can apply this specialization
+        if (eqSize == arity) {
+            // use the more efficient find() method if lower == upper
+            out << "if (cmp == 0) {\n";
+            out << "    auto pos = ind_" << indNum << ".find(lower, h.hints_" << indNum << "_lower);\n";
+            out << "    auto fin = ind_" << indNum << ".end();\n";
+            out << "    if (pos != fin) {fin = pos; ++fin;}\n";
+            out << "    return make_range(pos, fin);\n";
+            out << "}\n";
         }
+        // if lower_bound > upper_bound then we return an empty range
+        out << "if (cmp > 0) {\n";
+        out << "    return make_range(ind_" << indNum << ".end(), ind_" << indNum << ".end());\n";
+        out << "}\n";
+        // otherwise use the general method
+        out << "return make_range(ind_" << indNum << ".lower_bound(lower, h.hints_" << indNum << "_lower"
+            << "), ind_" << indNum << ".upper_bound(upper, h.hints_" << indNum << "_upper"
+            << "));\n";
+
         out << "}\n";
 
         out << "range<t_ind_" << indNum << "::iterator> lowerUpperRange_" << search;
@@ -489,7 +570,7 @@ void SynthesiserDirectRelation::generateTypeStruct(std::ostream& out) {
 
     // end struct
     out << "};\n";
-}
+}  // namespace souffle
 
 // -------- Indirect Indexed B-Tree Relation --------
 
@@ -619,7 +700,10 @@ void SynthesiserIndirectRelation::generateTypeStruct(std::ostream& out) {
     // Create a struct storing the context hints for each index
     out << "struct context {\n";
     for (size_t i = 0; i < numIndexes; i++) {
-        out << "t_ind_" << i << "::operation_hints hints_" << i << ";\n";
+        out << "t_ind_" << i << "::operation_hints hints_" << i << "_lower"
+            << ";\n";
+        out << "t_ind_" << i << "::operation_hints hints_" << i << "_upper"
+            << ";\n";
     }
     out << "};\n";
     out << "context createContext() { return context(); }\n";
@@ -636,11 +720,13 @@ void SynthesiserIndirectRelation::generateTypeStruct(std::ostream& out) {
     out << "auto lease = insert_lock.acquire();\n";
     out << "if (contains(t, h)) return false;\n";
     out << "masterCopy = &dataTable.insert(t);\n";
-    out << "ind_" << masterIndex << ".insert(masterCopy, h.hints_" << masterIndex << ");\n";
+    out << "ind_" << masterIndex << ".insert(masterCopy, h.hints_" << masterIndex << "_lower"
+        << ");\n";
     out << "}\n";
     for (size_t i = 0; i < numIndexes; i++) {
         if (i != masterIndex) {
-            out << "ind_" << i << ".insert(masterCopy, h.hints_" << i << ");\n";
+            out << "ind_" << i << ".insert(masterCopy, h.hints_" << i << "_lower"
+                << ");\n";
         }
     }
     out << "return true;\n";
@@ -667,7 +753,8 @@ void SynthesiserIndirectRelation::generateTypeStruct(std::ostream& out) {
 
     // contains methods
     out << "bool contains(const t_tuple& t, context& h) const {\n";
-    out << "return ind_" << masterIndex << ".contains(&t, h.hints_" << masterIndex << ");\n";
+    out << "return ind_" << masterIndex << ".contains(&t, h.hints_" << masterIndex << "_lower"
+        << ");\n";
     out << "}\n";
 
     out << "bool contains(const t_tuple& t) const {\n";
@@ -682,7 +769,8 @@ void SynthesiserIndirectRelation::generateTypeStruct(std::ostream& out) {
 
     // find methods
     out << "iterator find(const t_tuple& t, context& h) const {\n";
-    out << "return ind_" << masterIndex << ".find(&t, h.hints_" << masterIndex << ");\n";
+    out << "return ind_" << masterIndex << ".find(&t, h.hints_" << masterIndex << "_lower"
+        << ");\n";
     out << "}\n";
 
     out << "iterator find(const t_tuple& t) const {\n";
@@ -711,33 +799,38 @@ void SynthesiserIndirectRelation::generateTypeStruct(std::ostream& out) {
         out << "(const t_tuple& lower, const t_tuple& upper, context& h) const {\n";
 
         // count size of search pattern
-        size_t indSize = 0;
+        size_t eqSize = 0;
         for (size_t column = 0; column < arity; column++) {
-            if (search[column] != AttributeConstraint::None) {
-                indSize++;
+            if (search[column] == AttributeConstraint::Equal) {
+                eqSize++;
             }
         }
 
+        out << "t_comparator_" << indNum << " comparator;\n";
+        out << "int cmp = comparator(&lower, &upper);\n";
+
         // use the more efficient find() method if the search pattern is full
-        if (indSize == arity) {
-            out << "auto pos = find(lower, h);\n";
-            out << "auto fin = end();\n";
-            out << "if (pos != fin) {fin = pos; ++fin;}\n";
-            out << "return make_range(pos, fin);\n";
-        } else {
-            // generate lower and upper bounds for range search
-            out << "t_tuple low(lower); t_tuple high(lower);\n";
-            // check which indices to pad out
-            for (size_t column = 0; column < arity; column++) {
-                // if bit number column is not set
-                if (search[column] == AttributeConstraint::None) {
-                    out << "low[" << column << "] = MIN_RAM_SIGNED;\n";
-                    out << "high[" << column << "] = MAX_RAM_SIGNED;\n";
-                }
-            }
-            out << "return range<iterator_" << indNum << ">(ind_" << indNum << ".lower_bound(&low, h.hints_"
-                << indNum << "), ind_" << indNum << ".upper_bound(&high, h.hints_" << indNum << "));\n";
+        if (eqSize == arity) {
+            // if lower == upper we can just do a find
+            out << "if (cmp == 0) {\n";
+            out << "    auto pos = find(lower, h);\n";
+            out << "    auto fin = end();\n";
+            out << "    if (pos != fin) {fin = pos; ++fin;}\n";
+            out << "    return make_range(pos, fin);\n";
+            out << "}\n";
         }
+        // if lower > upper then we have an empty range
+        out << "if (cmp > 0) {\n";
+        out << "    return range<iterator_" << indNum << ">(ind_" << indNum << ".end(), ind_" << indNum
+            << ".end());\n";
+        out << "}\n";
+
+        // otherwise do the default method
+        out << "return range<iterator_" << indNum << ">(ind_" << indNum << ".lower_bound(&lower, h.hints_"
+            << indNum << "_lower"
+            << "), ind_" << indNum << ".upper_bound(&upper, h.hints_" << indNum << "_upper"
+            << "));\n";
+
         out << "}\n";
 
         out << "range<iterator_" << indNum << "> lowerUpperRange_" << search;
@@ -790,7 +883,7 @@ void SynthesiserIndirectRelation::generateTypeStruct(std::ostream& out) {
 
     // end struct
     out << "};\n";
-}
+}  // namespace souffle
 
 // -------- Brie Relation --------
 
diff --git a/src/main.cpp b/src/main.cpp
index 5b2cf275b..85f33b082 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -534,9 +534,9 @@ int main(int argc, char** argv) {
                     std::make_unique<HoistConditionsTransformer>(), std::make_unique<MakeIndexTransformer>()
                     // not sure if I need to move out the filter transform
                     )),
-            std::make_unique<IndexedInequalityTransformer>(), std::make_unique<IfConversionTransformer>(),
-            std::make_unique<ChoiceConversionTransformer>(), std::make_unique<CollapseFiltersTransformer>(),
-            std::make_unique<TupleIdTransformer>(),
+            std::make_unique<RamLoopTransformer>(std::make_unique<IndexedInequalityTransformer>()),
+            std::make_unique<IfConversionTransformer>(), std::make_unique<ChoiceConversionTransformer>(),
+            std::make_unique<CollapseFiltersTransformer>(), std::make_unique<TupleIdTransformer>(),
             std::make_unique<RamLoopTransformer>(std::make_unique<RamTransformerSequence>(
                     std::make_unique<HoistAggregateTransformer>(), std::make_unique<TupleIdTransformer>())),
             std::make_unique<ExpandFilterTransformer>(), std::make_unique<HoistConditionsTransformer>(),
diff --git a/src/ram/analysis/RamIndexAnalysis.cpp b/src/ram/analysis/RamIndexAnalysis.cpp
index 4a63228b7..09450a3c1 100644
--- a/src/ram/analysis/RamIndexAnalysis.cpp
+++ b/src/ram/analysis/RamIndexAnalysis.cpp
@@ -34,6 +34,145 @@
 
 namespace souffle {
 
+SearchSignature::SearchSignature(size_t arity) : constraints(arity, AttributeConstraint::None) {}
+
+size_t SearchSignature::arity() const {
+    return constraints.size();
+}
+
+// array subscript operator
+AttributeConstraint SearchSignature::operator[](std::size_t pos) const {
+    assert(pos < constraints.size());
+    return constraints[pos];
+}
+
+// comparison operators
+bool SearchSignature::operator<(const SearchSignature& other) const {
+    assert(constraints.size() == other.constraints.size());
+    assert(isComparable(*this, other));  // be ordered to place them in a container together
+    if (isStrictSubset(*this, other)) {
+        return true;
+    } else {
+        return false;
+    }
+}
+
+bool SearchSignature::operator==(const SearchSignature& other) const {
+    assert(constraints.size() == other.constraints.size());
+    return constraints == other.constraints;
+}
+
+bool SearchSignature::operator!=(const SearchSignature& other) const {
+    return !(*this == other);
+}
+
+bool SearchSignature::empty() const {
+    size_t len = constraints.size();
+    for (size_t i = 0; i < len; ++i) {
+        if (constraints[i] != AttributeConstraint::None) {
+            return false;
+        }
+    }
+    return true;
+}
+
+bool SearchSignature::containsInequality() const {
+    for (size_t i = 0; i < constraints.size(); ++i) {
+        if (constraints[i] == AttributeConstraint::Inequal) {
+            return true;
+        }
+    }
+    return false;
+}
+
+// Note: We have 0 < 1 and 0 < 2 but we cannot say that 1 < 2.
+// The reason for this is to prevent search chains such as 100->101->201 which have no valid lex-order
+bool SearchSignature::isComparable(const SearchSignature& lhs, const SearchSignature& rhs) {
+    assert(lhs.arity() == rhs.arity());
+    size_t len = lhs.arity();
+    for (size_t i = 0; i < len; ++i) {
+        // cannot compare equality and inequality
+        if (lhs[i] != rhs[i] && lhs[i] != AttributeConstraint::None && rhs[i] != AttributeConstraint::None) {
+            return false;
+        }
+    }
+    // comparable if one is a strict subset of the other
+    return (isStrictSubset(lhs, rhs) && !lhs.containsInequality()) ||
+           (isStrictSubset(rhs, lhs) && !rhs.containsInequality());
+}
+
+bool SearchSignature::isSubset(const SearchSignature& lhs, const SearchSignature& rhs) {
+    assert(lhs.arity() == rhs.arity());
+    size_t len = lhs.arity();
+    for (size_t i = 0; i < len; ++i) {
+        if (lhs[i] == rhs[i]) {
+            continue;
+        }
+        if (lhs[i] < rhs[i]) {
+            continue;
+        }
+        if (lhs[i] > rhs[i]) {
+            return false;
+        }
+    }
+    return true;
+}
+
+bool SearchSignature::isStrictSubset(const SearchSignature& lhs, const SearchSignature& rhs) {
+    return isSubset(lhs, rhs) && lhs != rhs;
+}
+
+SearchSignature SearchSignature::getDelta(const SearchSignature& lhs, const SearchSignature& rhs) {
+    assert(lhs.arity() == rhs.arity());
+    SearchSignature delta(lhs.arity());
+    for (size_t i = 0; i < lhs.arity(); ++i) {
+        // if constraints are the same then delta is nothing
+        if (lhs.constraints[i] == rhs.constraints[i]) {
+            delta.constraints[i] = AttributeConstraint::None;
+        } else {
+            delta.constraints[i] = lhs.constraints[i];
+        }
+    }
+    return delta;
+}
+
+SearchSignature SearchSignature::getFullSearchSignature(size_t arity) {
+    SearchSignature res(arity);
+    for (size_t i = 0; i < arity; ++i) {
+        res.constraints[i] = AttributeConstraint::Equal;
+    }
+    return res;
+}
+
+SearchSignature SearchSignature::getDischarged(const SearchSignature& signature) {
+    SearchSignature res = signature;  // copy original
+    for (size_t i = 0; i < res.arity(); ++i) {
+        if (res[i] == AttributeConstraint::Inequal) {
+            res.set(i, AttributeConstraint::None);
+        }
+    }
+    return res;
+}
+
+// set a constraint
+SearchSignature& SearchSignature::set(size_t pos, AttributeConstraint constraint) {
+    assert(pos < constraints.size());
+    constraints[pos] = constraint;
+    return *this;
+}
+
+std::ostream& operator<<(std::ostream& out, const SearchSignature& signature) {
+    size_t len = signature.constraints.size();
+    for (size_t i = 0; i < len; ++i) {
+        switch (signature.constraints[i]) {
+            case AttributeConstraint::None: out << 0; break;
+            case AttributeConstraint::Equal: out << 1; break;
+            case AttributeConstraint::Inequal: out << 2; break;
+        }
+    }
+    return out;
+}
+
 void MaxMatching::addEdge(Node u, Node v) {
     assert(u >= 1 && v >= 1 && "Nodes must be greater than or equal to 1");
     if (graph.find(u) == graph.end()) {
@@ -114,9 +253,13 @@ bool MaxMatching::dfSearch(Node u) {
 
 const MaxMatching::Matchings& MaxMatching::solve() {
     while (bfSearch()) {
+        std::vector<Node> keys(graph.size());
         for (auto& it : graph) {
-            if (getMatch(it.first) == NullVertex) {
-                dfSearch(it.first);
+            keys.push_back(it.first);
+        }
+        for (auto node : keys) {
+            if (getMatch(node) == NullVertex) {
+                dfSearch(node);
             }
         }
     }
@@ -129,14 +272,12 @@ void MinIndexSelection::solve() {
         return;
     }
 
-    // map the signatures of each searches to a unique index for the matching problem
+    // map the signatures of each search to a unique index for the matching problem
     AttributeIndex currentIndex = 1;
     for (SearchSignature s : searches) {
-        // we skip if the search is empty
         if (s.empty()) {
             continue;
         }
-
         // map the signature to its unique index in each set
         signatureToIndexA.insert({s, currentIndex});
         signatureToIndexB.insert({s, currentIndex + 1});
@@ -150,8 +291,14 @@ void MinIndexSelection::solve() {
     for (auto search : searches) {
         // For this node check if other nodes are strict subsets
         for (auto itt : searches) {
-            if (search.isStrictSubset(itt)) {
-                matching.addEdge(signatureToIndexA[search], signatureToIndexB[itt]);
+            if (SearchSignature::isComparable(search, itt)) {
+                if (SearchSignature::isStrictSubset(search, itt)) {
+                    // we don't add edges from signatures with inequalities
+                    // Example: 210->211 will discharge the first inequality
+                    if (!search.containsInequality()) {
+                        matching.addEdge(signatureToIndexA[search], signatureToIndexB[itt]);
+                    }
+                }
             }
         }
     }
@@ -162,8 +309,7 @@ void MinIndexSelection::solve() {
     const MaxMatching::Matchings& matchings = matching.solve();
 
     // Extract the chains given the nodes and matchings
-    const ChainOrderMap chains = getChainsFromMatching(matchings, searches);
-
+    ChainOrderMap chains = getChainsFromMatching(matchings, searches);
     // Should never get no chains back as we never call calculate on an empty graph
     assert(!chains.empty());
     for (const auto& chain : chains) {
@@ -176,8 +322,25 @@ void MinIndexSelection::solve() {
             insertIndex(ids, delta);
         }
 
-        assert(!ids.empty());
+        // if we see duplicates in the lex-order then remove duplicates
+        bool changed = true;
+        while (changed) {
+            changed = false;
+            for (size_t i = 0; i < ids.size(); ++i) {
+                for (size_t j = i + 1; j < ids.size(); ++j) {
+                    if (ids[i] == ids[j]) {
+                        ids.erase(ids.begin() + i);
+                        changed = true;
+                        break;
+                    }
+                }
+                if (changed) {
+                    break;
+                }
+            }
+        }
 
+        assert(!ids.empty());
         orders.push_back(ids);
     }
 
@@ -185,11 +348,19 @@ void MinIndexSelection::solve() {
     for (auto search : searches) {
         int idx = map(search);
         size_t l = card(search);
+
         SearchSignature k(search.arity());
         for (size_t i = 0; i < l; i++) {
             k.set(orders[idx][i], AttributeConstraint::Equal);
         }
-        assert(k == search && "incorrect lexicographical order");
+        for (size_t i = 0; i < search.arity(); ++i) {
+            if (k[i] == AttributeConstraint::None && search[i] != AttributeConstraint::None) {
+                assert("incorrect lexicographical order");
+            }
+            if (k[i] != AttributeConstraint::None && search[i] == AttributeConstraint::None) {
+                assert("incorrect lexicographical order");
+            }
+        }
     }
 }
 
@@ -205,14 +376,19 @@ MinIndexSelection::Chain MinIndexSelection::getChain(
     while (true) {
         auto mit = match.find(signatureToIndexB[start]);  // we start from B side
         // on each iteration we swap sides when collecting the chain so we use the corresponding index map
-        chain.insert(start);
+        if (std::find(chain.begin(), chain.end(), start) == chain.end()) {
+            chain.push_back(start);
+        }
 
         if (mit == match.end()) {
+            std::reverse(chain.begin(), chain.end());
             return chain;
         }
 
         SearchSignature a = indexToSignature.at(mit->second);
-        chain.insert(a);
+        if (std::find(chain.begin(), chain.end(), a) == chain.end()) {
+            chain.push_back(a);
+        }
         start = a;
     }
 }
@@ -223,14 +399,13 @@ const MinIndexSelection::ChainOrderMap MinIndexSelection::getChainsFromMatching(
 
     // Get all unmatched nodes from A
     const SearchSet& umKeys = getUnmatchedKeys(match, nodes);
-
     // Case: if no unmatched nodes then we have an anti-chain
     if (umKeys.empty()) {
         for (auto node : nodes) {
-            std::set<SearchSignature> a;
-            a.insert(node);
+            Chain a;
+            a.push_back(node);
             chainToOrder.push_back(a);
-            return chainToOrder;
+            return mergeChains(chainToOrder);
         }
     }
 
@@ -248,7 +423,387 @@ const MinIndexSelection::ChainOrderMap MinIndexSelection::getChainsFromMatching(
 
     assert(!chainToOrder.empty());
 
-    return chainToOrder;
+    return mergeChains(chainToOrder);
+}
+
+const MinIndexSelection::ChainOrderMap MinIndexSelection::mergeChains(
+        MinIndexSelection::ChainOrderMap& chains) {
+    
+    bool changed = true;
+    while (changed) {
+        changed = false;
+        for (auto lhs_it = chains.begin(); lhs_it != chains.end(); ++lhs_it) {
+            const auto lhs = *lhs_it;
+            for (auto rhs_it = std::next(lhs_it); rhs_it != chains.end(); ++rhs_it) {
+                const auto rhs = *rhs_it;
+
+                // merge the two chains
+                Chain mergedChain;
+
+                // apply merge algorithm ensuring that both elements are always comparable
+                bool successfulMerge = true;
+                auto left = lhs.begin();
+                auto right = rhs.begin();
+
+                while (left != lhs.end() && right != rhs.end()) {
+                    if (SearchSignature::isComparable(*left, *right)) {
+                        // if left element is smaller, insert it and iterate to next in left chain
+                        if (*left < *right) {
+                            mergedChain.push_back(*left);
+                            ++left;
+                            continue;
+                        }
+                        // if right element is smaller, insert it and iterate to next in right chain
+                        if (*right < *left) {
+                            mergedChain.push_back(*right);
+                            ++right;
+                            continue;
+                        }
+                    } else {
+                        // if they aren't comparable when ignoring the 1->2 restriction we cannot merge since
+                        // we have an anti-chain
+                        if (!SearchSignature::isSubset(*left, *right) &&
+                                !SearchSignature::isSubset(*right, *left)) {
+                            successfulMerge = false;
+                            break;
+                        }
+
+                        // only merge in the circumstance where the delta between left and right contains 1->2
+                        // edges
+                        auto lower = SearchSignature::isSubset(*left, *right) ? *left : *right;
+                        auto upper = SearchSignature::isSubset(*left, *right) ? *right : *left;
+
+                        // cannot merge if lower has inequality since it would be discharged
+                        if (lower.containsInequality()) {
+                            successfulMerge = false;
+                            break;
+                        }
+
+                        auto delta = SearchSignature::getDelta(upper, lower);
+                        auto prevDelta = mergedChain.empty()
+                                                 ? lower
+                                                 : SearchSignature::getDelta(lower, mergedChain.back());
+
+                        bool onlyInequalities = true;
+                        for (size_t i = 0; i < delta.arity(); ++i) {
+                            if (delta[i] == AttributeConstraint::Equal) {
+                                onlyInequalities = false;
+                                break;
+                            }
+                        }
+
+                        // If equalities are in the delta set we cannot merge chains without discharging the
+                        // inequality Example: 110->211 w/ delta = 201 cannot produce a valid lex-order
+                        if (!onlyInequalities) {
+                            successfulMerge = false;
+                            break;
+                        }
+
+                        bool mergable = false;
+
+                        // if we have a 0->2 delta then we can merge
+                        // Example: 110->122 we can have the lex-order 0<1<2
+                        for (size_t i = 0; i < delta.arity(); ++i) {
+                            if (lower[i] == AttributeConstraint::None &&
+                                    upper[i] == AttributeConstraint::Inequal) {
+                                mergable = true;
+                            }
+                        }
+
+                        // otherwise if we have one of our inequalities in the prev delta then we can merge
+                        // Example: 1000->1011->1021 w/ prevDelta = 0011 delta = 0020
+                        for (size_t i = 0; i < delta.arity(); ++i) {
+                            if (delta[i] == AttributeConstraint::Inequal) {
+                                for (size_t j = 0; j < prevDelta.arity(); ++j) {
+                                    if (prevDelta[j] == AttributeConstraint::Equal) {
+                                        mergable = true;
+                                    }
+                                }
+                            }
+                        }
+
+                        if (!mergable) {
+                            successfulMerge = false;
+                            break;
+                        }
+
+                        // otherwise we merge chains!
+                        if (SearchSignature::isSubset(*left, *right)) {
+                            mergedChain.push_back(*left);
+                            ++left;
+                            continue;
+                        }
+
+                        if (SearchSignature::isSubset(*right, *left)) {
+                            mergedChain.push_back(*right);
+                            ++right;
+                            continue;
+                        }
+                    }
+                }
+
+                // failed to merge so find another pair of chains
+                if (!successfulMerge) {
+                    continue;
+                }
+
+                // if left chain is exhausted then merge the rest of right chain
+                if (left == lhs.end()) {
+                    while (right != rhs.end()) {
+                        mergedChain.push_back(*right);
+                        ++right;
+                    }
+                }
+                // if right chain is exhuasted then merge the rest of left chain
+                if (right == rhs.end()) {
+                    while (left != lhs.end()) {
+                        mergedChain.push_back(*left);
+                        ++left;
+                    }
+                }
+
+                changed = true;
+
+                // remove previous 2 chains
+                chains.erase(std::remove(chains.begin(), chains.end(), lhs), chains.end());
+                chains.erase(std::remove(chains.begin(), chains.end(), rhs), chains.end());
+
+                // insert merge chain
+                chains.push_back(mergedChain);
+                break;
+            }
+            if (changed) {
+                break;
+            }
+        }
+    }
+     
+    return dischargeToMergeChains(chains);
+}
+
+const MinIndexSelection::ChainOrderMap MinIndexSelection::dischargeToMergeChains(
+        MinIndexSelection::ChainOrderMap& chains) {
+    
+    bool changed = true;
+    while (changed) {
+        changed = false;
+        for (auto lhs_it = chains.begin(); lhs_it != chains.end(); ++lhs_it) {
+            const auto lhs = *lhs_it;
+            for (auto rhs_it = std::next(lhs_it); rhs_it != chains.end(); ++rhs_it) {
+                const auto rhs = *rhs_it;
+
+                // merge the two chains
+                Chain mergedChain;
+
+                // apply merge algorithm ensuring that both elements are always comparable
+                bool successfulMerge = true;
+                auto left = lhs.begin();
+                auto right = rhs.begin();
+
+                while (left != lhs.end() && right != rhs.end()) {
+                    auto leftDischarged = SearchSignature::getDischarged(*left);
+                    auto rightDischarged = SearchSignature::getDischarged(*right);
+
+                    if (SearchSignature::isComparable(*left, *right)) {
+                        // if left element is smaller, insert it and iterate to next in left chain
+                        if (*left < *right) {
+                            mergedChain.push_back(*left);
+                            ++left;
+                            continue;
+                        }
+                        // if right element is smaller, insert it and iterate to next in right chain
+                        if (*right < *left) {
+                            mergedChain.push_back(*right);
+                            ++right;
+                            continue;
+                        }
+                        // if after discharging one is smaller than the other then we can merge
+                    } else if (SearchSignature::isComparable(leftDischarged, *right) &&
+                               SearchSignature::isSubset(leftDischarged, *right)) {
+                        // if left element is smaller, insert it and iterate to next in left chain
+                        if (SearchSignature::isSubset(leftDischarged, *right)) {
+                            mergedChain.push_back(*left);
+                            ++left;
+                            continue;
+                        }
+                    } else if (SearchSignature::isComparable(rightDischarged, *left) &&
+                               SearchSignature::isSubset(rightDischarged, *left)) {
+                        // if right element is smaller, insert it and iterate to next in right chain
+                        if (SearchSignature::isSubset(rightDischarged, *left)) {
+                            mergedChain.push_back(*right);
+                            ++right;
+                            continue;
+                        }
+                        // from this point onwards they aren't comparable even after discharging
+                    } else {
+                        // if they aren't comparable when ignoring the 1->2 restriction we cannot merge since
+                        // we have an anti-chain
+
+                        if (!SearchSignature::isSubset(leftDischarged, *right) &&
+                                !SearchSignature::isSubset(rightDischarged, *left)) {
+                            successfulMerge = false;
+                            break;
+                        }
+
+                        // only merge in the circumstance where after discharging the delta between left and
+                        // right contains 1->2
+                        auto lower =
+                                SearchSignature::isSubset(leftDischarged, *right) ? leftDischarged : *right;
+                        auto upper =
+                                SearchSignature::isSubset(rightDischarged, *left) ? rightDischarged : *left;
+
+                        // cannot merge if lower has inequality since it would be discharged
+                        if (lower.containsInequality()) {
+                            successfulMerge = false;
+                            break;
+                        }
+
+                        auto delta = SearchSignature::getDelta(upper, lower);
+                        auto prevDelta = mergedChain.empty()
+                                                 ? lower
+                                                 : SearchSignature::getDelta(lower, mergedChain.back());
+
+                        bool onlyInequalities = true;
+                        for (size_t i = 0; i < delta.arity(); ++i) {
+                            if (delta[i] == AttributeConstraint::Equal) {
+                                onlyInequalities = false;
+                                break;
+                            }
+                        }
+
+                        // If equalities are in the delta set we cannot merge chains without discharging the
+                        // inequality Example: 110->211 w/ delta = 201 cannot produce a valid lex-order
+                        if (!onlyInequalities) {
+                            successfulMerge = false;
+                            break;
+                        }
+
+                        bool mergable = false;
+
+                        // if we have a 0->2 delta then we can merge
+                        // Example: 110->122 we can have the lex-order 0<1<2
+                        for (size_t i = 0; i < delta.arity(); ++i) {
+                            if (lower[i] == AttributeConstraint::None &&
+                                    upper[i] == AttributeConstraint::Inequal) {
+                                mergable = true;
+                            }
+                        }
+
+                        // otherwise if we have one of our inequalities in the prev delta then we can merge
+                        // Example: 1000->1011->1021 w/ prevDelta = 0011 delta = 0020
+                        for (size_t i = 0; i < delta.arity(); ++i) {
+                            if (delta[i] == AttributeConstraint::Inequal) {
+                                for (size_t j = 0; j < prevDelta.arity(); ++j) {
+                                    if (prevDelta[j] == AttributeConstraint::Equal) {
+                                        mergable = true;
+                                    }
+                                }
+                            }
+                        }
+
+                        if (!mergable) {
+                            successfulMerge = false;
+                            break;
+                        }
+
+                        // otherwise we merge chains!
+                        if (SearchSignature::isSubset(leftDischarged, *right)) {
+                            mergedChain.push_back(*left);
+                            ++left;
+                            continue;
+                        }
+
+                        if (SearchSignature::isSubset(rightDischarged, *left)) {
+                            mergedChain.push_back(*right);
+                            ++right;
+                            continue;
+                        }
+                    }
+                }
+
+                // failed to merge so find another pair of chains
+                if (!successfulMerge) {
+                    continue;
+                }
+
+                // if left chain is exhausted then merge the rest of right chain
+                if (left == lhs.end()) {
+                    while (right != rhs.end()) {
+                        mergedChain.push_back(*right);
+                        ++right;
+                    }
+                }
+                // if right chain is exhuasted then merge the rest of left chain
+                if (right == rhs.end()) {
+                    while (left != lhs.end()) {
+                        mergedChain.push_back(*left);
+                        ++left;
+                    }
+                }
+
+                changed = true;
+
+                // remove previous 2 chains
+                chains.erase(std::remove(chains.begin(), chains.end(), lhs), chains.end());
+                chains.erase(std::remove(chains.begin(), chains.end(), rhs), chains.end());
+
+                // insert merge chain
+                chains.push_back(mergedChain);
+                break;
+            }
+            if (changed) {
+                break;
+            }
+        }
+    }
+        
+    return chains;
+}
+
+MinIndexSelection::AttributeSet MinIndexSelection::getAttributesToDischarge(
+        const SearchSignature& s, const RamRelation& rel) {
+    // by default we have all attributes w/inequalities discharged
+    AttributeSet attributesToDischarge;
+
+    for (size_t i = 0; i < s.arity(); ++i) {
+        if (s[i] == AttributeConstraint::Inequal) {
+            attributesToDischarge.insert(i);
+        }
+    }
+
+    // if we don't have a btree then we don't retain any inequalities
+    if (rel.getRepresentation() != RelationRepresentation::BTREE &&
+            rel.getRepresentation() != RelationRepresentation::DEFAULT) {
+        return attributesToDischarge;
+    }
+    if (Global::config().has("provenance")) {
+        return attributesToDischarge;
+    } 
+    
+     
+    auto chains = getAllChains();
+    // find the chain that the operation lives inside
+    for (auto chain : chains) {
+        // get the last operation in the chain
+        auto end = *chain.rbegin();
+        // if the current operation is this one then we can permit a single indexed inequality
+        if (end == s) {
+            for (size_t i = 0; i < s.arity(); ++i) {
+                // don't discharge an inequality if we have a numeric attribute
+                if (s[i] == AttributeConstraint::Inequal) {
+                    std::string type = rel.getAttributeTypes()[i];
+                    if (type[0] == 'i' || type[0] == 'u' || type[0] == 'f') {
+                        // if this is an inequality then it won't be discharged
+                        attributesToDischarge.erase(i);
+                        break;  // we break here so as to only permit a single indexed inequality
+                    }
+                }
+            }
+            break;  // we only care about the chain that the operation belongs to
+        }
+    }
+    
+    return attributesToDischarge;
 }
 
 void RamIndexAnalysis::run(const RamTranslationUnit& translationUnit) {
@@ -390,7 +945,6 @@ SearchSignature RamIndexAnalysis::getSearchSignature(const RamIndexOperation* se
 
     auto lower = search->getRangePattern().first;
     auto upper = search->getRangePattern().second;
-
     SearchSignature keys(arity);
     for (size_t i = 0; i < arity; ++i) {
         // if both bounds are undefined
diff --git a/src/ram/analysis/RamIndexAnalysis.h b/src/ram/analysis/RamIndexAnalysis.h
index c7e1eec0c..d8c50e9d7 100644
--- a/src/ram/analysis/RamIndexAnalysis.h
+++ b/src/ram/analysis/RamIndexAnalysis.h
@@ -16,6 +16,8 @@
 
 #pragma once
 
+#include "Global.h"
+#include "ram/RamRelation.h"
 #include "ram/analysis/RamAnalysis.h"
 #include "utility/MiscUtil.h"
 #include <cassert>
@@ -27,6 +29,7 @@
 #include <memory>
 #include <set>
 #include <string>
+#include <unordered_map>
 #include <unordered_set>
 #include <utility>
 #include <vector>
@@ -50,118 +53,47 @@ enum class AttributeConstraint { None, Equal, Inequal };
  * no value exists (i.e. attribute is unbounded) in the search. */
 class SearchSignature {
 public:
-    explicit SearchSignature(size_t arity) : constraints(arity, AttributeConstraint::None) {}
-
-    inline size_t arity() const {
-        return constraints.size();
-    }
+    explicit SearchSignature(size_t arity);
+    size_t arity() const;
 
     // array subscript operator
-    inline AttributeConstraint operator[](std::size_t pos) const {
-        assert(pos < constraints.size());
-        return constraints[pos];
-    }
+    AttributeConstraint operator[](std::size_t pos) const;
 
     // comparison operators
-    inline bool operator<(const SearchSignature& other) const {
-        assert(constraints.size() == other.constraints.size());
-        size_t len = constraints.size();
-        for (size_t i = 0; i < len; ++i) {
-            size_t index = len - i - 1;  // get right to left index order
-
-            // if ours has a constraint and other's has a constraint then it is smaller
-            if (constraints[index] < other.constraints[index]) {
-                return true;
-            }
-            // if ours has a constraint and other's has no constraint then it is larger
-            else if (constraints[index] > other.constraints[index]) {
-                return false;
-            }
-        }
-        return false;
-    }
-
-    // needed for asserts
-    inline bool operator==(const SearchSignature& other) const {
-        assert(constraints.size() == other.constraints.size());
-        return constraints == other.constraints;
-    }
-
-    inline bool empty() const {
-        size_t len = constraints.size();
-        for (size_t i = 0; i < len; ++i) {
-            if (constraints[i] != AttributeConstraint::None) {
-                return false;
-            }
-        }
-        return true;
-    }
+    bool operator<(const SearchSignature& other) const;
+    bool operator==(const SearchSignature& other) const;
+    bool operator!=(const SearchSignature& other) const;
+
+    bool empty() const;
+    bool containsInequality() const;
+    static bool isComparable(const SearchSignature& lhs, const SearchSignature& rhs);
+    static bool isSubset(const SearchSignature& lhs, const SearchSignature& rhs);
+    static bool isStrictSubset(const SearchSignature& lhs, const SearchSignature& rhs);
+    static SearchSignature getDelta(const SearchSignature& lhs, const SearchSignature& rhs);
+    static SearchSignature getFullSearchSignature(size_t arity);
+    static SearchSignature getDischarged(const SearchSignature& signature);
+    // set a constraint
+    SearchSignature& set(size_t pos, AttributeConstraint constraint);
+    friend std::ostream& operator<<(std::ostream& out, const SearchSignature& signature);
 
-    inline bool isStrictSubset(const SearchSignature& other) const {
-        assert(constraints.size() == other.constraints.size());
-        size_t len = constraints.size();
-        for (size_t i = 0; i < len; ++i) {
-            if ((constraints[i] != AttributeConstraint::None) &&
-                    (other.constraints[i] == AttributeConstraint::None)) {
-                return false;
+    // hashing class
+    class Hasher {
+    public:
+        size_t operator()(const SearchSignature& s) const {
+            auto& vec = s.constraints;
+            std::size_t seed = vec.size();
+            for (auto& i : vec) {
+                seed ^= static_cast<size_t>(i) + 0x9e3779b9 + (seed << 6) + (seed >> 2);
             }
+            return seed;
         }
-        return constraints != other.constraints;
-    }
-
-    static SearchSignature getDelta(const SearchSignature& lhs, const SearchSignature& rhs) {
-        assert(lhs.arity() == rhs.arity());
-        SearchSignature delta(lhs.arity());
-        for (size_t i = 0; i < lhs.arity(); ++i) {
-            // if constraints are the same then delta is nothing
-            if (lhs.constraints[i] == rhs.constraints[i]) {
-                delta.constraints[i] = AttributeConstraint::None;
-                continue;
-            }
-
-            // if rhs has no constraint then delta has lhs constraint
-            if (rhs.constraints[i] == AttributeConstraint::None) {
-                delta.constraints[i] = lhs.constraints[i];
-                continue;
-            }
-
-            assert(false && "lhs and rhs should not have inequal/equal pair constraints");
-        }
-        return delta;
-    }
-
-    static SearchSignature getFullSearchSignature(size_t arity) {
-        SearchSignature res(arity);
-        for (size_t i = 0; i < arity; ++i) {
-            res.constraints[i] = AttributeConstraint::Equal;
-        }
-        return res;
-    }
-
-    // set a constraint
-    inline SearchSignature& set(size_t pos, AttributeConstraint constraint) {
-        assert(pos < constraints.size());
-        constraints[pos] = constraint;
-        return *this;
-    }
-
-    friend std::ostream& operator<<(std::ostream& out, const SearchSignature& signature);
+    };
 
 private:
     std::vector<AttributeConstraint> constraints;
 };
 
-inline std::ostream& operator<<(std::ostream& out, const SearchSignature& signature) {
-    size_t len = signature.constraints.size();
-    for (size_t i = 0; i < len; ++i) {
-        switch (signature.constraints[len - 1 - i]) {
-            case AttributeConstraint::None: out << 0; break;
-            case AttributeConstraint::Equal: out << 1; break;
-            case AttributeConstraint::Inequal: out << 2; break;
-        }
-    }
-    return out;
-}
+std::ostream& operator<<(std::ostream& out, const SearchSignature& signature);
 
 /**
  * @class MaxMatching
@@ -184,7 +116,7 @@ class MaxMatching {
 public:
     using Node = uint32_t;
     /* The nodes of the bi-partite graph are index signatures of RAM operation */
-    using Nodes = std::set<Node, std::greater<Node>>;
+    using Nodes = std::unordered_set<Node>;
     /* Distance between nodes */
     using Distance = int;
     /**
@@ -192,7 +124,7 @@ public:
      * graph maps to another node. If no map exist for a node, there is no adjacent edge
      * exists for that node.
      */
-    using Matchings = std::map<Node, Node, std::greater<Node>>;
+    using Matchings = std::unordered_map<Node, Node>;
 
     /* Node constant representing no match */
     const Node NullVertex = 0;
@@ -248,11 +180,11 @@ private:
     /**
      * Edges in the bi-partite graph
      */
-    using Edges = std::set<Node>;
+    using Edges = std::unordered_set<Node>;
     /**
      * Bi-partite graph of instance
      */
-    using Graph = std::map<Node, Edges>;
+    using Graph = std::unordered_map<Node, Edges>;
     /**
      * distance function of nodes
      */
@@ -279,13 +211,28 @@ private:
 class MinIndexSelection {
 public:
     using AttributeIndex = uint32_t;
-    using SignatureIndexMap = std::map<SearchSignature, AttributeIndex>;
-    using IndexSignatureMap = std::map<AttributeIndex, SearchSignature>;
+    using SignatureMap = std::unordered_map<SearchSignature, SearchSignature, SearchSignature::Hasher>;
+    using SignatureIndexMap = std::unordered_map<SearchSignature, AttributeIndex, SearchSignature::Hasher>;
+    using IndexSignatureMap = std::unordered_map<AttributeIndex, SearchSignature>;
     using LexOrder = std::vector<AttributeIndex>;
     using OrderCollection = std::vector<LexOrder>;
-    using Chain = std::set<SearchSignature>;
+    using Chain = std::vector<SearchSignature>;
+    // A chain is a vector of SearchSignature to support inserting incomparable elements later
+    // E.g. 1 --> 2 we don't have 1 and 2 as comparable but they form a valid lex-order
     using ChainOrderMap = std::vector<Chain>;
-    using SearchSet = std::set<SearchSignature>;
+
+    class SearchComparator {
+    public:
+        bool operator()(const SearchSignature& s1, const SearchSignature& s2) const {
+            auto hasher = SearchSignature::Hasher();
+            return hasher(s1) < hasher(s2);
+        }
+    };
+
+    using SearchSet = std::set<SearchSignature, SearchComparator>;
+    // SearchSignatures only have a partial order, however we need to produce a unique ordering of searches
+    // when we output the name of the index and therefore we order the SearchSignatures arbitrarily by their
+    // hashes
     using AttributeSet = std::unordered_set<AttributeIndex>;
 
     /** @Brief Add new key to an Index Set */
@@ -338,9 +285,9 @@ public:
      *  @param size of the index
      */
     void insertDefaultTotalIndex(size_t arity) {
-        Chain chain = std::set<SearchSignature>();
+        Chain chain = std::vector<SearchSignature>();
         SearchSignature fullIndexKey = SearchSignature::getFullSearchSignature(arity);
-        chain.insert(fullIndexKey);
+        chain.push_back(fullIndexKey);
         chainToOrder.push_back(std::move(chain));
         LexOrder totalOrder;
         for (size_t i = 0; i < arity; ++i) {
@@ -348,22 +295,9 @@ public:
         }
         orders.push_back(std::move(totalOrder));
     }
-    /** Return the attribute position for each inequality that should be discharged.
-     *  NOTE: For now, all inequalities will be discharged but later the lex-orders will be inspected
-     * If an inequality is not in the last position of a lex-order only then is it discharged
+    /** Return the attribute position for each indexed operation that should be discharged.
      */
-    AttributeSet getAttributesToDischarge() {
-        AttributeSet attributesToDischarge;
-        for (auto search : searches) {
-            size_t arity = search.arity();
-            for (size_t i = 0; i < arity; ++i) {
-                if (search[i] == AttributeConstraint::Inequal) {
-                    attributesToDischarge.insert(i);
-                }
-            }
-        }
-        return attributesToDischarge;
-    }
+    AttributeSet getAttributesToDischarge(const SearchSignature& s, const RamRelation& rel);
 
 protected:
     SignatureIndexMap signatureToIndexA;  // mapping of a SearchSignature on A to its unique index
@@ -390,21 +324,26 @@ protected:
         assert(orders.size() == chainToOrder.size() && "Order and Chain Sizes do not match!!");
         int i = 0;
         for (auto it = chainToOrder.begin(); it != chainToOrder.end(); ++it, ++i) {
-            if (it->find(cols) != it->end()) {
+            if (std::find(it->begin(), it->end(), cols) != it->end()) {
                 assert((size_t)i < orders.size());
                 return i;
             }
         }
+
         fatal("cannot find matching lexicographical order");
     }
 
     /** @Brief insert an index based on the delta */
     void insertIndex(LexOrder& ids, SearchSignature delta) {
+        LexOrder backlog;  // add inequalities at the end
         for (size_t pos = 0; pos < delta.arity(); pos++) {
-            if (delta[pos] != AttributeConstraint::None) {
+            if (delta[pos] == AttributeConstraint::Equal) {
                 ids.push_back(pos);
+            } else if (delta[pos] == AttributeConstraint::Inequal) {
+                backlog.push_back(pos);
             }
         }
+        ids.insert(ids.end(), backlog.begin(), backlog.end());
     }
 
     /** @Brief get a chain from a matching
@@ -420,6 +359,12 @@ protected:
     /** @Brief get all chains from the matching */
     const ChainOrderMap getChainsFromMatching(const MaxMatching::Matchings& match, const SearchSet& nodes);
 
+    /** @Brief merge chains to produce a minimal chain cover (without discharging) */
+    const ChainOrderMap mergeChains(ChainOrderMap& chains);
+
+    /** @Brief merge chains to discharge 1 inequality for 1 less chain */
+    const ChainOrderMap dischargeToMergeChains(ChainOrderMap& chains);
+
     /** @Brief get all nodes which are unmatched from A-> B */
     const SearchSet getUnmatchedKeys(const MaxMatching::Matchings& match, const SearchSet& nodes) {
         SearchSet unmatched;
diff --git a/src/ram/transform/RamTransforms.cpp b/src/ram/transform/RamTransforms.cpp
index addea9692..1b9467572 100644
--- a/src/ram/transform/RamTransforms.cpp
+++ b/src/ram/transform/RamTransforms.cpp
@@ -250,131 +250,225 @@ bool HoistConditionsTransformer::hoistConditions(RamProgram& program) {
 }
 
 using ExpressionPair = std::pair<std::unique_ptr<RamExpression>, std::unique_ptr<RamExpression>>;
-// Retrieves the <expr1> <= Tuple[level, element] <= <expr2> part of the constraint as a pair { <expr1>,
-// <expr2> }
-ExpressionPair MakeIndexTransformer::getLowerUpperExpression(
-        RamCondition* c, size_t& element, int identifier) {
-    if (auto* binRelOp = dynamic_cast<RamConstraint*>(c)) {
-        // TODO: FIXME: how does this interact w/ `FEQ`?
 
-        if (isEqConstraint(binRelOp->getOperator())) {
-            if (const auto* lhs = dynamic_cast<const RamTupleElement*>(&binRelOp->getLHS())) {
-                const RamExpression* rhs = &binRelOp->getRHS();
-                if (lhs->getTupleId() == identifier && rla->getLevel(rhs) < identifier) {
-                    element = lhs->getElement();
-                    return {clone(rhs), clone(rhs)};
-                }
+ExpressionPair MakeIndexTransformer::getSignedExpressionPair(
+        const RamConstraint* binRelOp, size_t& element, int identifier) {
+    if (isLessEqualSigned(binRelOp->getOperator())) {
+        // Tuple[level, element] <= <expr>
+        if (const auto* lhs = dynamic_cast<const RamTupleElement*>(&binRelOp->getLHS())) {
+            const RamExpression* rhs = &binRelOp->getRHS();
+            if (lhs->getTupleId() == identifier && rla->getLevel(rhs) < identifier) {
+                element = lhs->getElement();
+                return {std::make_unique<RamUndefValue>(), clone(rhs)};
             }
-            if (const auto* rhs = dynamic_cast<const RamTupleElement*>(&binRelOp->getRHS())) {
-                const RamExpression* lhs = &binRelOp->getLHS();
-                if (rhs->getTupleId() == identifier && rla->getLevel(lhs) < identifier) {
-                    element = rhs->getElement();
-                    return {clone(lhs), clone(lhs)};
-                }
+        }
+        // <expr> <= Tuple[level, element]
+        if (const auto* rhs = dynamic_cast<const RamTupleElement*>(&binRelOp->getRHS())) {
+            const RamExpression* lhs = &binRelOp->getLHS();
+            if (rhs->getTupleId() == identifier && rla->getLevel(lhs) < identifier) {
+                element = rhs->getElement();
+                return {clone(lhs), std::make_unique<RamUndefValue>()};
             }
         }
+    }
 
-        if (isLessEqualConstraint(binRelOp->getOperator())) {
-            // Tuple[level, element] <= <expr>
-            if (const auto* lhs = dynamic_cast<const RamTupleElement*>(&binRelOp->getLHS())) {
-                const RamExpression* rhs = &binRelOp->getRHS();
-                if (lhs->getTupleId() == identifier && rla->getLevel(rhs) < identifier) {
-                    element = lhs->getElement();
-                    return {std::make_unique<RamUndefValue>(), clone(rhs)};
-                }
+    if (isGreaterEqualSigned(binRelOp->getOperator())) {
+        // Tuple[level, element] >= <expr>
+        if (const auto* lhs = dynamic_cast<const RamTupleElement*>(&binRelOp->getLHS())) {
+            const RamExpression* rhs = &binRelOp->getRHS();
+            if (lhs->getTupleId() == identifier && rla->getLevel(rhs) < identifier) {
+                element = lhs->getElement();
+                return {clone(rhs), std::make_unique<RamUndefValue>()};
             }
-            // <expr> <= Tuple[level, element]
-            if (const auto* rhs = dynamic_cast<const RamTupleElement*>(&binRelOp->getRHS())) {
-                const RamExpression* lhs = &binRelOp->getLHS();
-                if (rhs->getTupleId() == identifier && rla->getLevel(lhs) < identifier) {
-                    element = rhs->getElement();
-                    return {clone(lhs), std::make_unique<RamUndefValue>()};
-                }
+        }
+        // <expr> >= Tuple[level, element]
+        if (const auto* rhs = dynamic_cast<const RamTupleElement*>(&binRelOp->getRHS())) {
+            const RamExpression* lhs = &binRelOp->getLHS();
+            if (rhs->getTupleId() == identifier && rla->getLevel(lhs) < identifier) {
+                element = rhs->getElement();
+                return {std::make_unique<RamUndefValue>(), clone(lhs)};
             }
         }
+    }
+    if (isLessThanSigned(binRelOp->getOperator())) {
+        // Tuple[level, element] < <expr>
+        // is equivalent to
+        // Tuple[level, element] <= <expr> - 1
+        if (const auto* lhs = dynamic_cast<const RamTupleElement*>(&binRelOp->getLHS())) {
+            const RamExpression* rhs = &binRelOp->getRHS();
+            if (lhs->getTupleId() == identifier && rla->getLevel(rhs) < identifier) {
+                element = lhs->getElement();
+                std::vector<std::unique_ptr<RamExpression>> expressions;
+                expressions.push_back(std::unique_ptr<RamExpression>(rhs->clone()));
+                expressions.push_back(std::make_unique<RamSignedConstant>(RamDomain(1)));
+
+                return {std::make_unique<RamUndefValue>(),
+                        std::make_unique<RamIntrinsicOperator>(FunctorOp::SUB, std::move(expressions))};
+            }
+        }
+        // <expr> < Tuple[level, element]
+        // is equivalent to
+        // <expr> + 1 <= Tuple[level, element]
+        if (const auto* rhs = dynamic_cast<const RamTupleElement*>(&binRelOp->getRHS())) {
+            const RamExpression* lhs = &binRelOp->getLHS();
+            if (rhs->getTupleId() == identifier && rla->getLevel(lhs) < identifier) {
+                element = rhs->getElement();
+                std::vector<std::unique_ptr<RamExpression>> expressions;
+                expressions.push_back(std::unique_ptr<RamExpression>(lhs->clone()));
+                expressions.push_back(std::make_unique<RamSignedConstant>(RamDomain(1)));
+
+                return {std::make_unique<RamIntrinsicOperator>(FunctorOp::ADD, std::move(expressions)),
+                        std::make_unique<RamUndefValue>()};
+            }
+        }
+    }
 
-        if (isGreaterEqualConstraint(binRelOp->getOperator())) {
-            // Tuple[level, element] >= <expr>
-            if (const auto* lhs = dynamic_cast<const RamTupleElement*>(&binRelOp->getLHS())) {
-                const RamExpression* rhs = &binRelOp->getRHS();
-                if (lhs->getTupleId() == identifier && rla->getLevel(rhs) < identifier) {
-                    element = lhs->getElement();
-                    return {clone(rhs), std::make_unique<RamUndefValue>()};
-                }
+    if (isGreaterThanSigned(binRelOp->getOperator())) {
+        // Tuple[level, element] > <expr>
+        // is equivalent to
+        // Tuple[level, element] >= <expr> + 1
+        if (const auto* lhs = dynamic_cast<const RamTupleElement*>(&binRelOp->getLHS())) {
+            const RamExpression* rhs = &binRelOp->getRHS();
+            if (lhs->getTupleId() == identifier && rla->getLevel(rhs) < identifier) {
+                element = lhs->getElement();
+                std::vector<std::unique_ptr<RamExpression>> expressions;
+                expressions.push_back(std::unique_ptr<RamExpression>(rhs->clone()));
+                expressions.push_back(std::make_unique<RamSignedConstant>(RamDomain(1)));
+
+                return {std::make_unique<RamIntrinsicOperator>(FunctorOp::ADD, std::move(expressions)),
+                        std::make_unique<RamUndefValue>()};
             }
-            // <expr> >= Tuple[level, element]
-            if (const auto* rhs = dynamic_cast<const RamTupleElement*>(&binRelOp->getRHS())) {
-                const RamExpression* lhs = &binRelOp->getLHS();
-                if (rhs->getTupleId() == identifier && rla->getLevel(lhs) < identifier) {
-                    element = rhs->getElement();
-                    return {std::make_unique<RamUndefValue>(), clone(lhs)};
-                }
+        }
+        // <expr> > Tuple[level, element]
+        // is equivalent to
+        // <expr> - 1 >= Tuple[level, element]
+        if (const auto* rhs = dynamic_cast<const RamTupleElement*>(&binRelOp->getRHS())) {
+            const RamExpression* lhs = &binRelOp->getLHS();
+            if (rhs->getTupleId() == identifier && rla->getLevel(lhs) < identifier) {
+                element = rhs->getElement();
+                std::vector<std::unique_ptr<RamExpression>> expressions;
+                expressions.push_back(std::unique_ptr<RamExpression>(lhs->clone()));
+                expressions.push_back(std::make_unique<RamSignedConstant>(RamDomain(1)));
+
+                return {std::make_unique<RamUndefValue>(),
+                        std::make_unique<RamIntrinsicOperator>(FunctorOp::SUB, std::move(expressions))};
             }
         }
-        if (isLessThanConstraint(binRelOp->getOperator())) {
-            // Tuple[level, element] < <expr>
-            // is equivalent to
-            // Tuple[level, element] <= <expr> - 1
-            if (const auto* lhs = dynamic_cast<const RamTupleElement*>(&binRelOp->getLHS())) {
-                const RamExpression* rhs = &binRelOp->getRHS();
-                if (lhs->getTupleId() == identifier && rla->getLevel(rhs) < identifier) {
-                    element = lhs->getElement();
-                    std::vector<std::unique_ptr<RamExpression>> expressions;
-                    expressions.push_back(souffle::clone(rhs));
-                    expressions.push_back(std::make_unique<RamSignedConstant>(RamDomain(1)));
+    }
+    return {std::make_unique<RamUndefValue>(), std::make_unique<RamUndefValue>()};
+}
 
-                    return {std::make_unique<RamUndefValue>(),
-                            std::make_unique<RamIntrinsicOperator>(FunctorOp::SUB, std::move(expressions))};
-                }
+ExpressionPair MakeIndexTransformer::getUnsignedExpressionPair(
+        const RamConstraint* binRelOp, size_t& element, int identifier) {
+    if (isLessEqualUnsigned(binRelOp->getOperator())) {
+        // Tuple[level, element] <= <expr>
+        if (const auto* lhs = dynamic_cast<const RamTupleElement*>(&binRelOp->getLHS())) {
+            const RamExpression* rhs = &binRelOp->getRHS();
+            if (lhs->getTupleId() == identifier && rla->getLevel(rhs) < identifier) {
+                element = lhs->getElement();
+                return {std::make_unique<RamUndefValue>(), clone(rhs)};
             }
-            // <expr> < Tuple[level, element]
-            // is equivalent to
-            // <expr> + 1 <= Tuple[level, element]
-            if (const auto* rhs = dynamic_cast<const RamTupleElement*>(&binRelOp->getRHS())) {
-                const RamExpression* lhs = &binRelOp->getLHS();
-                if (rhs->getTupleId() == identifier && rla->getLevel(lhs) < identifier) {
-                    element = rhs->getElement();
-                    std::vector<std::unique_ptr<RamExpression>> expressions;
-                    expressions.push_back(souffle::clone(lhs));
-                    expressions.push_back(std::make_unique<RamSignedConstant>(RamDomain(1)));
+        }
+        // <expr> <= Tuple[level, element]
+        if (const auto* rhs = dynamic_cast<const RamTupleElement*>(&binRelOp->getRHS())) {
+            const RamExpression* lhs = &binRelOp->getLHS();
+            if (rhs->getTupleId() == identifier && rla->getLevel(lhs) < identifier) {
+                element = rhs->getElement();
+                return {clone(lhs), std::make_unique<RamUndefValue>()};
+            }
+        }
+    }
+    if (isGreaterEqualUnsigned(binRelOp->getOperator())) {
+        // Tuple[level, element] >= <expr>
+        if (const auto* lhs = dynamic_cast<const RamTupleElement*>(&binRelOp->getLHS())) {
+            const RamExpression* rhs = &binRelOp->getRHS();
+            if (lhs->getTupleId() == identifier && rla->getLevel(rhs) < identifier) {
+                element = lhs->getElement();
+                return {clone(rhs), std::make_unique<RamUndefValue>()};
+            }
+        }
+        // <expr> >= Tuple[level, element]
+        if (const auto* rhs = dynamic_cast<const RamTupleElement*>(&binRelOp->getRHS())) {
+            const RamExpression* lhs = &binRelOp->getLHS();
+            if (rhs->getTupleId() == identifier && rla->getLevel(lhs) < identifier) {
+                element = rhs->getElement();
+                return {std::make_unique<RamUndefValue>(), clone(lhs)};
+            }
+        }
+    }
+    return {std::make_unique<RamUndefValue>(), std::make_unique<RamUndefValue>()};
+}
 
-                    return {std::make_unique<RamIntrinsicOperator>(FunctorOp::ADD, std::move(expressions)),
-                            std::make_unique<RamUndefValue>()};
-                }
+ExpressionPair MakeIndexTransformer::getFloatExpressionPair(
+        const RamConstraint* binRelOp, size_t& element, int identifier) {
+    if (isLessEqualFloat(binRelOp->getOperator())) {
+        // Tuple[level, element] <= <expr>
+        if (const auto* lhs = dynamic_cast<const RamTupleElement*>(&binRelOp->getLHS())) {
+            const RamExpression* rhs = &binRelOp->getRHS();
+            if (lhs->getTupleId() == identifier && rla->getLevel(rhs) < identifier) {
+                element = lhs->getElement();
+                return {std::make_unique<RamUndefValue>(), clone(rhs)};
+            }
+        }
+        // <expr> <= Tuple[level, element]
+        if (const auto* rhs = dynamic_cast<const RamTupleElement*>(&binRelOp->getRHS())) {
+            const RamExpression* lhs = &binRelOp->getLHS();
+            if (rhs->getTupleId() == identifier && rla->getLevel(lhs) < identifier) {
+                element = rhs->getElement();
+                return {clone(lhs), std::make_unique<RamUndefValue>()};
+            }
+        }
+    }
+
+    if (isGreaterEqualFloat(binRelOp->getOperator())) {
+        // Tuple[level, element] >= <expr>
+        if (const auto* lhs = dynamic_cast<const RamTupleElement*>(&binRelOp->getLHS())) {
+            const RamExpression* rhs = &binRelOp->getRHS();
+            if (lhs->getTupleId() == identifier && rla->getLevel(rhs) < identifier) {
+                element = lhs->getElement();
+                return {clone(rhs), std::make_unique<RamUndefValue>()};
+            }
+        }
+        // <expr> >= Tuple[level, element]
+        if (const auto* rhs = dynamic_cast<const RamTupleElement*>(&binRelOp->getRHS())) {
+            const RamExpression* lhs = &binRelOp->getLHS();
+            if (rhs->getTupleId() == identifier && rla->getLevel(lhs) < identifier) {
+                element = rhs->getElement();
+                return {std::make_unique<RamUndefValue>(), clone(lhs)};
             }
         }
+    }
+    return {std::make_unique<RamUndefValue>(), std::make_unique<RamUndefValue>()};
+}
+
+// Retrieves the <expr1> <= Tuple[level, element] <= <expr2> part of the constraint as a pair { <expr1>,
+// <expr2> }
+ExpressionPair MakeIndexTransformer::getLowerUpperExpression(
+        RamCondition* c, size_t& element, int identifier) {
+    if (auto* binRelOp = dynamic_cast<RamConstraint*>(c)) {
+        // TODO: FIXME: how does this interact w/ `FEQ`?
 
-        if (isGreaterThanConstraint(binRelOp->getOperator())) {
-            // Tuple[level, element] > <expr>
-            // is equivalent to
-            // Tuple[level, element] >= <expr> + 1
+        if (isEqConstraint(binRelOp->getOperator())) {
             if (const auto* lhs = dynamic_cast<const RamTupleElement*>(&binRelOp->getLHS())) {
                 const RamExpression* rhs = &binRelOp->getRHS();
                 if (lhs->getTupleId() == identifier && rla->getLevel(rhs) < identifier) {
                     element = lhs->getElement();
-                    std::vector<std::unique_ptr<RamExpression>> expressions;
-                    expressions.push_back(souffle::clone(rhs));
-                    expressions.push_back(std::make_unique<RamSignedConstant>(RamDomain(1)));
-
-                    return {std::make_unique<RamIntrinsicOperator>(FunctorOp::ADD, std::move(expressions)),
-                            std::make_unique<RamUndefValue>()};
+                    return {clone(rhs), clone(rhs)};
                 }
             }
-            // <expr> > Tuple[level, element]
-            // is equivalent to
-            // <expr> - 1 >= Tuple[level, element]
             if (const auto* rhs = dynamic_cast<const RamTupleElement*>(&binRelOp->getRHS())) {
                 const RamExpression* lhs = &binRelOp->getLHS();
                 if (rhs->getTupleId() == identifier && rla->getLevel(lhs) < identifier) {
                     element = rhs->getElement();
-                    std::vector<std::unique_ptr<RamExpression>> expressions;
-                    expressions.push_back(souffle::clone(lhs));
-                    expressions.push_back(std::make_unique<RamSignedConstant>(RamDomain(1)));
-
-                    return {std::make_unique<RamUndefValue>(),
-                            std::make_unique<RamIntrinsicOperator>(FunctorOp::SUB, std::move(expressions))};
+                    return {clone(lhs), clone(lhs)};
                 }
             }
+        } else if (isIneqSigned(binRelOp->getOperator())) {
+            return getSignedExpressionPair(binRelOp, element, identifier);
+        } else if (isIneqUnsigned(binRelOp->getOperator())) {
+            return getUnsignedExpressionPair(binRelOp, element, identifier);
+        } else if (isIneqFloat(binRelOp->getOperator())) {
+            return getFloatExpressionPair(binRelOp, element, identifier);
         }
     }
     return {std::make_unique<RamUndefValue>(), std::make_unique<RamUndefValue>()};
@@ -399,8 +493,8 @@ std::unique_ptr<RamCondition> MakeIndexTransformer::constructPattern(RamPattern&
         std::unique_ptr<RamExpression> upperExpression;
         std::tie(lowerExpression, upperExpression) = getLowerUpperExpression(cond.get(), element, identifier);
 
-        // we have new bounds if both are not nullptr
-        if (!isRamUndefValue(lowerExpression.get()) && !isRamUndefValue(upperExpression.get())) {
+        // we have new bounds if at least one is defined
+        if (!isRamUndefValue(lowerExpression.get()) || !isRamUndefValue(upperExpression.get())) {
             // if no previous bounds are set then just assign them, consider both bounds to be set (but not
             // necessarily defined) in all remaining cases
             indexable = true;
@@ -492,6 +586,7 @@ std::unique_ptr<RamCondition> MakeIndexTransformer::constructPattern(RamPattern&
     if (condition == nullptr) {
         condition = std::make_unique<RamTrue>();
     }
+
     return condition;
 }
 
@@ -559,8 +654,7 @@ std::unique_ptr<RamOperation> MakeIndexTransformer::rewriteIndexScan(const RamIn
 
         if (indexable) {
             // Merge Index Pattern here
-
-            std::unique_ptr<RamOperation> op = souffle::clone(&filter->getOperation());
+            std::unique_ptr<RamOperation> op = std::unique_ptr<RamOperation>(filter->getOperation().clone());
             if (!isRamTrue(condition.get())) {
                 op = std::make_unique<RamFilter>(std::move(condition), std::move(op));
             }
@@ -620,8 +714,9 @@ bool IndexedInequalityTransformer::transformIndexToFilter(RamProgram& program) {
                 [&](std::unique_ptr<RamNode> node) -> std::unique_ptr<RamNode> {
             // find a RamIndexOperation
             if (const RamIndexOperation* indexOperation = dynamic_cast<RamIndexOperation*>(node.get())) {
-                auto attributesToDischarge =
-                        idxAnalysis->getIndexes(indexOperation->getRelation()).getAttributesToDischarge();
+                auto indexSelection = idxAnalysis->getIndexes(indexOperation->getRelation());
+                auto attributesToDischarge = indexSelection.getAttributesToDischarge(
+                        idxAnalysis->getSearchSignature(indexOperation), indexOperation->getRelation());
 
                 auto pattern = indexOperation->getRangePattern();
                 std::unique_ptr<RamCondition> condition;
@@ -633,7 +728,6 @@ bool IndexedInequalityTransformer::transformIndexToFilter(RamProgram& program) {
                 for (RamExpression* p : indexOperation->getRangePattern().second) {
                     updatedPattern.second.emplace_back(p->clone());
                 }
-
                 for (auto i : attributesToDischarge) {
                     // move constraints out of the indexed inequality and into a conjuction
                     std::unique_ptr<RamConstraint> lowerBound;
@@ -680,6 +774,7 @@ bool IndexedInequalityTransformer::transformIndexToFilter(RamProgram& program) {
                                 std::make_unique<RamRelationReference>(&ichoice->getRelation()),
                                 ichoice->getTupleId(), souffle::clone(&ichoice->getCondition()),
                                 std::move(updatedPattern), std::move(filter), ichoice->getProfileText());
+
                     } else if (const RamIndexAggregate* iagg = dynamic_cast<RamIndexAggregate*>(node.get())) {
                         node = std::make_unique<RamIndexAggregate>(std::move(filter), iagg->getFunction(),
                                 std::make_unique<RamRelationReference>(&iagg->getRelation()),
@@ -714,6 +809,9 @@ bool IndexedInequalityTransformer::transformIndexToFilter(RamProgram& program) {
                     if (*(pattern.first[i]) == *(pattern.second[i])) {
                         foundRealIndexableOperation = true;
                         break;
+                    } else {
+                        foundRealIndexableOperation = true;
+                        break;
                     }
                 }
                 if (!foundRealIndexableOperation) {
@@ -792,11 +890,10 @@ std::unique_ptr<RamOperation> IfConversionTransformer::rewriteIndexScan(const Ra
         // replace IndexScan with an Filter/Existence check
         std::vector<std::unique_ptr<RamExpression>> newValues;
 
-        size_t arity = indexScan->getRelation().getArity();
+        size_t arity = indexScan->getRangePattern().first.size();
         for (size_t i = 0; i < arity; ++i) {
-            if (*(indexScan->getRangePattern().first[i]) != *(indexScan->getRangePattern().second[i])) {
-                fatal("Inequal upper and lower bounds not supported while rewriting index scan in "
-                      "IfConversionTransformer");
+            if (*indexScan->getRangePattern().first[i] != *indexScan->getRangePattern().second[i]) {
+                return nullptr;
             }
         }
 
diff --git a/src/ram/transform/RamTransforms.h b/src/ram/transform/RamTransforms.h
index 0eba4d352..cf0668b78 100644
--- a/src/ram/transform/RamTransforms.h
+++ b/src/ram/transform/RamTransforms.h
@@ -372,8 +372,13 @@ public:
      */
     using ExpressionPair = std::pair<std::unique_ptr<RamExpression>, std::unique_ptr<RamExpression>>;
 
-    ExpressionPair getLowerUpperExpression(RamCondition* c, size_t& element, int level);
 
+
+    ExpressionPair getSignedExpressionPair(const RamConstraint* binRelOp, size_t& element, int identifier); 
+    ExpressionPair getUnsignedExpressionPair(const RamConstraint* binRelOp, size_t& element, int identifier); 
+    ExpressionPair getFloatExpressionPair(const RamConstraint* binRelOp, size_t& element, int identifier); 
+    ExpressionPair getLowerUpperExpression(RamCondition* c, size_t& element, int level);
+    
     /**
      * @brief Construct query patterns for an indexable operation
      * @param Query pattern that is to be constructed
@@ -549,7 +554,7 @@ protected:
 
 /**
  * @class ChoiceConversionTransformer
- * @brief Convert (Scan/If)/(IndexScan/If) operaitons to
+ * @brief Convert (Scan/If)/(IndexScan/If) operations to
  * (Choice)/(IndexChoice) operations
 
  * If there exists Scan/IndexScan operations in the RAM, and the
diff --git a/src/tests/matching_test.cpp b/src/tests/matching_test.cpp
index d586bd821..57fba84bb 100644
--- a/src/tests/matching_test.cpp
+++ b/src/tests/matching_test.cpp
@@ -33,7 +33,7 @@ public:
     }
 };
 
-using Nodes = std::set<SearchSignature>;
+using Nodes = MinIndexSelection::SearchSet;
 
 SearchSignature setBits(size_t arity, uint64_t mask) {
     SearchSignature search(arity);
diff --git a/test-driver b/test-driver
new file mode 120000
index 000000000..ce2380d8a
--- /dev/null
+++ b/test-driver
@@ -0,0 +1 @@
+/usr/share/automake-1.16/test-driver
\ No newline at end of file
diff --git a/tests/default.out b/tests/default.out
new file mode 100644
index 000000000..ee98d38bd
--- /dev/null
+++ b/tests/default.out
@@ -0,0 +1,3244 @@
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 5
+#Discharged: 1	#Indexes: 5
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 5
+#Discharged: 1	#Indexes: 5
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 5
+#Discharged: 1	#Indexes: 5
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 5
+#Discharged: 1	#Indexes: 5
+#Discharged: 1	#Indexes: 5
+#Discharged: 1	#Indexes: 5
+#Discharged: 1	#Indexes: 5
+#Discharged: 1	#Indexes: 5
+#Discharged: 1	#Indexes: 5
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 2	#Indexes: 1
+#Discharged: 2	#Indexes: 1
+#Discharged: 2	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 9
+#Discharged: 0	#Indexes: 9
+#Discharged: 0	#Indexes: 9
+#Discharged: 0	#Indexes: 9
+#Discharged: 0	#Indexes: 9
+#Discharged: 0	#Indexes: 9
+#Discharged: 0	#Indexes: 9
+#Discharged: 0	#Indexes: 9
+#Discharged: 0	#Indexes: 9
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 2	#Indexes: 1
+#Discharged: 2	#Indexes: 1
+#Discharged: 2	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 2	#Indexes: 1
+#Discharged: 2	#Indexes: 1
+#Discharged: 2	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 2	#Indexes: 1
+#Discharged: 2	#Indexes: 1
+#Discharged: 2	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 2	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 3	#Indexes: 2
+#Discharged: 3	#Indexes: 2
+#Discharged: 3	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
diff --git a/tests/default.stats b/tests/default.stats
new file mode 100644
index 000000000..581c5d647
--- /dev/null
+++ b/tests/default.stats
@@ -0,0 +1,3245 @@
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11110000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11110000-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11110000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11110000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11110000-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11110000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11110000-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->101-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1102-->1111|
+Indexes: 2	Inequalities: 0	Chains: |100100|100000-->110000-->110100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->110000-->111111|
+Indexes: 1	Inequalities: 0	Chains: |11000-->11010-->11111|
+Indexes: 2	Inequalities: 0	Chains: |100100|100000-->110000-->110100-->111111|
+Indexes: 2	Inequalities: 0	Chains: |100100|100000-->110000-->110100-->111111|
+Indexes: 2	Inequalities: 0	Chains: |100100|100000-->110000-->110100-->111111|
+Indexes: 2	Inequalities: 0	Chains: |100100|100000-->110000-->110100-->111111|
+Indexes: 2	Inequalities: 0	Chains: |100100|100000-->110000-->110100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111111|
+Indexes: 2	Inequalities: 0	Chains: |1001|1100-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1001|1100-->1101-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110000-->110100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |01000000000-->11111111111|
+Indexes: 1	Inequalities: 0	Chains: |111111100-->111111101-->111111111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |01000000100|01000000000-->11111110000-->11111111111|
+Indexes: 1	Inequalities: 0	Chains: |100-->102-->111|
+Indexes: 2	Inequalities: 1	Chains: |002|100-->102-->111|
+Indexes: 2	Inequalities: 1	Chains: |002|100-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1102-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1102-->1111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111100-->111111|
+Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111100-->111111|
+Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111100-->111111|
+Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+Indexes: 1	Inequalities: 0	Chains: |02-->11|
+Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1102-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|1000-->1100-->1102-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1102-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|1000-->1100-->1102-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|1000-->1100-->1102-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|1000-->1100-->1102-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|1000-->1100-->1102-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|1000-->1100-->1102-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|0100-->1100-->1102-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|0100-->1100-->1102-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|0100-->1100-->1102-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|0100-->1100-->1102-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|0100-->1100-->1102-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1102-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111111|
+Indexes: 2	Inequalities: 0	Chains: |1001|1100-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1001|1100-->1101-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110000-->110100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111111|
+Indexes: 2	Inequalities: 0	Chains: |1001|1100-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1001|1100-->1101-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110000-->110100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1102-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 3	Inequalities: 2	Chains: |0100-->0102|1002|1000-->1100-->1102-->1111|
+Indexes: 3	Inequalities: 2	Chains: |0100-->0102|1002|1000-->1100-->1102-->1111|
+Indexes: 3	Inequalities: 2	Chains: |0100-->0102|1002|1000-->1100-->1102-->1111|
+Indexes: 1	Inequalities: 0	Chains: |100-->102-->111|
+Indexes: 3	Inequalities: 2	Chains: |0100-->0102|1002|1000-->1100-->1102-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1111|
+Indexes: 3	Inequalities: 2	Chains: |0100-->0102|1002|1000-->1100-->1102-->1111|
+Indexes: 1	Inequalities: 0	Chains: |100-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 2	Inequalities: 1	Chains: |002|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->102-->111|
+Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1102-->1111|
+Indexes: 1	Inequalities: 0	Chains: |010000000-->111111111|
+Indexes: 1	Inequalities: 0	Chains: |111111100-->111111102-->111111111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1102-->1111|
+Indexes: 2	Inequalities: 1	Chains: |010000002|010000000-->111111100-->111111111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |011|001-->101-->111|
+Indexes: 2	Inequalities: 0	Chains: |011|001-->101-->111|
+Indexes: 2	Inequalities: 0	Chains: |011|001-->101-->111|
+Indexes: 2	Inequalities: 0	Chains: |011|001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 1	Chains: |10-->11-->12|
+Indexes: 1	Inequalities: 1	Chains: |10-->11-->12|
+Indexes: 1	Inequalities: 1	Chains: |10-->11-->12|
+Indexes: 1	Inequalities: 1	Chains: |10-->11-->12|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |002-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1002-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1002-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1002-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |02-->11|
+Indexes: 1	Inequalities: 0	Chains: |02-->11|
+Indexes: 1	Inequalities: 0	Chains: |02-->11|
+Indexes: 1	Inequalities: 0	Chains: |02-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001000-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |0001000-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0101010-->0111110|1001000-->1011100-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0101010-->0111110|1001000-->1011100-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0101010-->0111110|1001000-->1011100-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0101010-->0111110|1001000-->1011100-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0101010-->0111110|1001000-->1011100-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |0010|1000-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0010|1000-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1010|1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1010|1100-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1010|1100-->1111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |101-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |001-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |001-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 1	Chains: |20-->11-->12|
+Indexes: 1	Inequalities: 1	Chains: |20-->11-->12|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |0001000-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0111010-->0111110|1001000-->1001110-->1011110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0111010-->0111110|1001000-->1001110-->1011110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0111010-->0111110|1001000-->1001110-->1011110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0111010-->0111110|1001000-->1001110-->1011110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0111010-->0111110|1001000-->1001110-->1011110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->02-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->02-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->02-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->02-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->02-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->02-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->02-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->02-->11|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |0010-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+    ~/souffle/src/souffle_default $line --compile --show=transformed-ram | grep "Inequalities" > "./${trimmed}_default.out"
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |00000010000-->11111111111|
+Indexes: 2	Inequalities: 0	Chains: |010|100-->111|
+Indexes: 2	Inequalities: 0	Chains: |010|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->120-->111|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->120-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->120-->111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->120-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->120-->111|
+Indexes: 2	Inequalities: 0	Chains: |0101|1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->120-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->120-->111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->120-->111|
+Indexes: 2	Inequalities: 0	Chains: |0101|1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |0010|1000-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0010|1000-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1010|1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1010|1100-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1010|1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->20-->11|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 0	Chains: |220-->111|
+Indexes: 1	Inequalities: 0	Chains: |220-->111|
+Indexes: 1	Inequalities: 0	Chains: |220-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->20-->11|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 1	Chains: |111-->112|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 0	Chains: |010|100-->111|
+Indexes: 2	Inequalities: 0	Chains: |010|100-->111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 1	Inequalities: 0	Chains: |10100-->10101-->11111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 1	Inequalities: 0	Chains: |10100-->10101-->11111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 1	Inequalities: 0	Chains: |10100-->10101-->11111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 1	Inequalities: 0	Chains: |10100-->10101-->11111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 1	Inequalities: 0	Chains: |10100-->10101-->11111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 1	Inequalities: 0	Chains: |10100-->10101-->11111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->110-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |011|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |0011|1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 3	Inequalities: 0	Chains: |0000100-->0000110|0000010-->1000010|1000000-->1000100-->1000110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000010-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 3	Inequalities: 0	Chains: |0000100-->0000110|0000010-->1000010|1000000-->1000100-->1000110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 3	Inequalities: 0	Chains: |0000100-->0000110|0000010-->1000010|1000000-->1000100-->1000110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 3	Inequalities: 0	Chains: |0000100-->0000110|0000010-->1000010|1000000-->1000100-->1000110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |011|100-->111|
+Indexes: 3	Inequalities: 0	Chains: |0000100-->0000110|0000010-->1000010|1000000-->1000100-->1000110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |011|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |011-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |0011|1000-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0000100-->0000110|0000010-->1000010|1000000-->1000100-->1000110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |0011|1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 3	Inequalities: 0	Chains: |0000100-->0000110|0000010-->1000010|1000000-->1000100-->1000110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |010-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |101|110-->120-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 0	Chains: |101|110-->120-->111|
+Indexes: 1	Inequalities: 1	Chains: |10-->11-->12|
+Indexes: 2	Inequalities: 0	Chains: |101|110-->120-->111|
+Indexes: 1	Inequalities: 1	Chains: |10-->11-->12|
+Indexes: 1	Inequalities: 1	Chains: |10-->11-->12|
+Indexes: 2	Inequalities: 0	Chains: |101|110-->120-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |101|110-->120-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |101|110-->120-->111|
+Indexes: 2	Inequalities: 0	Chains: |101|110-->120-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |01|10-->11-->12|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |01|10-->11-->12|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 1	Chains: |01|10-->11-->12|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 1	Chains: |01|10-->11-->12|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |0000000001-->1111111111|
+Indexes: 1	Inequalities: 0	Chains: |0000000001-->1111111111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1111111111000000000-->1111111111111111111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1111111111000000000-->1111111111111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 1	Inequalities: 0	Chains: |0000000001-->1111111111|
+Indexes: 1	Inequalities: 0	Chains: |0000000001-->1111111111|
+Indexes: 1	Inequalities: 0	Chains: |11111111110-->11111111111|
+Indexes: 1	Inequalities: 0	Chains: |00000000011-->11111111111|
+Indexes: 1	Inequalities: 0	Chains: |00000000011-->11111111111|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |21000-->11100-->11200-->11111|
+Indexes: 1	Inequalities: 0	Chains: |21000-->11100-->11200-->11111|
+Indexes: 1	Inequalities: 0	Chains: |21000-->11100-->11200-->11111|
+Indexes: 1	Inequalities: 0	Chains: |11100-->11200-->11111|
+Indexes: 1	Inequalities: 0	Chains: |21000-->11100-->11200-->11111|
+Indexes: 1	Inequalities: 0	Chains: |21000-->11100-->11200-->11111|
+Indexes: 1	Inequalities: 0	Chains: |21000-->11100-->11200-->11111|
+Indexes: 1	Inequalities: 0	Chains: |11100-->11200-->11111|
+Indexes: 1	Inequalities: 0	Chains: |21000-->11100-->11200-->11111|
+Indexes: 1	Inequalities: 0	Chains: |21000-->11100-->11200-->11111|
+Indexes: 1	Inequalities: 0	Chains: |21000-->11100-->11200-->11111|
+Indexes: 1	Inequalities: 0	Chains: |11100-->11200-->11111|
+Indexes: 1	Inequalities: 0	Chains: |21000-->11100-->11200-->11111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |111-->112|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 1	Chains: |11-->12|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 2	Inequalities: 1	Chains: |0022|2200-->1111|
+Indexes: 2	Inequalities: 1	Chains: |0022|2200-->1111|
+Indexes: 2	Inequalities: 1	Chains: |0022|2200-->1111|
+Indexes: 1	Inequalities: 0	Chains: |11111111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->20-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->20-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->20-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->20-->11|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |0001-->1111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |101-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |002-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |011-->111|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 1	Chains: |11-->12|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 1	Chains: |11-->12|
+Indexes: 1	Inequalities: 0	Chains: |101-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |01-->02-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->02-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->111|
+Indexes: 2	Inequalities: 0	Chains: |011|010-->110-->111|
+Indexes: 2	Inequalities: 0	Chains: |011|010-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->111|
+Indexes: 2	Inequalities: 0	Chains: |011|010-->110-->111|
+Indexes: 2	Inequalities: 0	Chains: |011|010-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->111|
+Indexes: 2	Inequalities: 0	Chains: |011|010-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 1	Chains: |111-->112|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
diff --git a/tests/evaluation/access1/High.csv b/tests/evaluation/access1/High.csv
index c1c73acda..d3aa895dd 100644
--- a/tests/evaluation/access1/High.csv
+++ b/tests/evaluation/access1/High.csv
@@ -1,728 +1,728 @@
-935	588	913
-918	400	10
-532	603	286
-176	836	24
-772	8	4
-297	235	50
-150	213	277
-223	676	407
-78	351	806
-396	322	9
-959	230	895
-731	639	348
-523	303	775
-991	508	830
-761	127	238
-505	974	6
-488	728	103
-304	947	20
-629	734	61
-824	252	775
-650	702	78
-201	721	665
-98	191	339
-874	739	106
-987	175	7
-181	109	166
-511	639	24
-250	350	26
-795	832	318
-178	495	17
-445	185	555
-193	479	494
-69	103	5
-33	292	1
-971	94	1
-587	569	36
-334	259	435
-960	149	480
-24	99	18
-450	276	113
-938	465	61
-998	513	466
-795	437	6
-138	271	541
-900	107	775
-525	837	830
-393	4	436
-71	129	42
-965	189	2
-659	31	701
-37	441	599
-75	961	966
-344	289	218
-883	119	752
-571	555	494
-580	539	26
-396	909	9
-688	439	775
-44	89	45
-729	491	277
-631	549	806
-705	222	36
-490	694	22
-133	566	45
-117	986	906
-370	763	522
-556	949	35
-443	597	414
-664	971	665
-315	655	643
-651	840	413
-303	460	78
-137	4	27
-628	977	322
-166	229	20
-96	779	348
-150	137	348
-591	222	318
-906	78	401
-171	353	113
-964	136	339
-45	268	220
-222	663	19
-249	919	2
-772	362	27
-16	355	438
-36	776	49
-840	244	37
-778	502	436
-389	21	915
-757	104	522
-895	768	623
-753	204	4
-57	428	38
-976	781	364
-133	885	537
-663	771	318
-409	967	61
-646	16	482
-312	230	45
-642	316	576
-306	98	537
-733	938	956
-67	388	47
-930	999	861
-515	673	36
+1	4	1
+1	42	32
+1	59	35
+1	80	48
+1	82	35
+1	92	37
+2	4	1
+2	86	7
+2	95	67
+3	7	8
+3	10	28
+3	34	23
+3	75	24
+3	79	18
+4	42	14
+4	46	45
+4	50	33
+4	64	28
+4	85	29
+4	85	30
+4	88	42
+4	94	19
+4	96	7
+5	25	2
+5	31	18
+5	68	50
+5	99	22
+5	802	25
+6	46	38
+6	76	17
+6	83	40
+6	96	12
+6	98	14
+7	28	67
+7	53	13
+7	67	14
+8	4	44
+8	9	32
+8	30	73
+8	63	26
+8	76	29
+8	77	32
+8	85	1
+9	16	49
+9	28	38
+9	47	48
+9	62	9
+9	84	40
+9	87	5
+10	11	25
+10	44	16
+10	59	4
+10	81	7
+11	11	21
+11	34	33
 11	54	8
-477	792	10
-846	675	966
-163	441	31
-997	776	861
-468	837	827
-572	360	413
-184	214	23
-951	816	15
-345	968	212
-804	731	361
-899	488	522
-586	573	33
-403	27	348
-672	293	85
-265	36	17
-114	851	827
-685	299	895
-336	378	15
-824	418	238
-517	837	35
+11	73	9
+11	74	6
+11	76	48
+11	82	39
 11	278	789
-398	544	362
-558	991	364
-97	597	480
-478	437	7
-819	912	364
-950	412	218
-557	418	612
-253	815	588
-617	213	153
-137	316	435
-210	515	106
-801	965	33
-307	91	216
-656	587	643
-922	100	435
-766	948	715
-954	101	494
-1	59	35
+12	6	22
+12	37	11
+12	41	78
+12	92	5
 12	389	216
-830	145	3
-853	682	362
-679	932	701
-864	117	348
-140	922	906
-265	138	73
-5	802	25
-104	110	142
-175	152	153
-115	106	142
-112	139	113
-159	165	113
-165	162	196
-194	172	153
-114	166	181
-149	161	106
-189	181	137
-103	157	196
-156	196	196
-183	117	142
-138	127	137
-114	167	181
-105	181	153
-132	196	106
-177	135	181
-109	148	181
-138	143	196
-183	132	142
-139	120	106
-104	187	196
-124	124	142
-148	169	142
-144	194	103
-135	131	113
-189	163	142
-174	154	166
-115	136	181
-100	125	137
-140	195	142
-138	161	103
-129	179	181
-142	136	137
-127	198	113
-154	110	166
-133	146	166
-182	179	181
-145	107	137
-171	143	166
-173	186	103
-187	134	113
-151	161	113
-159	114	106
-119	153	196
-159	159	196
-133	102	113
-121	114	103
-168	139	137
-197	108	166
-153	161	142
-178	194	137
-172	168	137
-147	200	196
-111	187	106
-115	162	103
-103	130	153
-174	111	137
-152	187	103
-186	100	153
-195	155	166
-144	196	103
-184	185	166
-123	186	103
-139	195	113
-178	153	106
-185	198	166
-197	119	137
-181	131	153
-162	123	142
-182	150	103
-167	149	137
-132	155	181
-187	103	153
-47	36	30
-72	64	61
-71	70	39
-39	29	9
-49	5	9
-9	84	40
-53	56	40
-65	82	78
-79	72	18
-84	13	8
-62	44	13
-69	51	61
-82	84	25
-87	42	17
-53	98	73
-21	16	37
-88	42	67
-68	54	9
-3	7	8
-41	43	10
-69	35	38
-81	95	13
-46	3	20
-6	83	40
-93	31	15
-75	55	85
-60	76	40
-10	11	25
-18	84	48
-75	44	46
-50	82	42
-66	54	8
-8	76	29
-99	26	8
-89	18	32
-7	67	14
-3	34	23
-71	97	11
-80	35	73
-94	54	44
-59	10	27
-5	99	22
-52	57	78
-78	60	16
-82	2	13
-93	91	29
-42	56	73
-87	64	22
-40	66	23
-52	76	78
-47	88	61
-86	23	33
-24	63	13
-6	76	17
-29	24	30
-68	29	27
-38	71	2
-63	24	14
-63	16	38
-84	38	10
-7	53	13
-18	25	25
-46	16	43
-27	36	2
-47	26	5
-33	14	38
-82	7	34
+13	16	19
+13	24	14
+13	60	33
+13	68	43
+13	97	49
+14	9	85
+14	28	19
+15	3	35
+15	14	37
+15	15	8
+15	20	9
+15	22	46
+15	35	1
+15	75	42
+15	94	23
+16	2	22
+16	44	44
+16	52	50
+16	355	438
+17	54	5
+17	94	50
+18	9	32
+18	11	17
 18	15	6
-72	44	26
+18	20	15
+18	25	25
+18	42	36
+18	42	43
+18	53	5
+18	57	28
+18	74	11
+18	84	48
+18	91	85
 19	34	73
-54	65	9
-83	32	19
-61	29	13
-71	23	33
-72	26	46
-55	95	50
-89	46	45
-55	40	24
-81	60	46
-14	9	85
-65	57	13
-4	94	19
-56	88	50
-29	85	73
-11	11	21
-93	47	31
+19	37	43
+19	60	47
+20	53	37
+20	79	61
+20	81	23
+20	86	2
+20	95	11
+21	16	37
+21	41	28
+21	43	85
+21	91	19
+21	100	44
+22	40	36
+22	56	38
+22	58	40
+22	59	30
+23	18	8
+23	21	11
+23	51	22
 23	83	10
-11	76	48
-25	19	43
-47	75	33
-29	1	36
-68	26	7
-99	96	12
-70	12	38
-53	57	8
-97	37	10
+23	87	22
+23	93	42
+23	100	20
+24	2	4
+24	11	36
+24	63	13
 24	64	7
-78	53	73
-11	34	33
-13	97	49
-82	10	39
-2	4	1
-33	77	17
-31	51	61
-99	58	85
-58	2	39
-48	21	17
-71	16	2
-72	38	78
-49	23	1
-52	35	8
-15	94	23
-56	34	78
+24	99	18
+25	19	43
+25	31	29
+25	92	32
+25	97	28
+26	4	46
+26	30	47
+26	50	44
+27	12	27
+27	18	8
+27	36	2
+27	72	44
 28	11	14
-10	59	4
-75	60	3
-97	42	30
-77	44	8
-74	35	15
-91	53	30
-100	34	8
-2	95	67
-91	64	22
-5	25	2
-4	64	28
-15	3	35
-80	27	61
-53	93	85
-31	2	30
-81	66	31
-18	9	32
-87	23	12
-64	36	40
-19	37	43
-51	40	30
+28	25	42
+28	57	44
+28	89	49
+28	92	26
 28	93	19
-71	35	28
-26	50	44
-78	15	35
-1	42	32
-56	29	41
-38	80	21
-94	24	46
-55	88	25
-59	8	25
-50	24	26
-88	66	3
-15	22	46
-59	91	43
-8	85	1
-38	18	10
-1	92	37
-70	59	9
-81	69	19
-77	91	33
-90	4	46
-86	91	27
-16	52	50
-60	79	40
-72	8	37
-71	19	30
-13	16	19
-33	37	50
-51	88	5
-27	18	8
-68	94	11
-56	58	21
-43	67	24
-47	39	22
-18	11	17
-57	56	78
-98	41	40
-85	78	21
-93	63	48
-60	77	9
-33	73	21
-81	92	23
-40	34	30
-80	82	46
-57	76	43
-75	37	44
-62	63	78
-15	14	37
-11	82	39
-61	63	45
-81	32	30
-36	89	11
-12	37	11
-24	11	36
-48	25	33
-80	21	26
-49	4	49
-27	12	27
-15	20	9
-79	61	44
-56	75	2
-5	68	50
-80	92	21
-91	47	34
-26	4	46
-20	79	61
-78	83	37
-55	36	10
-99	65	25
-33	48	27
-34	63	67
-23	21	11
-42	53	49
-70	6	36
-18	91	85
-4	88	42
-93	14	38
-52	51	14
-9	87	5
-34	75	34
-67	34	85
-49	89	14
-85	49	50
-95	98	49
-42	84	61
-59	7	11
-28	57	44
-52	41	41
-32	32	26
-8	77	32
-85	31	16
-45	62	11
-100	68	6
-68	84	21
-45	51	78
-95	88	47
-3	79	18
+28	93	31
+29	1	36
+29	14	32
+29	24	30
+29	45	37
+29	85	73
 30	26	34
-80	33	14
-20	81	23
-58	86	5
-8	9	32
-81	41	6
+31	2	30
+31	40	28
+31	51	61
+31	58	13
 31	91	18
-28	89	49
-2	86	7
-4	42	14
-57	96	6
-17	94	50
-72	72	27
-66	74	20
+32	32	26
 32	32	78
-22	58	40
+32	47	12
+32	80	2
+33	9	3
+33	14	38
+33	37	50
 33	43	7
-86	10	33
+33	48	27
 33	53	46
-48	31	3
-69	20	12
-48	41	7
-35	22	3
-77	38	61
-63	16	15
 33	54	22
-12	6	22
-46	35	13
-1	4	1
-84	90	27
-49	7	18
-50	14	31
-48	55	46
-42	9	67
-47	76	39
-23	51	22
-45	82	22
-46	81	1
-69	12	67
-58	63	22
-24	2	4
-49	35	21
-55	19	28
-73	44	36
-28	93	31
+33	73	21
+33	77	17
+33	79	24
+33	292	1
+34	13	14
+34	35	18
+34	63	67
+34	75	34
+34	82	43
+35	9	22
 35	14	43
+35	22	3
+35	27	46
+35	39	20
+35	43	3
 36	6	35
-86	97	24
-98	63	44
 36	17	19
-1	80	48
-25	97	28
-40	60	31
-72	93	20
+36	22	37
+36	89	11
+36	776	49
+37	17	6
+37	73	2
 37	90	25
-94	58	24
-78	12	41
-11	74	6
-53	29	19
-74	31	26
-15	15	8
-43	53	38
-33	79	24
-26	30	47
-94	71	12
-61	76	11
-35	39	20
-63	26	42
-71	83	28
-43	32	33
-70	28	20
-18	53	5
-66	74	16
-28	25	42
-79	46	21
-64	28	24
-61	69	20
+37	441	599
+38	18	10
+38	71	2
+38	80	21
+39	29	9
+39	63	42
+40	16	32
+40	34	30
 40	42	13
+40	60	31
+40	66	23
+41	43	10
 41	91	4
-10	44	16
-100	60	67
-4	85	30
-4	85	29
-9	16	49
-18	20	15
+42	9	67
+42	53	49
+42	56	73
+42	84	61
+43	24	50
+43	32	33
+43	53	38
+43	67	24
+44	21	46
+44	76	33
+44	79	26
+44	89	45
+45	51	78
+45	62	11
+45	82	22
+45	89	3
+45	268	220
+46	3	20
+46	16	43
+46	21	61
+46	35	13
+46	72	50
+46	81	1
+46	93	49
+47	26	5
+47	36	30
+47	39	22
 47	42	45
-94	84	14
-75	16	6
-69	17	5
-7	28	67
-68	79	31
-9	47	48
+47	75	33
+47	76	39
+47	88	61
+48	14	29
+48	21	17
+48	25	33
+48	31	3
+48	32	85
+48	41	7
+48	55	46
 48	70	4
-44	21	46
-61	45	61
-91	85	9
-69	48	14
+49	4	49
+49	5	9
+49	7	18
+49	23	1
+49	35	21
 49	56	44
-71	16	31
-35	43	3
-21	41	28
-15	75	42
-8	4	44
-54	36	14
-22	56	38
-29	45	37
+49	89	14
+50	14	31
+50	24	26
+50	42	19
+50	73	15
+50	82	42
+50	91	27
+50	93	50
+51	1	42
+51	34	7
+51	40	30
 51	59	5
-1	82	35
-83	28	19
-23	93	42
-32	47	12
-96	61	15
-96	10	17
-57	68	5
-61	9	31
-75	83	61
-69	49	40
+51	88	5
+52	35	8
+52	41	41
+52	51	14
+52	57	78
+52	76	78
+53	29	19
+53	56	9
 53	56	16
-50	73	15
-90	34	67
-70	65	34
-4	46	45
-3	75	24
-61	69	45
-18	57	28
+53	56	40
+53	57	8
+53	63	28
+53	93	85
+53	98	73
+54	36	14
+54	65	9
+54	98	39
+55	19	28
+55	36	10
+55	40	24
+55	88	25
+55	94	34
+55	95	50
 55	100	50
-35	9	22
+56	29	41
+56	34	78
+56	58	21
+56	75	2
+56	88	50
+57	56	78
+57	68	5
+57	76	43
+57	96	6
+57	428	38
+58	2	39
 58	8	20
+58	34	47
+58	39	49
+58	41	26
+58	63	22
+58	86	5
+58	96	21
+59	7	11
+59	8	25
+59	10	27
+59	50	73
+59	91	43
+60	14	67
+60	76	40
+60	77	9
+60	79	40
+61	9	31
+61	29	13
+61	43	67
+61	45	61
+61	63	45
+61	69	20
+61	69	45
+61	76	11
+62	44	13
+62	63	78
+63	16	15
+63	16	38
+63	24	14
+63	26	42
+64	28	24
+64	36	40
+64	61	32
+65	10	24
+65	57	13
+65	82	78
 66	43	2
-8	63	26
-75	91	78
-29	14	32
-8	30	73
-48	32	85
-50	93	50
-46	93	49
-92	58	85
-13	60	33
-18	74	11
-80	25	27
-17	54	5
-6	98	14
-34	35	18
-99	89	48
-96	82	8
-45	89	3
-84	27	10
-55	94	34
-94	29	33
+66	54	8
+66	67	7
+66	74	16
+66	74	20
 67	11	22
-20	95	11
-32	80	2
-12	41	78
-99	13	47
-74	90	16
+67	34	85
 67	40	35
-88	23	22
-50	91	27
-23	100	20
-37	17	6
-39	63	42
-46	72	50
-100	11	10
-70	74	2
-20	53	37
-22	59	30
-77	9	47
+67	388	47
 68	14	32
-20	86	2
-58	96	21
-78	27	22
-22	40	36
-19	60	47
-82	12	20
-21	91	19
-58	41	26
-64	61	32
-23	87	22
-18	42	36
-6	96	12
-79	2	15
-51	1	42
-10	81	7
-12	92	5
-21	43	85
-86	50	31
-82	75	46
-6	46	38
-75	78	78
-66	67	7
-9	62	9
-4	96	7
-4	50	33
-86	64	38
-27	72	44
-83	46	24
-97	39	3
-33	9	3
-61	43	67
-90	13	38
-84	90	30
-59	50	73
-11	73	9
-23	18	8
-25	92	32
+68	21	50
+68	26	7
+68	29	27
+68	54	9
+68	79	31
+68	84	21
+68	94	11
+69	12	67
+69	17	5
+69	20	12
+69	35	38
+69	48	14
+69	49	40
+69	51	61
 69	58	31
+69	103	5
+70	6	36
+70	12	38
+70	28	20
+70	59	9
+70	65	34
+70	74	2
+71	16	2
+71	16	31
+71	19	30
+71	23	33
+71	35	28
 71	54	21
-87	58	8
-97	85	27
-21	100	44
-48	14	29
-14	28	19
-81	19	11
+71	70	39
+71	83	28
+71	97	11
+71	129	42
+72	8	37
+72	26	46
+72	38	78
+72	44	26
+72	64	61
+72	72	27
+72	93	20
+73	44	36
 73	99	33
-53	63	28
-51	34	7
-40	16	32
-77	45	22
-99	48	39
-44	79	26
-13	24	14
-74	78	67
-91	56	32
-15	35	1
-53	56	9
-16	44	44
-13	68	43
-25	31	29
+74	31	26
+74	35	15
 74	51	50
+74	78	67
+74	90	16
+75	16	6
+75	37	44
+75	44	46
+75	55	85
+75	60	3
+75	78	78
+75	83	61
+75	91	78
+75	961	966
+76	48	47
+76	57	44
+77	9	47
+77	38	61
+77	44	8
+77	45	22
 77	57	28
-18	42	43
-5	31	18
-65	10	24
-94	61	50
-95	61	14
-54	98	39
-60	14	67
-92	16	85
-3	10	28
-31	58	13
-35	27	46
+77	91	33
+78	12	41
+78	15	35
+78	27	22
+78	53	73
+78	60	16
+78	83	37
+78	351	806
+79	2	15
+79	46	21
+79	61	44
+79	72	18
+80	21	26
+80	25	27
+80	27	61
+80	33	14
+80	35	73
+80	82	46
+80	92	21
+81	19	11
+81	32	30
+81	41	6
+81	60	46
+81	66	31
+81	69	19
+81	92	23
+81	95	13
+82	2	13
+82	7	34
+82	10	39
+82	12	20
+82	19	41
+82	75	46
+82	84	25
+83	28	19
+83	32	19
+83	46	24
+84	13	8
+84	27	10
+84	38	10
+84	90	27
+84	90	30
+85	31	16
+85	49	50
 85	72	36
-89	36	25
-98	28	30
-44	76	33
+85	78	21
+86	10	33
+86	23	33
+86	50	31
+86	64	38
+86	91	27
+86	97	24
+87	23	12
+87	42	17
+87	58	8
+87	64	22
+88	23	22
+88	42	67
+88	66	3
 88	85	25
-82	19	41
-76	48	47
-50	42	19
-43	24	50
-31	40	28
-58	39	49
+89	18	32
+89	36	25
+89	46	45
+90	4	46
+90	13	38
+90	18	49
+90	34	67
+91	47	34
+91	53	30
+91	56	32
+91	64	22
+91	85	9
+92	16	85
 92	22	10
-46	21	61
+92	58	85
+93	14	38
+93	31	15
+93	47	31
+93	63	48
+93	91	29
+94	24	46
+94	29	33
+94	54	44
+94	58	24
+94	61	50
+94	71	12
+94	84	14
 95	29	26
-58	34	47
-76	57	44
-68	21	50
-90	18	49
-37	73	2
+95	61	14
 95	88	31
-34	13	14
-36	22	37
-28	92	26
-9	28	38
-34	82	43
-16	2	22
+95	88	47
+95	98	49
+96	10	17
+96	61	15
+96	82	8
+96	779	348
+97	37	10
+97	39	3
+97	42	30
+97	85	27
+97	597	480
+98	28	30
+98	41	40
+98	63	44
+98	191	339
+99	13	47
+99	26	8
+99	48	39
+99	58	85
+99	65	25
+99	89	48
+99	96	12
+100	11	10
+100	34	8
+100	60	67
+100	68	6
+100	125	137
+103	130	153
+103	157	196
+104	110	142
+104	187	196
+105	181	153
+109	148	181
+111	187	106
+112	139	113
+114	166	181
+114	167	181
+114	851	827
+115	106	142
+115	136	181
+115	162	103
+117	986	906
+119	153	196
+121	114	103
+123	186	103
+124	124	142
+127	198	113
+129	179	181
+132	155	181
+132	196	106
+133	102	113
+133	146	166
+133	566	45
+133	885	537
+135	131	113
+137	4	27
+137	316	435
+138	127	137
+138	143	196
+138	161	103
+138	271	541
+139	120	106
+139	195	113
+140	195	142
+140	922	906
+142	136	137
+144	194	103
+144	196	103
+145	107	137
+147	200	196
+148	169	142
+149	161	106
+150	137	348
+150	213	277
+151	161	113
+152	187	103
+153	161	142
+154	110	166
+156	196	196
+159	114	106
+159	159	196
+159	165	113
+162	123	142
+163	441	31
+165	162	196
+166	229	20
+167	149	137
+168	139	137
+171	143	166
+171	353	113
+172	168	137
+173	186	103
+174	111	137
+174	154	166
+175	152	153
+176	836	24
+177	135	181
+178	153	106
+178	194	137
+178	495	17
+181	109	166
+181	131	153
+182	150	103
+182	179	181
+183	117	142
+183	132	142
+184	185	166
+184	214	23
+185	198	166
+186	100	153
+187	103	153
+187	134	113
+189	163	142
+189	181	137
+193	479	494
+194	172	153
+195	155	166
+197	108	166
+197	119	137
+201	721	665
+210	515	106
+222	663	19
+223	676	407
+249	919	2
+250	350	26
+253	815	588
+265	36	17
+265	138	73
+297	235	50
+303	460	78
+304	947	20
+306	98	537
+307	91	216
+312	230	45
+315	655	643
+334	259	435
+336	378	15
+344	289	218
+345	968	212
+370	763	522
+389	21	915
+393	4	436
+396	322	9
+396	909	9
+398	544	362
+403	27	348
+409	967	61
+443	597	414
+445	185	555
+450	276	113
+468	837	827
+477	792	10
+478	437	7
+488	728	103
+490	694	22
+505	974	6
+511	639	24
+515	673	36
+517	837	35
+523	303	775
+525	837	830
+532	603	286
+556	949	35
+557	418	612
+558	991	364
+571	555	494
+572	360	413
+580	539	26
+586	573	33
+587	569	36
+591	222	318
+617	213	153
+628	977	322
+629	734	61
+631	549	806
+642	316	576
+646	16	482
+650	702	78
+651	840	413
+656	587	643
+659	31	701
+663	771	318
+664	971	665
+672	293	85
+679	932	701
+685	299	895
+688	439	775
+705	222	36
+729	491	277
+731	639	348
+733	938	956
+753	204	4
+757	104	522
+761	127	238
+766	948	715
+772	8	4
+772	362	27
+778	502	436
+795	437	6
+795	832	318
+801	965	33
+804	731	361
+819	912	364
+824	252	775
+824	418	238
+830	145	3
+840	244	37
+846	675	966
+853	682	362
+864	117	348
+874	739	106
+883	119	752
+895	768	623
+899	488	522
+900	107	775
+906	78	401
+918	400	10
+922	100	435
+930	999	861
+935	588	913
+938	465	61
+950	412	218
+951	816	15
+954	101	494
+959	230	895
+960	149	480
+964	136	339
+965	189	2
+971	94	1
+976	781	364
+987	175	7
+991	508	830
+997	776	861
+998	513	466
diff --git a/tests/evaluation/access1/Low.csv b/tests/evaluation/access1/Low.csv
index e275ee51d..0a80e9442 100644
--- a/tests/evaluation/access1/Low.csv
+++ b/tests/evaluation/access1/Low.csv
@@ -1,1016 +1,1016 @@
-581	777	820
-454	621	593
-816	369	510
-612	789	362
-237	200	643
-70	687	407
-50	240	555
-581	815	592
-748	576	166
-698	887	318
-42	316	78
-539	451	49
-362	906	212
-300	172	862
-625	246	997
-175	42	543
-780	127	701
-438	531	113
-560	20	623
-347	603	181
-2	5	40
-5	43	23
-32	46	49
-14	34	7
-40	3	38
-43	17	18
-46	2	23
-28	2	27
-9	36	37
-12	23	38
-50	27	31
-39	1	10
-10	49	31
-26	35	3
-27	16	44
-28	5	28
-29	15	32
-29	42	33
-22	46	25
-37	41	27
-26	11	32
-42	1	20
-37	40	34
-21	26	15
-44	5	30
-46	44	16
-17	19	45
-28	44	30
+1	1	8
+1	1	20
+1	1	31
+1	2	39
+1	7	24
+1	8	18
+1	11	11
+1	15	8
 1	16	17
-26	12	13
-41	5	5
-4	16	25
-37	17	49
-23	18	50
-3	40	42
-14	14	37
-29	15	27
-15	22	16
-17	37	29
-26	43	48
-16	41	28
-17	21	22
-26	50	3
-21	23	48
-47	29	13
-6	6	12
-15	9	35
-21	50	27
-20	50	17
-14	50	22
+1	17	46
 1	18	34
-15	21	16
-21	31	16
-24	5	14
-33	4	22
-20	50	7
-43	48	8
-5	1	33
-35	42	18
-11	17	1
-11	8	5
-21	41	16
-13	8	10
-42	50	38
-7	12	50
-7	46	2
-23	9	33
-41	14	48
-2	8	4
-46	36	30
-5	17	2
-37	2	15
-6	42	25
-42	5	46
-50	12	24
-26	44	40
-18	29	21
+1	21	9
 1	23	40
-24	47	25
-42	29	26
-35	7	10
-32	20	23
-25	47	28
-19	27	2
-36	48	25
-37	41	41
-34	42	21
-36	33	23
-24	12	35
-3	9	6
-5	10	37
-18	21	40
-43	32	20
-39	24	49
-10	17	35
-25	37	7
-18	44	3
-32	50	13
-15	11	6
-49	21	27
-8	26	47
-24	6	8
-41	13	22
-31	16	26
-49	9	46
-20	15	43
-10	6	14
-19	24	41
-32	26	23
-31	15	45
-39	14	9
-13	2	26
-30	37	50
-21	8	9
-4	8	40
-38	6	3
-16	50	21
-26	1	37
-28	32	22
-20	43	49
-41	13	49
-24	31	30
-29	9	2
-35	25	36
-48	25	43
-28	44	49
-18	44	13
-31	3	6
-33	3	23
-33	45	37
-28	29	10
-46	1	46
-18	8	30
-21	6	45
-15	46	21
-11	28	7
-17	22	29
-3	38	19
-37	15	15
-15	10	33
-32	31	14
-36	44	28
-2	6	50
-16	12	14
-39	19	27
-13	15	18
-13	42	9
-27	42	24
-34	50	50
-10	33	27
-7	17	32
-42	41	10
-28	12	6
-40	5	39
-44	37	12
-22	8	27
-30	34	45
-14	20	41
-33	38	19
-43	9	3
-30	8	2
-4	41	36
-9	28	11
-13	39	25
-20	10	47
-6	39	18
-13	23	33
-49	44	36
-36	17	31
-35	31	31
-29	41	28
-45	38	41
-43	7	48
-17	36	40
-48	41	41
-35	13	47
-40	28	11
-34	4	25
-49	35	40
-36	30	47
-20	47	21
-48	12	42
-8	48	6
-8	48	10
-22	30	30
-26	36	27
-3	43	20
-49	25	19
-18	24	4
-23	6	5
-20	28	44
-45	43	4
-35	27	11
-8	13	35
-25	43	13
-49	47	14
-44	36	2
-1	11	11
-35	19	25
-22	36	23
-26	44	31
-4	43	38
-12	21	29
-19	22	18
-31	20	2
-37	13	1
+1	24	13
+1	27	7
+1	39	39
+1	42	15
+1	46	27
+2	2	25
 2	3	16
-44	36	28
-7	34	30
-25	15	20
+2	5	40
+2	6	50
+2	8	4
 2	12	6
-34	1	30
-7	30	28
+2	17	46
+2	25	35
+2	29	38
+2	31	12
+2	31	42
 2	33	49
-34	47	47
-14	13	43
-23	16	3
-3	31	45
+2	36	30
+2	39	32
+2	42	23
+2	47	4
 2	50	30
-32	39	33
-29	6	25
-12	23	33
-13	35	40
-18	7	31
-19	15	14
-30	31	23
-1	1	31
-14	1	43
-8	41	31
-29	22	16
-5	23	1
-49	10	44
-4	25	36
-40	43	17
-30	15	33
-26	9	37
-33	47	27
-25	13	36
-31	12	45
-43	35	42
-48	33	12
-46	20	25
 3	1	27
-1	8	18
-47	27	2
-40	4	45
-12	1	40
-46	41	46
-6	4	19
-39	8	35
-33	26	22
-33	12	26
-24	17	49
-44	47	11
+3	2	37
+3	9	6
+3	9	14
+3	13	11
+3	14	5
+3	16	41
+3	17	23
+3	21	30
+3	23	36
+3	24	47
+3	31	45
+3	32	40
+3	35	15
+3	35	35
+3	38	16
+3	38	19
+3	38	30
+3	39	40
+3	40	42
+3	43	20
+3	43	38
+3	45	35
+3	48	4
+4	2	9
+4	4	42
+4	5	35
+4	8	40
+4	9	10
+4	11	41
+4	16	23
+4	16	25
+4	17	42
+4	20	23
+4	22	31
 4	22	35
-17	8	49
-44	16	36
+4	23	37
+4	25	28
+4	25	36
+4	27	36
+4	28	34
+4	29	38
+4	34	48
+4	35	10
+4	35	50
+4	41	36
+4	43	27
+4	43	38
+4	46	49
+4	48	26
+4	50	4
+5	1	33
+5	10	37
+5	14	27
+5	16	7
+5	16	16
+5	17	2
+5	18	10
+5	22	4
+5	22	26
+5	23	1
+5	40	29
+5	43	23
+5	45	3
+6	4	19
+6	5	20
+6	6	12
+6	10	6
+6	11	10
+6	14	33
+6	19	27
+6	20	27
+6	24	29
+6	29	11
+6	33	34
+6	38	43
+6	39	18
+6	39	43
+6	41	35
+6	42	25
+6	44	28
+6	49	31
+7	10	11
+7	11	8
+7	12	50
+7	13	13
+7	16	5
+7	16	29
+7	17	32
+7	18	50
+7	20	36
+7	21	12
+7	23	34
+7	24	45
 7	26	8
-11	23	13
-34	44	40
-44	48	13
+7	27	18
+7	30	28
+7	30	34
+7	32	4
+7	33	43
+7	34	30
+7	36	50
+7	42	6
+7	45	7
+7	45	36
+7	46	2
+7	49	36
+8	2	29
+8	9	2
+8	13	35
+8	17	10
+8	18	12
+8	18	42
+8	22	17
+8	26	7
+8	26	47
+8	27	28
+8	27	47
+8	29	12
+8	29	41
+8	33	37
+8	35	35
+8	35	49
+8	38	37
+8	41	31
+8	47	29
+8	48	6
+8	48	10
+8	50	43
+9	3	34
+9	11	39
+9	23	13
+9	23	38
+9	25	49
+9	28	11
+9	30	5
+9	30	43
+9	36	37
+9	44	24
+9	48	7
+9	50	4
+10	6	14
+10	6	37
+10	13	7
+10	17	35
+10	19	13
+10	21	32
+10	25	29
+10	31	19
+10	33	27
+10	35	32
+10	40	41
+10	41	35
+10	45	40
+10	48	38
+10	49	31
+10	50	9
+10	50	32
 11	2	44
-40	22	6
-47	5	9
-31	45	31
-26	37	10
-36	49	20
-2	2	25
-28	3	12
-28	17	6
-31	43	13
-4	43	27
-26	49	27
+11	5	11
+11	8	5
+11	12	47
+11	14	37
+11	17	1
+11	18	39
+11	23	13
+11	28	7
+11	31	18
+11	33	36
+11	36	37
+11	37	3
+11	42	24
+11	44	2
+11	46	40
 11	49	13
-23	5	16
-29	43	39
-8	29	41
-13	23	38
-47	5	18
-22	49	2
-30	16	24
-47	38	26
-7	13	13
-15	27	6
-39	6	18
-35	41	16
-35	30	38
-43	1	48
-44	19	49
-3	9	14
-20	21	25
-36	34	16
-13	42	40
-22	41	2
-17	21	30
+12	1	40
+12	2	36
+12	8	29
 12	11	14
-41	36	34
+12	13	38
+12	17	35
+12	19	40
+12	20	18
+12	21	29
+12	23	33
+12	23	38
+12	29	15
+12	31	12
 12	31	38
+12	34	45
+12	39	18
+12	44	26
+12	44	34
+12	48	30
+13	1	39
+13	2	26
+13	4	11
+13	8	10
+13	9	3
+13	10	32
+13	11	19
+13	12	42
+13	15	5
+13	15	18
+13	15	39
+13	17	13
+13	23	12
+13	23	33
+13	23	38
+13	35	40
+13	36	2
+13	38	34
+13	39	25
+13	42	9
+13	42	40
+13	45	34
+13	47	4
+13	47	32
+13	50	11
+14	1	43
+14	8	44
+14	11	33
+14	13	43
+14	14	28
+14	14	37
+14	15	50
+14	16	23
+14	19	8
+14	19	39
+14	20	38
+14	20	41
+14	27	39
+14	29	6
+14	31	45
+14	34	7
+14	40	37
 14	43	49
-47	36	16
-6	5	20
-48	40	25
-49	37	48
-3	48	4
-25	47	23
-19	19	45
-40	39	6
-22	20	29
-47	22	24
-45	46	25
-11	42	24
-36	38	38
-45	47	12
-48	11	22
-29	21	39
-3	32	40
-7	16	5
-8	22	17
-38	24	16
-40	34	2
+14	45	17
+14	46	32
+14	50	22
+15	2	22
+15	5	4
+15	7	16
+15	9	35
+15	10	22
+15	10	33
+15	11	6
+15	18	6
+15	21	16
+15	22	16
+15	27	6
+15	31	6
+15	31	38
+15	33	29
+15	34	6
+15	46	21
+16	12	14
+16	25	17
+16	32	8
+16	37	38
+16	41	21
+16	41	28
+16	42	35
+16	44	16
+16	48	34
+16	50	21
+17	2	38
+17	3	25
+17	3	34
+17	8	14
+17	8	49
+17	9	27
+17	16	30
+17	19	45
+17	20	43
+17	21	22
+17	21	30
+17	22	29
+17	23	8
+17	26	10
+17	29	2
+17	29	15
+17	32	42
+17	36	40
+17	37	29
+17	42	49
+18	3	16
+18	5	24
+18	7	31
+18	8	30
+18	17	46
+18	21	40
+18	24	4
+18	29	21
+18	29	30
+18	30	39
+18	31	31
+18	36	34
+18	38	3
+18	41	41
+18	44	3
+18	44	8
+18	44	13
+18	45	37
 19	2	4
-12	17	35
-47	11	29
-35	43	28
-4	27	36
-25	34	5
-26	13	13
-29	2	14
-48	8	13
-4	17	42
-23	26	30
-36	28	12
-6	49	31
-1	17	46
-19	48	47
-39	9	43
-29	47	6
-13	1	39
-44	1	19
+19	4	10
+19	15	14
+19	17	47
+19	18	33
+19	19	45
+19	22	18
+19	22	36
+19	22	44
+19	24	41
+19	25	14
+19	27	2
+19	29	21
+19	30	11
+19	30	38
+19	34	36
 19	35	23
-24	29	40
-42	16	28
-6	11	10
-37	9	25
-40	11	10
-9	48	7
-5	40	29
-50	5	21
-34	10	36
-37	41	25
-37	42	18
-47	23	13
-31	45	23
-38	4	21
-17	16	30
-36	10	39
-29	41	50
-28	35	38
-50	13	33
-10	50	32
-21	29	16
-27	34	44
-17	2	38
-10	6	37
-1	42	15
-33	18	40
-42	21	35
-1	46	27
-24	2	35
-40	38	23
-4	35	50
-25	36	30
-41	30	39
-4	9	10
-36	7	28
-39	49	28
-4	50	4
-40	7	3
-49	47	39
-2	36	30
-1	1	20
-28	19	31
-2	17	46
-13	45	34
+19	37	38
 19	42	44
-35	25	40
-11	33	36
-18	36	34
-21	46	12
-22	17	5
+19	48	32
+19	48	47
 20	1	28
-40	37	17
-16	48	34
-39	32	22
-12	31	12
-22	40	10
-26	30	33
-13	11	19
-46	21	49
-49	22	43
-32	4	21
-23	36	9
-3	45	35
-50	29	7
-46	21	29
-27	36	22
-9	44	24
-34	3	42
-4	2	9
-31	15	4
-44	23	39
-13	9	3
-34	31	8
-15	7	16
-45	17	32
-38	45	4
-42	11	25
-38	39	21
-27	39	38
-36	6	46
-49	42	13
+20	5	50
+20	10	47
 20	11	5
-26	26	49
-46	28	37
-19	4	10
-14	31	45
-7	20	36
-49	48	25
-39	17	45
-48	49	4
-7	33	43
-45	20	41
-35	46	4
-13	23	12
-32	27	30
-47	13	6
-36	4	34
-22	26	16
-18	30	39
-23	26	41
-29	20	2
-11	37	3
-32	41	25
 20	11	35
-27	19	37
-32	16	15
-46	15	14
-47	4	26
-4	11	41
-19	48	32
-24	34	21
-28	42	2
-44	15	25
-7	30	34
+20	12	27
+20	14	6
+20	15	43
+20	17	39
+20	21	25
+20	23	43
+20	28	44
+20	30	38
+20	42	49
+20	43	1
+20	43	49
+20	44	29
+20	47	21
+20	49	36
+20	50	7
+20	50	17
+21	1	15
+21	6	45
+21	8	9
+21	23	48
+21	25	19
+21	26	15
+21	29	16
+21	31	16
+21	41	16
+21	43	30
+21	46	12
+21	49	22
+21	50	27
+22	7	19
+22	8	27
+22	17	5
+22	20	29
+22	26	13
+22	26	16
+22	30	30
+22	35	26
+22	36	6
+22	36	23
+22	40	10
+22	41	2
+22	42	37
+22	46	25
+22	49	2
+23	5	16
+23	6	5
+23	9	33
+23	13	15
+23	13	45
 23	13	47
-48	50	23
-1	27	7
-41	31	44
-31	39	38
-49	6	38
-13	50	11
-28	36	21
-7	42	6
-33	27	16
-35	28	4
-42	37	24
+23	15	8
+23	16	3
+23	18	50
 23	25	9
-35	33	6
-33	11	18
-36	34	9
-21	43	30
-4	48	26
-47	30	17
+23	26	30
+23	26	41
+23	29	29
 23	34	40
-45	38	49
-31	17	7
-38	12	32
-23	13	15
-9	25	49
-16	37	38
-16	32	8
+23	36	9
+23	37	6
+23	37	18
+23	44	50
+24	2	35
+24	5	14
+24	6	8
+24	7	40
+24	8	28
+24	9	29
+24	12	35
+24	13	2
+24	16	7
+24	17	49
+24	21	13
+24	21	16
+24	23	17
+24	23	47
+24	24	22
+24	25	3
+24	28	36
+24	29	40
+24	29	42
+24	30	48
+24	31	2
+24	31	30
+24	33	49
+24	34	21
 24	37	39
-8	47	29
-50	24	22
-30	24	23
+24	47	2
+24	47	25
+24	49	5
+24	49	26
+24	49	50
+25	9	13
+25	13	8
+25	13	36
+25	14	40
+25	15	20
+25	19	2
+25	19	23
+25	19	45
+25	20	25
+25	31	36
+25	34	5
+25	36	30
+25	37	7
+25	43	13
+25	47	23
+25	47	28
+26	1	37
+26	3	29
+26	4	28
+26	9	37
+26	11	32
+26	12	13
 26	12	45
-32	12	15
-42	40	29
-13	15	39
-18	44	8
-31	36	48
-42	22	19
-46	36	8
-20	43	1
+26	13	13
 26	20	5
-44	28	20
-43	2	22
-41	48	21
-10	45	40
-36	37	29
-2	31	42
-1	15	8
-6	19	27
-25	14	40
-22	36	6
-42	47	19
-24	33	49
-37	31	40
-30	7	26
-39	13	43
-12	13	38
-14	14	28
-41	16	38
-36	20	45
-32	31	13
+26	23	22
 26	26	3
-35	21	10
-35	3	47
-29	30	35
-7	16	29
-3	35	35
-37	40	25
-48	46	28
-19	17	47
-47	14	10
-47	27	15
-35	22	41
-39	35	49
-11	46	40
-45	2	31
-4	28	34
-35	42	49
-12	48	30
-14	19	39
-40	17	4
-19	18	33
-6	38	43
-6	44	28
-2	39	32
-41	14	41
-28	48	6
-8	27	28
-16	44	16
-23	44	50
-26	3	29
-18	5	24
-33	31	9
-28	46	32
-6	14	33
-2	29	38
-25	19	23
-13	47	4
-42	30	47
-8	18	12
-36	20	13
-4	34	48
-44	13	30
-27	25	22
-3	38	30
+26	26	49
+26	30	15
+26	30	33
+26	31	42
+26	35	3
+26	36	27
+26	37	10
+26	43	48
+26	44	12
+26	44	31
+26	44	40
 26	48	50
-28	2	29
-39	12	39
-32	37	14
-21	25	19
-20	30	38
-19	29	21
+26	49	27
+26	50	3
 27	2	34
-45	2	12
-19	22	36
-14	15	50
-32	38	20
-14	45	17
-3	24	47
-7	21	12
-50	40	43
-44	2	29
-35	36	5
+27	6	1
 27	9	13
-26	31	42
-22	7	19
-49	1	30
-37	15	39
-28	19	3
-39	6	13
+27	13	5
+27	16	44
+27	19	37
+27	22	13
+27	25	22
+27	26	33
 27	29	47
-33	31	42
-24	9	29
+27	34	44
+27	36	22
+27	37	48
+27	39	38
+27	41	42
+27	42	24
+27	45	50
+28	2	27
+28	2	29
+28	3	12
+28	4	37
+28	5	28
+28	5	33
+28	10	12
+28	12	6
+28	13	49
+28	14	21
+28	17	6
+28	18	40
+28	19	3
+28	19	31
+28	20	26
+28	29	10
+28	32	3
+28	32	22
+28	35	38
+28	36	21
+28	36	48
+28	42	2
+28	43	33
+28	44	30
+28	44	49
+28	46	32
+28	48	6
+28	48	16
+28	49	2
+29	2	14
+29	5	12
+29	6	25
+29	7	6
+29	8	23
+29	9	2
+29	14	3
+29	15	27
+29	15	32
+29	19	23
+29	20	2
+29	21	35
+29	21	39
+29	22	16
+29	23	35
+29	26	38
+29	30	35
+29	41	28
+29	41	50
+29	42	33
+29	43	39
+29	44	28
+29	47	6
+30	4	33
+30	7	26
+30	8	2
+30	15	33
+30	16	24
+30	18	43
+30	23	17
+30	24	23
 30	30	22
-24	13	2
-18	38	3
-38	47	34
+30	31	23
+30	31	28
+30	34	45
+30	35	25
+30	35	41
+30	36	3
+30	37	50
+31	2	27
+31	3	6
+31	12	45
+31	15	4
+31	15	41
+31	15	45
+31	16	11
+31	16	26
+31	17	7
+31	20	2
+31	26	5
+31	33	39
+31	36	48
+31	39	38
+31	43	13
+31	45	23
+31	45	31
+31	46	29
+32	4	21
+32	4	27
+32	7	50
+32	11	22
+32	11	28
+32	12	15
+32	16	15
+32	17	35
+32	20	23
+32	22	41
+32	26	23
+32	27	30
+32	31	13
+32	31	14
+32	35	46
 32	36	38
-34	10	8
-20	14	6
-36	13	44
-5	16	7
+32	37	14
+32	38	20
+32	39	33
+32	41	25
+32	45	20
+32	46	49
+32	50	13
+33	3	23
+33	4	22
+33	8	6
+33	8	20
+33	11	18
+33	12	26
+33	18	40
+33	24	37
+33	26	22
+33	27	16
+33	27	45
+33	31	9
+33	31	42
 33	34	36
-27	22	13
-17	3	25
-27	41	42
-41	19	1
-44	34	9
-41	6	14
-15	5	4
-25	19	45
-31	26	5
-41	46	48
-1	2	39
-43	1	47
-49	43	5
-42	44	3
-7	32	4
-31	15	41
-45	23	16
-37	21	32
-5	22	26
-50	7	41
-45	33	41
-11	44	2
-9	30	43
-1	24	13
-24	23	17
-45	7	42
-27	45	50
-11	5	11
-36	17	37
-25	9	13
-8	26	7
-5	14	27
-14	29	6
-20	17	39
-13	47	32
-9	3	34
-10	41	35
-18	41	41
-50	25	3
-23	15	8
-25	19	2
-50	5	39
-3	21	30
-38	46	14
-24	16	7
-26	30	15
-46	16	32
-28	13	49
-47	24	45
-2	25	35
-7	23	34
-35	29	7
-50	45	37
-9	50	4
-3	14	5
-44	12	27
-50	21	10
-17	9	27
-13	4	11
-20	49	36
-17	42	49
-7	45	7
-17	8	14
-29	44	28
-16	41	21
+33	38	19
+33	43	18
+33	44	27
+33	45	37
+33	47	27
+34	1	30
+34	3	26
+34	3	42
+34	4	25
+34	10	8
+34	10	36
+34	26	25
+34	27	17
+34	31	8
+34	32	20
+34	37	3
+34	42	21
+34	44	2
+34	44	40
+34	47	47
+34	50	50
+35	3	47
+35	7	10
+35	7	47
+35	13	47
+35	15	14
+35	15	33
+35	18	21
 35	19	11
-44	10	21
-14	46	32
-4	29	38
-38	19	34
-7	18	50
+35	19	25
+35	21	10
+35	22	41
+35	25	36
+35	25	40
+35	27	11
+35	28	4
+35	29	7
+35	30	38
+35	31	31
+35	33	6
 35	35	26
-1	21	9
-13	38	34
-5	45	3
-21	49	22
+35	36	5
+35	41	16
+35	42	18
+35	42	49
+35	43	28
+35	46	4
+35	46	46
+35	47	10
+35	47	32
+35	49	28
+36	2	11
+36	4	34
+36	6	46
+36	7	28
+36	8	4
+36	10	9
+36	10	39
+36	11	9
+36	13	44
+36	17	31
+36	17	37
+36	20	13
+36	20	45
+36	25	1
 36	26	17
-14	19	8
-9	23	13
-15	31	38
-8	38	37
-7	10	11
-24	25	3
-28	48	16
-31	2	27
-3	38	16
-8	17	10
-49	22	49
-46	23	9
-12	20	18
-8	2	29
-19	37	38
-10	35	32
-42	24	42
-48	30	20
-28	49	2
-48	42	8
-29	8	23
-41	28	42
-12	44	34
-15	31	6
-7	49	36
-8	9	2
-7	24	45
-9	30	5
-7	45	36
-24	49	5
-29	7	6
-41	50	35
-3	35	15
-3	23	36
-30	4	33
+36	28	12
+36	28	44
 36	30	20
-40	48	33
-14	20	38
-12	44	26
-24	49	50
-44	48	32
-48	11	33
-50	16	47
-3	17	23
-19	30	11
-45	22	11
-18	3	16
-49	20	33
-4	46	49
-22	42	37
-48	41	37
+36	30	47
+36	33	23
+36	34	9
+36	34	16
+36	34	45
+36	35	26
+36	37	20
+36	37	29
+36	38	38
+36	39	12
+36	39	17
+36	44	28
+36	48	25
+36	49	20
+37	2	15
+37	9	25
+37	13	1
+37	15	15
+37	15	39
+37	17	49
+37	21	32
+37	31	40
+37	38	8
+37	40	25
+37	40	34
+37	41	25
+37	41	27
+37	41	29
+37	41	41
+37	42	18
+37	47	40
+37	47	43
+37	49	4
+38	4	19
+38	4	21
+38	6	3
+38	10	1
+38	12	32
+38	12	47
 38	14	4
-29	21	35
-12	39	18
-30	36	3
+38	17	30
+38	19	34
+38	24	16
 38	30	47
-24	21	16
-29	23	35
-30	35	41
-24	24	22
-50	41	12
-27	13	5
-19	25	14
-23	29	29
-4	4	42
-30	18	43
-37	47	43
-4	23	37
-21	1	15
-24	47	2
-26	4	28
-24	30	48
-18	17	46
-27	26	33
-6	33	34
-41	42	50
-4	5	35
+38	34	32
+38	39	21
+38	45	4
+38	46	14
+38	47	34
+39	1	10
+39	6	11
+39	6	13
+39	6	18
+39	8	35
+39	9	43
+39	12	30
+39	12	31
+39	12	39
+39	13	43
+39	14	9
+39	17	45
+39	19	27
+39	22	10
+39	24	49
+39	25	32
+39	32	22
+39	34	36
+39	35	49
+39	37	49
 39	49	23
-28	43	33
-23	37	18
-32	11	28
-45	4	38
-38	10	1
-8	29	12
-13	36	2
-15	2	22
-33	44	27
-9	23	38
-3	2	37
-23	13	45
-29	19	23
-50	6	39
+39	49	28
+40	2	40
+40	3	38
+40	4	45
+40	5	39
+40	7	3
+40	9	12
+40	11	10
+40	11	24
+40	17	4
+40	22	6
+40	28	11
+40	28	17
+40	29	37
+40	34	2
+40	37	17
+40	38	23
+40	39	6
+40	43	17
 40	44	20
+40	48	33
+41	5	5
+41	6	14
+41	13	22
+41	13	49
+41	14	41
+41	14	48
+41	16	38
+41	18	36
+41	19	1
+41	21	15
+41	28	39
+41	28	42
+41	30	39
+41	31	44
+41	34	9
+41	35	32
+41	36	34
+41	39	25
+41	42	50
+41	46	48
+41	48	21
+41	50	35
+42	1	20
+42	1	47
+42	5	46
+42	11	25
+42	15	27
+42	16	28
+42	16	48
 42	17	6
-12	34	45
-36	34	45
-35	7	47
-36	28	44
-49	40	11
-40	9	12
+42	21	35
+42	22	19
+42	24	42
 42	27	3
-40	2	40
-10	21	32
-10	31	19
-42	16	48
-20	23	43
-36	37	20
-19	22	44
-24	28	36
-47	36	14
-41	18	36
-36	39	12
-24	21	13
-36	2	11
-8	35	35
-35	49	28
-32	35	46
-28	20	26
-28	14	21
-34	3	26
-45	42	40
-8	35	49
-5	22	4
-11	14	37
-43	22	36
-4	22	31
-49	22	28
-42	49	41
-1	39	39
-26	44	12
-12	19	40
+42	29	26
+42	30	47
 42	31	39
-11	36	37
-27	37	48
-38	4	19
-34	26	25
-12	29	15
-20	42	49
-32	22	41
-36	11	9
-8	33	37
-25	31	36
-41	39	25
-28	5	33
-50	38	43
-14	40	37
-35	47	32
-15	34	6
-34	44	2
-46	32	12
-28	32	3
-6	10	6
-47	42	15
-30	35	25
-28	10	12
-5	16	16
-10	25	29
-9	11	39
-34	37	3
-49	26	4
-47	23	8
+42	31	43
+42	37	24
+42	40	29
+42	41	10
+42	44	3
 42	46	25
-39	6	11
-4	25	28
-17	3	34
-11	18	39
-10	50	9
-33	27	45
-32	7	50
-10	48	38
-41	35	32
-20	12	27
-8	50	43
-36	8	4
-4	35	10
-29	14	3
-5	18	10
-16	25	17
-29	5	12
-17	20	43
-49	31	48
-26	23	22
-13	15	5
-17	29	15
-18	31	31
-35	47	10
-19	30	38
-36	39	17
-45	32	2
-46	28	3
+42	47	19
+42	49	41
+42	50	38
+42	316	78
+43	1	47
+43	1	48
+43	2	22
+43	7	48
+43	9	3
+43	17	18
+43	22	36
+43	23	42
+43	32	20
+43	35	42
+43	48	8
+44	1	19
+44	2	29
+44	5	10
+44	5	30
+44	6	45
+44	10	21
+44	12	27
+44	13	30
+44	15	25
+44	16	36
+44	19	49
+44	23	39
+44	28	20
+44	29	34
+44	30	41
+44	34	9
+44	36	2
+44	36	28
+44	37	12
+44	41	27
+44	47	11
+44	48	13
+44	48	32
 44	48	39
+45	2	12
+45	2	31
+45	4	38
+45	7	42
+45	8	17
 45	13	20
-39	22	10
-2	31	12
-50	44	7
-24	31	2
-18	29	30
-17	29	2
-39	12	30
-42	31	43
-7	27	18
-6	29	11
-39	12	31
-14	27	39
-38	34	32
-41	21	15
-10	40	41
-13	17	13
-6	41	35
-14	8	44
-49	36	4
-28	36	48
-33	43	18
-30	23	17
-36	25	1
-31	46	29
-15	10	22
-35	46	46
-32	4	27
-50	20	47
-22	26	13
-36	10	9
-50	47	43
-32	17	35
-11	12	47
-27	6	1
-12	2	36
-3	13	11
-44	6	45
-24	7	40
-43	23	42
+45	17	32
+45	20	41
+45	22	11
+45	23	16
+45	32	2
+45	33	41
+45	38	41
+45	38	49
+45	42	40
+45	43	4
+45	46	25
+45	47	12
+46	1	46
+46	2	23
+46	15	14
+46	16	32
+46	20	25
+46	21	29
+46	21	49
+46	23	9
+46	23	47
 46	24	36
-38	12	47
-15	18	6
-42	15	27
-3	43	38
-32	11	22
-7	11	8
-2	42	23
-12	8	29
+46	28	3
+46	28	37
+46	32	12
+46	36	8
+46	36	30
+46	41	46
+46	44	16
+47	4	26
+47	5	9
+47	5	18
+47	11	29
+47	13	6
+47	14	10
+47	22	24
+47	23	8
+47	23	13
+47	24	45
+47	27	2
+47	27	15
+47	29	13
+47	30	17
+47	36	14
+47	36	16
+47	38	26
+47	42	15
+48	8	13
+48	11	22
+48	11	33
+48	12	42
 48	13	28
-24	49	26
-25	20	25
-40	11	24
-8	27	47
-3	39	40
-37	47	40
-34	32	20
-1	7	24
-41	28	39
-3	16	41
-44	29	34
-20	5	50
-14	11	33
-50	33	27
-6	20	27
-46	23	47
-24	29	42
-48	39	15
-42	1	47
-17	26	10
-31	33	39
-36	35	26
-7	36	50
-20	44	29
+48	19	42
 48	24	43
-17	23	8
-28	18	40
-49	22	22
-37	49	4
-11	31	18
-40	28	17
-33	24	37
-13	12	42
-6	39	43
-25	13	8
-19	34	36
+48	25	43
+48	30	20
+48	33	12
+48	39	15
+48	40	25
+48	41	37
+48	41	41
+48	42	8
+48	46	28
+48	49	4
+48	50	23
 48	50	41
-44	41	27
-39	25	32
-8	18	42
-14	16	23
-33	8	6
-44	30	41
-15	33	29
-22	35	26
-35	18	21
-4	16	23
-23	37	6
-37	41	29
-31	16	11
-32	45	20
-35	15	14
-10	13	7
-30	31	28
-24	8	28
-40	29	37
-1	1	8
-24	23	47
-34	27	17
-28	4	37
-48	19	42
-16	42	35
-13	10	32
-45	8	17
-18	45	37
-35	15	33
-41	34	9
-10	19	13
-2	47	4
-49	48	22
+49	1	30
 49	4	47
-29	26	38
-4	20	23
-39	34	36
-44	5	10
-17	32	42
-33	8	20
-38	17	30
-6	24	29
-37	38	8
-39	37	49
+49	6	38
+49	9	46
+49	10	44
+49	20	33
+49	21	27
+49	22	22
+49	22	28
+49	22	43
+49	22	49
+49	25	19
+49	26	4
+49	31	48
+49	35	40
+49	36	4
+49	37	48
+49	40	11
+49	42	13
+49	43	5
+49	44	36
+49	47	14
+49	47	39
+49	48	22
+49	48	25
+50	5	21
+50	5	39
+50	6	39
+50	7	41
+50	12	24
+50	13	33
+50	16	47
+50	20	47
+50	21	10
+50	24	22
+50	25	3
+50	27	31
+50	29	7
+50	33	27
+50	38	43
+50	40	43
+50	41	12
+50	44	7
+50	45	37
+50	47	43
+50	240	555
+70	687	407
+175	42	543
+237	200	643
+300	172	862
+347	603	181
+362	906	212
+438	531	113
+454	621	593
+539	451	49
+560	20	623
+581	777	820
+581	815	592
+612	789	362
+625	246	997
+698	887	318
+748	576	166
+780	127	701
+816	369	510
diff --git a/tests/evaluation/access1/Medium.csv b/tests/evaluation/access1/Medium.csv
index 4af2a3d92..c8dc3a5c9 100644
--- a/tests/evaluation/access1/Medium.csv
+++ b/tests/evaluation/access1/Medium.csv
@@ -1,13 +1,13 @@
-46	12	47
+5	38	16
 11	22	13
-33	8	23
+14	20	23
+16	47	34
 22	40	25
 25	41	28
+25	41	36
+33	8	23
+34	27	36
 44	41	2
-14	20	23
 46	10	37
-16	47	34
+46	12	47
 48	43	28
-5	38	16
-25	41	36
-34	27	36
diff --git a/tests/evaluation/magic_turing1/bad b/tests/evaluation/magic_turing1/bad
new file mode 100755
index 000000000..27ef11705
Binary files /dev/null and b/tests/evaluation/magic_turing1/bad differ
diff --git a/tests/evaluation/magic_turing1/bad.cpp b/tests/evaluation/magic_turing1/bad.cpp
new file mode 100644
index 000000000..41c9c45ed
--- /dev/null
+++ b/tests/evaluation/magic_turing1/bad.cpp
@@ -0,0 +1,15919 @@
+
+#include "souffle/CompiledSouffle.h"
+
+extern "C" {}
+
+namespace souffle {
+static const RamDomain RAM_BIT_SHIFT_MASK = RAM_DOMAIN_SIZE - 1;
+struct t_btree_3__0_1_2__111 {
+    using t_tuple = Tuple<RamDomain, 3>;
+    using t_ind_0 = btree_set<t_tuple, index_utils::comparator<0, 1, 2>>;
+    t_ind_0 ind_0;
+    using iterator = t_ind_0::iterator;
+    struct context {
+        t_ind_0::operation_hints hints_0;
+    };
+    context createContext() {
+        return context();
+    }
+    bool insert(const t_tuple& t) {
+        context h;
+        return insert(t, h);
+    }
+    bool insert(const t_tuple& t, context& h) {
+        if (ind_0.insert(t, h.hints_0)) {
+            return true;
+        } else
+            return false;
+    }
+    bool insert(const RamDomain* ramDomain) {
+        RamDomain data[3];
+        std::copy(ramDomain, ramDomain + 3, data);
+        const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
+        context h;
+        return insert(tuple, h);
+    }
+    bool insert(RamDomain a0, RamDomain a1, RamDomain a2) {
+        RamDomain data[3] = {a0, a1, a2};
+        return insert(data);
+    }
+    bool contains(const t_tuple& t, context& h) const {
+        return ind_0.contains(t, h.hints_0);
+    }
+    bool contains(const t_tuple& t) const {
+        context h;
+        return contains(t, h);
+    }
+    std::size_t size() const {
+        return ind_0.size();
+    }
+    iterator find(const t_tuple& t, context& h) const {
+        return ind_0.find(t, h.hints_0);
+    }
+    iterator find(const t_tuple& t) const {
+        context h;
+        return find(t, h);
+    }
+    range<iterator> lowerUpperRange_000(const t_tuple& lower, const t_tuple& upper, context& h) const {
+        return range<iterator>(ind_0.begin(), ind_0.end());
+    }
+    range<iterator> lowerUpperRange_000(const t_tuple& lower, const t_tuple& upper) const {
+        return range<iterator>(ind_0.begin(), ind_0.end());
+    }
+    range<t_ind_0::iterator> lowerUpperRange_111(
+            const t_tuple& lower, const t_tuple& upper, context& h) const {
+        auto pos = ind_0.find(lower, h.hints_0);
+        auto fin = ind_0.end();
+        if (pos != fin) {
+            fin = pos;
+            ++fin;
+        }
+        return make_range(pos, fin);
+    }
+    range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper) const {
+        context h;
+        return lowerUpperRange_111(lower, upper, h);
+    }
+    bool empty() const {
+        return ind_0.empty();
+    }
+    std::vector<range<iterator>> partition() const {
+        return ind_0.getChunks(400);
+    }
+    void purge() {
+        ind_0.clear();
+    }
+    iterator begin() const {
+        return ind_0.begin();
+    }
+    iterator end() const {
+        return ind_0.end();
+    }
+    void printStatistics(std::ostream& o) const {
+        o << " arity 3 direct b-tree index 0 lex-order [0,1,2]\n";
+        ind_0.printStats(o);
+    }
+};
+struct t_btree_1__0__1 {
+    using t_tuple = Tuple<RamDomain, 1>;
+    using t_ind_0 = btree_set<t_tuple, index_utils::comparator<0>>;
+    t_ind_0 ind_0;
+    using iterator = t_ind_0::iterator;
+    struct context {
+        t_ind_0::operation_hints hints_0;
+    };
+    context createContext() {
+        return context();
+    }
+    bool insert(const t_tuple& t) {
+        context h;
+        return insert(t, h);
+    }
+    bool insert(const t_tuple& t, context& h) {
+        if (ind_0.insert(t, h.hints_0)) {
+            return true;
+        } else
+            return false;
+    }
+    bool insert(const RamDomain* ramDomain) {
+        RamDomain data[1];
+        std::copy(ramDomain, ramDomain + 1, data);
+        const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
+        context h;
+        return insert(tuple, h);
+    }
+    bool insert(RamDomain a0) {
+        RamDomain data[1] = {a0};
+        return insert(data);
+    }
+    bool contains(const t_tuple& t, context& h) const {
+        return ind_0.contains(t, h.hints_0);
+    }
+    bool contains(const t_tuple& t) const {
+        context h;
+        return contains(t, h);
+    }
+    std::size_t size() const {
+        return ind_0.size();
+    }
+    iterator find(const t_tuple& t, context& h) const {
+        return ind_0.find(t, h.hints_0);
+    }
+    iterator find(const t_tuple& t) const {
+        context h;
+        return find(t, h);
+    }
+    range<iterator> lowerUpperRange_0(const t_tuple& lower, const t_tuple& upper, context& h) const {
+        return range<iterator>(ind_0.begin(), ind_0.end());
+    }
+    range<iterator> lowerUpperRange_0(const t_tuple& lower, const t_tuple& upper) const {
+        return range<iterator>(ind_0.begin(), ind_0.end());
+    }
+    range<t_ind_0::iterator> lowerUpperRange_1(const t_tuple& lower, const t_tuple& upper, context& h) const {
+        auto pos = ind_0.find(lower, h.hints_0);
+        auto fin = ind_0.end();
+        if (pos != fin) {
+            fin = pos;
+            ++fin;
+        }
+        return make_range(pos, fin);
+    }
+    range<t_ind_0::iterator> lowerUpperRange_1(const t_tuple& lower, const t_tuple& upper) const {
+        context h;
+        return lowerUpperRange_1(lower, upper, h);
+    }
+    bool empty() const {
+        return ind_0.empty();
+    }
+    std::vector<range<iterator>> partition() const {
+        return ind_0.getChunks(400);
+    }
+    void purge() {
+        ind_0.clear();
+    }
+    iterator begin() const {
+        return ind_0.begin();
+    }
+    iterator end() const {
+        return ind_0.end();
+    }
+    void printStatistics(std::ostream& o) const {
+        o << " arity 1 direct b-tree index 0 lex-order [0]\n";
+        ind_0.printStats(o);
+    }
+};
+struct t_btree_3__2_0_1__001__111 {
+    using t_tuple = Tuple<RamDomain, 3>;
+    using t_ind_0 = btree_set<t_tuple, index_utils::comparator<2, 0, 1>>;
+    t_ind_0 ind_0;
+    using iterator = t_ind_0::iterator;
+    struct context {
+        t_ind_0::operation_hints hints_0;
+    };
+    context createContext() {
+        return context();
+    }
+    bool insert(const t_tuple& t) {
+        context h;
+        return insert(t, h);
+    }
+    bool insert(const t_tuple& t, context& h) {
+        if (ind_0.insert(t, h.hints_0)) {
+            return true;
+        } else
+            return false;
+    }
+    bool insert(const RamDomain* ramDomain) {
+        RamDomain data[3];
+        std::copy(ramDomain, ramDomain + 3, data);
+        const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
+        context h;
+        return insert(tuple, h);
+    }
+    bool insert(RamDomain a0, RamDomain a1, RamDomain a2) {
+        RamDomain data[3] = {a0, a1, a2};
+        return insert(data);
+    }
+    bool contains(const t_tuple& t, context& h) const {
+        return ind_0.contains(t, h.hints_0);
+    }
+    bool contains(const t_tuple& t) const {
+        context h;
+        return contains(t, h);
+    }
+    std::size_t size() const {
+        return ind_0.size();
+    }
+    iterator find(const t_tuple& t, context& h) const {
+        return ind_0.find(t, h.hints_0);
+    }
+    iterator find(const t_tuple& t) const {
+        context h;
+        return find(t, h);
+    }
+    range<iterator> lowerUpperRange_000(const t_tuple& lower, const t_tuple& upper, context& h) const {
+        return range<iterator>(ind_0.begin(), ind_0.end());
+    }
+    range<iterator> lowerUpperRange_000(const t_tuple& lower, const t_tuple& upper) const {
+        return range<iterator>(ind_0.begin(), ind_0.end());
+    }
+    range<t_ind_0::iterator> lowerUpperRange_001(
+            const t_tuple& lower, const t_tuple& upper, context& h) const {
+        t_tuple low(lower);
+        t_tuple high(upper);
+        low[0] = MIN_RAM_SIGNED;
+        high[0] = MAX_RAM_SIGNED;
+        low[1] = MIN_RAM_SIGNED;
+        high[1] = MAX_RAM_SIGNED;
+        return make_range(ind_0.lower_bound(low, h.hints_0), ind_0.upper_bound(high, h.hints_0));
+    }
+    range<t_ind_0::iterator> lowerUpperRange_001(const t_tuple& lower, const t_tuple& upper) const {
+        context h;
+        return lowerUpperRange_001(lower, upper, h);
+    }
+    range<t_ind_0::iterator> lowerUpperRange_111(
+            const t_tuple& lower, const t_tuple& upper, context& h) const {
+        auto pos = ind_0.find(lower, h.hints_0);
+        auto fin = ind_0.end();
+        if (pos != fin) {
+            fin = pos;
+            ++fin;
+        }
+        return make_range(pos, fin);
+    }
+    range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper) const {
+        context h;
+        return lowerUpperRange_111(lower, upper, h);
+    }
+    bool empty() const {
+        return ind_0.empty();
+    }
+    std::vector<range<iterator>> partition() const {
+        return ind_0.getChunks(400);
+    }
+    void purge() {
+        ind_0.clear();
+    }
+    iterator begin() const {
+        return ind_0.begin();
+    }
+    iterator end() const {
+        return ind_0.end();
+    }
+    void printStatistics(std::ostream& o) const {
+        o << " arity 3 direct b-tree index 0 lex-order [2,0,1]\n";
+        ind_0.printStats(o);
+    }
+};
+struct t_btree_3__1_0_2__010__111 {
+    using t_tuple = Tuple<RamDomain, 3>;
+    using t_ind_0 = btree_set<t_tuple, index_utils::comparator<1, 0, 2>>;
+    t_ind_0 ind_0;
+    using iterator = t_ind_0::iterator;
+    struct context {
+        t_ind_0::operation_hints hints_0;
+    };
+    context createContext() {
+        return context();
+    }
+    bool insert(const t_tuple& t) {
+        context h;
+        return insert(t, h);
+    }
+    bool insert(const t_tuple& t, context& h) {
+        if (ind_0.insert(t, h.hints_0)) {
+            return true;
+        } else
+            return false;
+    }
+    bool insert(const RamDomain* ramDomain) {
+        RamDomain data[3];
+        std::copy(ramDomain, ramDomain + 3, data);
+        const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
+        context h;
+        return insert(tuple, h);
+    }
+    bool insert(RamDomain a0, RamDomain a1, RamDomain a2) {
+        RamDomain data[3] = {a0, a1, a2};
+        return insert(data);
+    }
+    bool contains(const t_tuple& t, context& h) const {
+        return ind_0.contains(t, h.hints_0);
+    }
+    bool contains(const t_tuple& t) const {
+        context h;
+        return contains(t, h);
+    }
+    std::size_t size() const {
+        return ind_0.size();
+    }
+    iterator find(const t_tuple& t, context& h) const {
+        return ind_0.find(t, h.hints_0);
+    }
+    iterator find(const t_tuple& t) const {
+        context h;
+        return find(t, h);
+    }
+    range<iterator> lowerUpperRange_000(const t_tuple& lower, const t_tuple& upper, context& h) const {
+        return range<iterator>(ind_0.begin(), ind_0.end());
+    }
+    range<iterator> lowerUpperRange_000(const t_tuple& lower, const t_tuple& upper) const {
+        return range<iterator>(ind_0.begin(), ind_0.end());
+    }
+    range<t_ind_0::iterator> lowerUpperRange_010(
+            const t_tuple& lower, const t_tuple& upper, context& h) const {
+        t_tuple low(lower);
+        t_tuple high(upper);
+        low[0] = MIN_RAM_SIGNED;
+        high[0] = MAX_RAM_SIGNED;
+        low[2] = MIN_RAM_SIGNED;
+        high[2] = MAX_RAM_SIGNED;
+        return make_range(ind_0.lower_bound(low, h.hints_0), ind_0.upper_bound(high, h.hints_0));
+    }
+    range<t_ind_0::iterator> lowerUpperRange_010(const t_tuple& lower, const t_tuple& upper) const {
+        context h;
+        return lowerUpperRange_010(lower, upper, h);
+    }
+    range<t_ind_0::iterator> lowerUpperRange_111(
+            const t_tuple& lower, const t_tuple& upper, context& h) const {
+        auto pos = ind_0.find(lower, h.hints_0);
+        auto fin = ind_0.end();
+        if (pos != fin) {
+            fin = pos;
+            ++fin;
+        }
+        return make_range(pos, fin);
+    }
+    range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper) const {
+        context h;
+        return lowerUpperRange_111(lower, upper, h);
+    }
+    bool empty() const {
+        return ind_0.empty();
+    }
+    std::vector<range<iterator>> partition() const {
+        return ind_0.getChunks(400);
+    }
+    void purge() {
+        ind_0.clear();
+    }
+    iterator begin() const {
+        return ind_0.begin();
+    }
+    iterator end() const {
+        return ind_0.end();
+    }
+    void printStatistics(std::ostream& o) const {
+        o << " arity 3 direct b-tree index 0 lex-order [1,0,2]\n";
+        ind_0.printStats(o);
+    }
+};
+struct t_btree_3__0_1_2__111__002 {
+    using t_tuple = Tuple<RamDomain, 3>;
+    using t_ind_0 = btree_set<t_tuple, index_utils::comparator<0, 1, 2>>;
+    t_ind_0 ind_0;
+    using iterator = t_ind_0::iterator;
+    struct context {
+        t_ind_0::operation_hints hints_0;
+    };
+    context createContext() {
+        return context();
+    }
+    bool insert(const t_tuple& t) {
+        context h;
+        return insert(t, h);
+    }
+    bool insert(const t_tuple& t, context& h) {
+        if (ind_0.insert(t, h.hints_0)) {
+            return true;
+        } else
+            return false;
+    }
+    bool insert(const RamDomain* ramDomain) {
+        RamDomain data[3];
+        std::copy(ramDomain, ramDomain + 3, data);
+        const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
+        context h;
+        return insert(tuple, h);
+    }
+    bool insert(RamDomain a0, RamDomain a1, RamDomain a2) {
+        RamDomain data[3] = {a0, a1, a2};
+        return insert(data);
+    }
+    bool contains(const t_tuple& t, context& h) const {
+        return ind_0.contains(t, h.hints_0);
+    }
+    bool contains(const t_tuple& t) const {
+        context h;
+        return contains(t, h);
+    }
+    std::size_t size() const {
+        return ind_0.size();
+    }
+    iterator find(const t_tuple& t, context& h) const {
+        return ind_0.find(t, h.hints_0);
+    }
+    iterator find(const t_tuple& t) const {
+        context h;
+        return find(t, h);
+    }
+    range<iterator> lowerUpperRange_000(const t_tuple& lower, const t_tuple& upper, context& h) const {
+        return range<iterator>(ind_0.begin(), ind_0.end());
+    }
+    range<iterator> lowerUpperRange_000(const t_tuple& lower, const t_tuple& upper) const {
+        return range<iterator>(ind_0.begin(), ind_0.end());
+    }
+    range<t_ind_0::iterator> lowerUpperRange_111(
+            const t_tuple& lower, const t_tuple& upper, context& h) const {
+        auto pos = ind_0.find(lower, h.hints_0);
+        auto fin = ind_0.end();
+        if (pos != fin) {
+            fin = pos;
+            ++fin;
+        }
+        return make_range(pos, fin);
+    }
+    range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper) const {
+        context h;
+        return lowerUpperRange_111(lower, upper, h);
+    }
+    range<t_ind_0::iterator> lowerUpperRange_002(
+            const t_tuple& lower, const t_tuple& upper, context& h) const {
+        t_tuple low(lower);
+        t_tuple high(upper);
+        low[0] = MIN_RAM_SIGNED;
+        high[0] = MAX_RAM_SIGNED;
+        low[1] = MIN_RAM_SIGNED;
+        high[1] = MAX_RAM_SIGNED;
+        return make_range(ind_0.lower_bound(low, h.hints_0), ind_0.upper_bound(high, h.hints_0));
+    }
+    range<t_ind_0::iterator> lowerUpperRange_002(const t_tuple& lower, const t_tuple& upper) const {
+        context h;
+        return lowerUpperRange_002(lower, upper, h);
+    }
+    bool empty() const {
+        return ind_0.empty();
+    }
+    std::vector<range<iterator>> partition() const {
+        return ind_0.getChunks(400);
+    }
+    void purge() {
+        ind_0.clear();
+    }
+    iterator begin() const {
+        return ind_0.begin();
+    }
+    iterator end() const {
+        return ind_0.end();
+    }
+    void printStatistics(std::ostream& o) const {
+        o << " arity 3 direct b-tree index 0 lex-order [0,1,2]\n";
+        ind_0.printStats(o);
+    }
+};
+struct t_btree_5__4_1_0_2_3__3_0_1_2_4__00010__00001__01001__11111 {
+    using t_tuple = Tuple<RamDomain, 5>;
+    using t_ind_0 = btree_set<t_tuple, index_utils::comparator<4, 1, 0, 2, 3>>;
+    t_ind_0 ind_0;
+    using t_ind_1 = btree_set<t_tuple, index_utils::comparator<3, 0, 1, 2, 4>>;
+    t_ind_1 ind_1;
+    using iterator = t_ind_0::iterator;
+    struct context {
+        t_ind_0::operation_hints hints_0;
+        t_ind_1::operation_hints hints_1;
+    };
+    context createContext() {
+        return context();
+    }
+    bool insert(const t_tuple& t) {
+        context h;
+        return insert(t, h);
+    }
+    bool insert(const t_tuple& t, context& h) {
+        if (ind_0.insert(t, h.hints_0)) {
+            ind_1.insert(t, h.hints_1);
+            return true;
+        } else
+            return false;
+    }
+    bool insert(const RamDomain* ramDomain) {
+        RamDomain data[5];
+        std::copy(ramDomain, ramDomain + 5, data);
+        const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
+        context h;
+        return insert(tuple, h);
+    }
+    bool insert(RamDomain a0, RamDomain a1, RamDomain a2, RamDomain a3, RamDomain a4) {
+        RamDomain data[5] = {a0, a1, a2, a3, a4};
+        return insert(data);
+    }
+    bool contains(const t_tuple& t, context& h) const {
+        return ind_0.contains(t, h.hints_0);
+    }
+    bool contains(const t_tuple& t) const {
+        context h;
+        return contains(t, h);
+    }
+    std::size_t size() const {
+        return ind_0.size();
+    }
+    iterator find(const t_tuple& t, context& h) const {
+        return ind_0.find(t, h.hints_0);
+    }
+    iterator find(const t_tuple& t) const {
+        context h;
+        return find(t, h);
+    }
+    range<iterator> lowerUpperRange_00000(const t_tuple& lower, const t_tuple& upper, context& h) const {
+        return range<iterator>(ind_0.begin(), ind_0.end());
+    }
+    range<iterator> lowerUpperRange_00000(const t_tuple& lower, const t_tuple& upper) const {
+        return range<iterator>(ind_0.begin(), ind_0.end());
+    }
+    range<t_ind_1::iterator> lowerUpperRange_00010(
+            const t_tuple& lower, const t_tuple& upper, context& h) const {
+        t_tuple low(lower);
+        t_tuple high(upper);
+        low[0] = MIN_RAM_SIGNED;
+        high[0] = MAX_RAM_SIGNED;
+        low[1] = MIN_RAM_SIGNED;
+        high[1] = MAX_RAM_SIGNED;
+        low[2] = MIN_RAM_SIGNED;
+        high[2] = MAX_RAM_SIGNED;
+        low[4] = MIN_RAM_SIGNED;
+        high[4] = MAX_RAM_SIGNED;
+        return make_range(ind_1.lower_bound(low, h.hints_1), ind_1.upper_bound(high, h.hints_1));
+    }
+    range<t_ind_1::iterator> lowerUpperRange_00010(const t_tuple& lower, const t_tuple& upper) const {
+        context h;
+        return lowerUpperRange_00010(lower, upper, h);
+    }
+    range<t_ind_0::iterator> lowerUpperRange_00001(
+            const t_tuple& lower, const t_tuple& upper, context& h) const {
+        t_tuple low(lower);
+        t_tuple high(upper);
+        low[0] = MIN_RAM_SIGNED;
+        high[0] = MAX_RAM_SIGNED;
+        low[1] = MIN_RAM_SIGNED;
+        high[1] = MAX_RAM_SIGNED;
+        low[2] = MIN_RAM_SIGNED;
+        high[2] = MAX_RAM_SIGNED;
+        low[3] = MIN_RAM_SIGNED;
+        high[3] = MAX_RAM_SIGNED;
+        return make_range(ind_0.lower_bound(low, h.hints_0), ind_0.upper_bound(high, h.hints_0));
+    }
+    range<t_ind_0::iterator> lowerUpperRange_00001(const t_tuple& lower, const t_tuple& upper) const {
+        context h;
+        return lowerUpperRange_00001(lower, upper, h);
+    }
+    range<t_ind_0::iterator> lowerUpperRange_01001(
+            const t_tuple& lower, const t_tuple& upper, context& h) const {
+        t_tuple low(lower);
+        t_tuple high(upper);
+        low[0] = MIN_RAM_SIGNED;
+        high[0] = MAX_RAM_SIGNED;
+        low[2] = MIN_RAM_SIGNED;
+        high[2] = MAX_RAM_SIGNED;
+        low[3] = MIN_RAM_SIGNED;
+        high[3] = MAX_RAM_SIGNED;
+        return make_range(ind_0.lower_bound(low, h.hints_0), ind_0.upper_bound(high, h.hints_0));
+    }
+    range<t_ind_0::iterator> lowerUpperRange_01001(const t_tuple& lower, const t_tuple& upper) const {
+        context h;
+        return lowerUpperRange_01001(lower, upper, h);
+    }
+    range<t_ind_1::iterator> lowerUpperRange_11111(
+            const t_tuple& lower, const t_tuple& upper, context& h) const {
+        auto pos = ind_1.find(lower, h.hints_1);
+        auto fin = ind_1.end();
+        if (pos != fin) {
+            fin = pos;
+            ++fin;
+        }
+        return make_range(pos, fin);
+    }
+    range<t_ind_1::iterator> lowerUpperRange_11111(const t_tuple& lower, const t_tuple& upper) const {
+        context h;
+        return lowerUpperRange_11111(lower, upper, h);
+    }
+    bool empty() const {
+        return ind_0.empty();
+    }
+    std::vector<range<iterator>> partition() const {
+        return ind_0.getChunks(400);
+    }
+    void purge() {
+        ind_0.clear();
+        ind_1.clear();
+    }
+    iterator begin() const {
+        return ind_0.begin();
+    }
+    iterator end() const {
+        return ind_0.end();
+    }
+    void printStatistics(std::ostream& o) const {
+        o << " arity 5 direct b-tree index 0 lex-order [4,1,0,2,3]\n";
+        ind_0.printStats(o);
+        o << " arity 5 direct b-tree index 1 lex-order [3,0,1,2,4]\n";
+        ind_1.printStats(o);
+    }
+};
+
+class Sf_bad : public SouffleProgram {
+private:
+    static inline bool regex_wrapper(const std::string& pattern, const std::string& text) {
+        bool result = false;
+        try {
+            result = std::regex_match(text, std::regex(pattern));
+        } catch (...) {
+            std::cerr << "warning: wrong pattern provided for match(\"" << pattern << "\",\"" << text
+                      << "\").\n";
+        }
+        return result;
+    }
+
+private:
+    static inline std::string substr_wrapper(const std::string& str, size_t idx, size_t len) {
+        std::string result;
+        try {
+            result = str.substr(idx, len);
+        } catch (...) {
+            std::cerr << "warning: wrong index position provided by substr(\"";
+            std::cerr << str << "\"," << (int32_t)idx << "," << (int32_t)len << ") functor.\n";
+        }
+        return result;
+    }
+
+private:
+    static inline RamDomain wrapper_tonumber(const std::string& str) {
+        RamDomain result = 0;
+        try {
+            result = RamSignedFromString(str);
+        } catch (...) {
+            std::cerr << "error: wrong string provided by to_number(\"";
+            std::cerr << str << "\") functor.\n";
+            raise(SIGFPE);
+        }
+        return result;
+    }
+
+public:
+    // -- initialize symbol table --
+    SymbolTable symTable{
+            R"_(S0)_",
+            R"_(x)_",
+            R"_(y)_",
+            R"_(R)_",
+            R"_(S1)_",
+            R"_(L)_",
+            R"_(b)_",
+    };  // -- initialize record table --
+    RecordTable recordTable;
+    // -- Table: +m0_Configuration+_bbb
+    std::unique_ptr<t_btree_3__0_1_2__111> rel_1_m0_Configuration_bbb =
+            std::make_unique<t_btree_3__0_1_2__111>();
+    souffle::RelationWrapper<0, t_btree_3__0_1_2__111, Tuple<RamDomain, 3>, 3, 0>
+            wrapper_rel_1_m0_Configuration_bbb;
+    // -- Table: +m0_Configuration+_ffb
+    std::unique_ptr<t_btree_1__0__1> rel_2_m0_Configuration_ffb = std::make_unique<t_btree_1__0__1>();
+    souffle::RelationWrapper<1, t_btree_1__0__1, Tuple<RamDomain, 1>, 1, 0>
+            wrapper_rel_2_m0_Configuration_ffb;
+    // -- Table: +m0_Configuration+_fff
+    std::unique_ptr<t_nullaries> rel_3_m0_Configuration_fff = std::make_unique<t_nullaries>();
+    souffle::RelationWrapper<2, t_nullaries, Tuple<RamDomain, 0>, 0, 0> wrapper_rel_3_m0_Configuration_fff;
+    // -- Table: +m0_Tape+_fbf
+    std::unique_ptr<t_btree_1__0__1> rel_4_m0_Tape_fbf = std::make_unique<t_btree_1__0__1>();
+    souffle::RelationWrapper<3, t_btree_1__0__1, Tuple<RamDomain, 1>, 1, 0> wrapper_rel_4_m0_Tape_fbf;
+    // -- Table: +m0_Tape+_fff
+    std::unique_ptr<t_nullaries> rel_5_m0_Tape_fff = std::make_unique<t_nullaries>();
+    souffle::RelationWrapper<4, t_nullaries, Tuple<RamDomain, 0>, 0, 0> wrapper_rel_5_m0_Tape_fff;
+    // -- Table: +m0_TapeLimits+_fff
+    std::unique_ptr<t_nullaries> rel_6_m0_TapeLimits_fff = std::make_unique<t_nullaries>();
+    souffle::RelationWrapper<5, t_nullaries, Tuple<RamDomain, 0>, 0, 0> wrapper_rel_6_m0_TapeLimits_fff;
+    // -- Table: +m1_Configuration+_bbb
+    std::unique_ptr<t_btree_3__0_1_2__111> rel_7_m1_Configuration_bbb =
+            std::make_unique<t_btree_3__0_1_2__111>();
+    souffle::RelationWrapper<6, t_btree_3__0_1_2__111, Tuple<RamDomain, 3>, 3, 0>
+            wrapper_rel_7_m1_Configuration_bbb;
+    // -- Table: +m1_Configuration+_ffb
+    std::unique_ptr<t_btree_1__0__1> rel_8_m1_Configuration_ffb = std::make_unique<t_btree_1__0__1>();
+    souffle::RelationWrapper<7, t_btree_1__0__1, Tuple<RamDomain, 1>, 1, 0>
+            wrapper_rel_8_m1_Configuration_ffb;
+    // -- Table: +m1_Configuration+_fff
+    std::unique_ptr<t_nullaries> rel_9_m1_Configuration_fff = std::make_unique<t_nullaries>();
+    souffle::RelationWrapper<8, t_nullaries, Tuple<RamDomain, 0>, 0, 0> wrapper_rel_9_m1_Configuration_fff;
+    // -- Table: +m1_Tape+_fbf
+    std::unique_ptr<t_btree_1__0__1> rel_10_m1_Tape_fbf = std::make_unique<t_btree_1__0__1>();
+    souffle::RelationWrapper<9, t_btree_1__0__1, Tuple<RamDomain, 1>, 1, 0> wrapper_rel_10_m1_Tape_fbf;
+    // -- Table: +m1_TapeLimits+_fff
+    std::unique_ptr<t_nullaries> rel_11_m1_TapeLimits_fff = std::make_unique<t_nullaries>();
+    souffle::RelationWrapper<10, t_nullaries, Tuple<RamDomain, 0>, 0, 0> wrapper_rel_11_m1_TapeLimits_fff;
+    // -- Table: +m2_Configuration+_bbb
+    std::unique_ptr<t_btree_3__0_1_2__111> rel_12_m2_Configuration_bbb =
+            std::make_unique<t_btree_3__0_1_2__111>();
+    souffle::RelationWrapper<11, t_btree_3__0_1_2__111, Tuple<RamDomain, 3>, 3, 0>
+            wrapper_rel_12_m2_Configuration_bbb;
+    // -- Table: +m2_Configuration+_ffb
+    std::unique_ptr<t_btree_1__0__1> rel_13_m2_Configuration_ffb = std::make_unique<t_btree_1__0__1>();
+    souffle::RelationWrapper<12, t_btree_1__0__1, Tuple<RamDomain, 1>, 1, 0>
+            wrapper_rel_13_m2_Configuration_ffb;
+    // -- Table: +m2_Configuration+_fff
+    std::unique_ptr<t_nullaries> rel_14_m2_Configuration_fff = std::make_unique<t_nullaries>();
+    souffle::RelationWrapper<13, t_nullaries, Tuple<RamDomain, 0>, 0, 0> wrapper_rel_14_m2_Configuration_fff;
+    // -- Table: +m2_Tape+_fbf
+    std::unique_ptr<t_btree_1__0__1> rel_15_m2_Tape_fbf = std::make_unique<t_btree_1__0__1>();
+    souffle::RelationWrapper<14, t_btree_1__0__1, Tuple<RamDomain, 1>, 1, 0> wrapper_rel_15_m2_Tape_fbf;
+    // -- Table: +m2_TapeLimits+_fff
+    std::unique_ptr<t_nullaries> rel_16_m2_TapeLimits_fff = std::make_unique<t_nullaries>();
+    souffle::RelationWrapper<15, t_nullaries, Tuple<RamDomain, 0>, 0, 0> wrapper_rel_16_m2_TapeLimits_fff;
+    // -- Table: @delta_+m0_Configuration+_bbb
+    std::unique_ptr<t_btree_3__0_1_2__111> rel_17_delta_m0_Configuration_bbb =
+            std::make_unique<t_btree_3__0_1_2__111>();
+    // -- Table: @delta_+m0_Configuration+_ffb
+    std::unique_ptr<t_btree_1__0__1> rel_18_delta_m0_Configuration_ffb = std::make_unique<t_btree_1__0__1>();
+    // -- Table: @delta_+m0_Configuration+_fff
+    std::unique_ptr<t_nullaries> rel_19_delta_m0_Configuration_fff = std::make_unique<t_nullaries>();
+    // -- Table: @delta_+m0_Tape+_fbf
+    std::unique_ptr<t_btree_1__0__1> rel_20_delta_m0_Tape_fbf = std::make_unique<t_btree_1__0__1>();
+    // -- Table: @delta_+m0_Tape+_fff
+    std::unique_ptr<t_nullaries> rel_21_delta_m0_Tape_fff = std::make_unique<t_nullaries>();
+    // -- Table: @delta_+m0_TapeLimits+_fff
+    std::unique_ptr<t_nullaries> rel_22_delta_m0_TapeLimits_fff = std::make_unique<t_nullaries>();
+    // -- Table: @delta_+m1_Configuration+_bbb
+    std::unique_ptr<t_btree_3__0_1_2__111> rel_23_delta_m1_Configuration_bbb =
+            std::make_unique<t_btree_3__0_1_2__111>();
+    // -- Table: @delta_+m1_Configuration+_ffb
+    std::unique_ptr<t_btree_1__0__1> rel_24_delta_m1_Configuration_ffb = std::make_unique<t_btree_1__0__1>();
+    // -- Table: @delta_+m1_Configuration+_fff
+    std::unique_ptr<t_nullaries> rel_25_delta_m1_Configuration_fff = std::make_unique<t_nullaries>();
+    // -- Table: @delta_+m1_Tape+_fbf
+    std::unique_ptr<t_btree_1__0__1> rel_26_delta_m1_Tape_fbf = std::make_unique<t_btree_1__0__1>();
+    // -- Table: @delta_+m1_TapeLimits+_fff
+    std::unique_ptr<t_nullaries> rel_27_delta_m1_TapeLimits_fff = std::make_unique<t_nullaries>();
+    // -- Table: @delta_+m2_Configuration+_bbb
+    std::unique_ptr<t_btree_3__0_1_2__111> rel_28_delta_m2_Configuration_bbb =
+            std::make_unique<t_btree_3__0_1_2__111>();
+    // -- Table: @delta_+m2_Configuration+_ffb
+    std::unique_ptr<t_btree_1__0__1> rel_29_delta_m2_Configuration_ffb = std::make_unique<t_btree_1__0__1>();
+    // -- Table: @delta_+m2_Configuration+_fff
+    std::unique_ptr<t_nullaries> rel_30_delta_m2_Configuration_fff = std::make_unique<t_nullaries>();
+    // -- Table: @delta_+m2_Tape+_fbf
+    std::unique_ptr<t_btree_1__0__1> rel_31_delta_m2_Tape_fbf = std::make_unique<t_btree_1__0__1>();
+    // -- Table: @delta_+m2_TapeLimits+_fff
+    std::unique_ptr<t_nullaries> rel_32_delta_m2_TapeLimits_fff = std::make_unique<t_nullaries>();
+    // -- Table: @delta_Configuration+_bbb
+    std::unique_ptr<t_btree_3__0_1_2__111> rel_33_delta_Configuration_bbb =
+            std::make_unique<t_btree_3__0_1_2__111>();
+    // -- Table: @delta_Configuration+_ffb
+    std::unique_ptr<t_btree_3__2_0_1__001__111> rel_34_delta_Configuration_ffb =
+            std::make_unique<t_btree_3__2_0_1__001__111>();
+    // -- Table: @delta_Configuration+_fff
+    std::unique_ptr<t_btree_3__2_0_1__001__111> rel_35_delta_Configuration_fff =
+            std::make_unique<t_btree_3__2_0_1__001__111>();
+    // -- Table: @delta_Tape+_fbf
+    std::unique_ptr<t_btree_3__1_0_2__010__111> rel_36_delta_Tape_fbf =
+            std::make_unique<t_btree_3__1_0_2__010__111>();
+    // -- Table: @delta_Tape+_fff
+    std::unique_ptr<t_btree_3__0_1_2__111> rel_37_delta_Tape_fff = std::make_unique<t_btree_3__0_1_2__111>();
+    // -- Table: @delta_TapeLimits+_fff
+    std::unique_ptr<t_btree_3__0_1_2__111__002> rel_38_delta_TapeLimits_fff =
+            std::make_unique<t_btree_3__0_1_2__111__002>();
+    // -- Table: @new_+m0_Configuration+_bbb
+    std::unique_ptr<t_btree_3__0_1_2__111> rel_39_new_m0_Configuration_bbb =
+            std::make_unique<t_btree_3__0_1_2__111>();
+    // -- Table: @new_+m0_Configuration+_ffb
+    std::unique_ptr<t_btree_1__0__1> rel_40_new_m0_Configuration_ffb = std::make_unique<t_btree_1__0__1>();
+    // -- Table: @new_+m0_Configuration+_fff
+    std::unique_ptr<t_nullaries> rel_41_new_m0_Configuration_fff = std::make_unique<t_nullaries>();
+    // -- Table: @new_+m0_Tape+_fbf
+    std::unique_ptr<t_btree_1__0__1> rel_42_new_m0_Tape_fbf = std::make_unique<t_btree_1__0__1>();
+    // -- Table: @new_+m0_Tape+_fff
+    std::unique_ptr<t_nullaries> rel_43_new_m0_Tape_fff = std::make_unique<t_nullaries>();
+    // -- Table: @new_+m0_TapeLimits+_fff
+    std::unique_ptr<t_nullaries> rel_44_new_m0_TapeLimits_fff = std::make_unique<t_nullaries>();
+    // -- Table: @new_+m1_Configuration+_bbb
+    std::unique_ptr<t_btree_3__0_1_2__111> rel_45_new_m1_Configuration_bbb =
+            std::make_unique<t_btree_3__0_1_2__111>();
+    // -- Table: @new_+m1_Configuration+_ffb
+    std::unique_ptr<t_btree_1__0__1> rel_46_new_m1_Configuration_ffb = std::make_unique<t_btree_1__0__1>();
+    // -- Table: @new_+m1_Configuration+_fff
+    std::unique_ptr<t_nullaries> rel_47_new_m1_Configuration_fff = std::make_unique<t_nullaries>();
+    // -- Table: @new_+m1_Tape+_fbf
+    std::unique_ptr<t_btree_1__0__1> rel_48_new_m1_Tape_fbf = std::make_unique<t_btree_1__0__1>();
+    // -- Table: @new_+m1_TapeLimits+_fff
+    std::unique_ptr<t_nullaries> rel_49_new_m1_TapeLimits_fff = std::make_unique<t_nullaries>();
+    // -- Table: @new_+m2_Configuration+_bbb
+    std::unique_ptr<t_btree_3__0_1_2__111> rel_50_new_m2_Configuration_bbb =
+            std::make_unique<t_btree_3__0_1_2__111>();
+    // -- Table: @new_+m2_Configuration+_ffb
+    std::unique_ptr<t_btree_1__0__1> rel_51_new_m2_Configuration_ffb = std::make_unique<t_btree_1__0__1>();
+    // -- Table: @new_+m2_Configuration+_fff
+    std::unique_ptr<t_nullaries> rel_52_new_m2_Configuration_fff = std::make_unique<t_nullaries>();
+    // -- Table: @new_+m2_Tape+_fbf
+    std::unique_ptr<t_btree_1__0__1> rel_53_new_m2_Tape_fbf = std::make_unique<t_btree_1__0__1>();
+    // -- Table: @new_+m2_TapeLimits+_fff
+    std::unique_ptr<t_nullaries> rel_54_new_m2_TapeLimits_fff = std::make_unique<t_nullaries>();
+    // -- Table: @new_Configuration+_bbb
+    std::unique_ptr<t_btree_3__0_1_2__111> rel_55_new_Configuration_bbb =
+            std::make_unique<t_btree_3__0_1_2__111>();
+    // -- Table: @new_Configuration+_ffb
+    std::unique_ptr<t_btree_3__2_0_1__001__111> rel_56_new_Configuration_ffb =
+            std::make_unique<t_btree_3__2_0_1__001__111>();
+    // -- Table: @new_Configuration+_fff
+    std::unique_ptr<t_btree_3__2_0_1__001__111> rel_57_new_Configuration_fff =
+            std::make_unique<t_btree_3__2_0_1__001__111>();
+    // -- Table: @new_Tape+_fbf
+    std::unique_ptr<t_btree_3__1_0_2__010__111> rel_58_new_Tape_fbf =
+            std::make_unique<t_btree_3__1_0_2__010__111>();
+    // -- Table: @new_Tape+_fff
+    std::unique_ptr<t_btree_3__0_1_2__111> rel_59_new_Tape_fff = std::make_unique<t_btree_3__0_1_2__111>();
+    // -- Table: @new_TapeLimits+_fff
+    std::unique_ptr<t_btree_3__0_1_2__111__002> rel_60_new_TapeLimits_fff =
+            std::make_unique<t_btree_3__0_1_2__111__002>();
+    // -- Table: Configuration
+    std::unique_ptr<t_btree_3__0_1_2__111> rel_61_Configuration = std::make_unique<t_btree_3__0_1_2__111>();
+    souffle::RelationWrapper<16, t_btree_3__0_1_2__111, Tuple<RamDomain, 3>, 3, 0>
+            wrapper_rel_61_Configuration;
+    // -- Table: Configuration+_bbb
+    std::unique_ptr<t_btree_3__0_1_2__111> rel_62_Configuration_bbb =
+            std::make_unique<t_btree_3__0_1_2__111>();
+    souffle::RelationWrapper<17, t_btree_3__0_1_2__111, Tuple<RamDomain, 3>, 3, 0>
+            wrapper_rel_62_Configuration_bbb;
+    // -- Table: Configuration+_ffb
+    std::unique_ptr<t_btree_3__2_0_1__001__111> rel_63_Configuration_ffb =
+            std::make_unique<t_btree_3__2_0_1__001__111>();
+    souffle::RelationWrapper<18, t_btree_3__2_0_1__001__111, Tuple<RamDomain, 3>, 3, 0>
+            wrapper_rel_63_Configuration_ffb;
+    // -- Table: Configuration+_fff
+    std::unique_ptr<t_btree_3__2_0_1__001__111> rel_64_Configuration_fff =
+            std::make_unique<t_btree_3__2_0_1__001__111>();
+    souffle::RelationWrapper<19, t_btree_3__2_0_1__001__111, Tuple<RamDomain, 3>, 3, 0>
+            wrapper_rel_64_Configuration_fff;
+    // -- Table: Tape
+    std::unique_ptr<t_btree_3__0_1_2__111> rel_65_Tape = std::make_unique<t_btree_3__0_1_2__111>();
+    souffle::RelationWrapper<20, t_btree_3__0_1_2__111, Tuple<RamDomain, 3>, 3, 0> wrapper_rel_65_Tape;
+    // -- Table: Tape+_fbf
+    std::unique_ptr<t_btree_3__1_0_2__010__111> rel_66_Tape_fbf =
+            std::make_unique<t_btree_3__1_0_2__010__111>();
+    souffle::RelationWrapper<21, t_btree_3__1_0_2__010__111, Tuple<RamDomain, 3>, 3, 0>
+            wrapper_rel_66_Tape_fbf;
+    // -- Table: Tape+_fff
+    std::unique_ptr<t_btree_3__0_1_2__111> rel_67_Tape_fff = std::make_unique<t_btree_3__0_1_2__111>();
+    souffle::RelationWrapper<22, t_btree_3__0_1_2__111, Tuple<RamDomain, 3>, 3, 0> wrapper_rel_67_Tape_fff;
+    // -- Table: TapeLimits
+    std::unique_ptr<t_btree_3__0_1_2__111> rel_68_TapeLimits = std::make_unique<t_btree_3__0_1_2__111>();
+    souffle::RelationWrapper<23, t_btree_3__0_1_2__111, Tuple<RamDomain, 3>, 3, 0> wrapper_rel_68_TapeLimits;
+    // -- Table: TapeLimits+_fff
+    std::unique_ptr<t_btree_3__0_1_2__111__002> rel_69_TapeLimits_fff =
+            std::make_unique<t_btree_3__0_1_2__111__002>();
+    souffle::RelationWrapper<24, t_btree_3__0_1_2__111__002, Tuple<RamDomain, 3>, 3, 0>
+            wrapper_rel_69_TapeLimits_fff;
+    // -- Table: Transition
+    std::unique_ptr<t_btree_5__4_1_0_2_3__3_0_1_2_4__00010__00001__01001__11111> rel_70_Transition =
+            std::make_unique<t_btree_5__4_1_0_2_3__3_0_1_2_4__00010__00001__01001__11111>();
+    souffle::RelationWrapper<25, t_btree_5__4_1_0_2_3__3_0_1_2_4__00010__00001__01001__11111,
+            Tuple<RamDomain, 5>, 5, 0>
+            wrapper_rel_70_Transition;
+    // -- Table: newedb1
+    std::unique_ptr<t_btree_3__1_0_2__010__111> rel_71_newedb1 =
+            std::make_unique<t_btree_3__1_0_2__010__111>();
+    souffle::RelationWrapper<26, t_btree_3__1_0_2__010__111, Tuple<RamDomain, 3>, 3, 0>
+            wrapper_rel_71_newedb1;
+    // -- Table: newedb2
+    std::unique_ptr<t_btree_3__2_0_1__001__111> rel_72_newedb2 =
+            std::make_unique<t_btree_3__2_0_1__001__111>();
+    souffle::RelationWrapper<27, t_btree_3__2_0_1__001__111, Tuple<RamDomain, 3>, 3, 0>
+            wrapper_rel_72_newedb2;
+    // -- Table: newedb3
+    std::unique_ptr<t_btree_3__0_1_2__111> rel_73_newedb3 = std::make_unique<t_btree_3__0_1_2__111>();
+    souffle::RelationWrapper<28, t_btree_3__0_1_2__111, Tuple<RamDomain, 3>, 3, 0> wrapper_rel_73_newedb3;
+
+public:
+    Sf_bad()
+            : wrapper_rel_1_m0_Configuration_bbb(*rel_1_m0_Configuration_bbb, symTable,
+                      "+m0_Configuration+_bbb",
+                      std::array<const char*, 3>{{"i:number", "s:State", "i:number"}},
+                      std::array<const char*, 3>{{"position", "state", "step"}}),
+
+              wrapper_rel_2_m0_Configuration_ffb(*rel_2_m0_Configuration_ffb, symTable,
+                      "+m0_Configuration+_ffb", std::array<const char*, 1>{{"i:number"}},
+                      std::array<const char*, 1>{{"step"}}),
+
+              wrapper_rel_3_m0_Configuration_fff(*rel_3_m0_Configuration_fff, symTable,
+                      "+m0_Configuration+_fff", std::array<const char*, 0>{{}},
+                      std::array<const char*, 0>{{}}),
+
+              wrapper_rel_4_m0_Tape_fbf(*rel_4_m0_Tape_fbf, symTable, "+m0_Tape+_fbf",
+                      std::array<const char*, 1>{{"s:Alphabet"}}, std::array<const char*, 1>{{"symbol"}}),
+
+              wrapper_rel_5_m0_Tape_fff(*rel_5_m0_Tape_fff, symTable, "+m0_Tape+_fff",
+                      std::array<const char*, 0>{{}}, std::array<const char*, 0>{{}}),
+
+              wrapper_rel_6_m0_TapeLimits_fff(*rel_6_m0_TapeLimits_fff, symTable, "+m0_TapeLimits+_fff",
+                      std::array<const char*, 0>{{}}, std::array<const char*, 0>{{}}),
+
+              wrapper_rel_7_m1_Configuration_bbb(*rel_7_m1_Configuration_bbb, symTable,
+                      "+m1_Configuration+_bbb",
+                      std::array<const char*, 3>{{"i:number", "s:State", "i:number"}},
+                      std::array<const char*, 3>{{"position", "state", "step"}}),
+
+              wrapper_rel_8_m1_Configuration_ffb(*rel_8_m1_Configuration_ffb, symTable,
+                      "+m1_Configuration+_ffb", std::array<const char*, 1>{{"i:number"}},
+                      std::array<const char*, 1>{{"step"}}),
+
+              wrapper_rel_9_m1_Configuration_fff(*rel_9_m1_Configuration_fff, symTable,
+                      "+m1_Configuration+_fff", std::array<const char*, 0>{{}},
+                      std::array<const char*, 0>{{}}),
+
+              wrapper_rel_10_m1_Tape_fbf(*rel_10_m1_Tape_fbf, symTable, "+m1_Tape+_fbf",
+                      std::array<const char*, 1>{{"s:Alphabet"}}, std::array<const char*, 1>{{"symbol"}}),
+
+              wrapper_rel_11_m1_TapeLimits_fff(*rel_11_m1_TapeLimits_fff, symTable, "+m1_TapeLimits+_fff",
+                      std::array<const char*, 0>{{}}, std::array<const char*, 0>{{}}),
+
+              wrapper_rel_12_m2_Configuration_bbb(*rel_12_m2_Configuration_bbb, symTable,
+                      "+m2_Configuration+_bbb",
+                      std::array<const char*, 3>{{"i:number", "s:State", "i:number"}},
+                      std::array<const char*, 3>{{"position", "state", "step"}}),
+
+              wrapper_rel_13_m2_Configuration_ffb(*rel_13_m2_Configuration_ffb, symTable,
+                      "+m2_Configuration+_ffb", std::array<const char*, 1>{{"i:number"}},
+                      std::array<const char*, 1>{{"step"}}),
+
+              wrapper_rel_14_m2_Configuration_fff(*rel_14_m2_Configuration_fff, symTable,
+                      "+m2_Configuration+_fff", std::array<const char*, 0>{{}},
+                      std::array<const char*, 0>{{}}),
+
+              wrapper_rel_15_m2_Tape_fbf(*rel_15_m2_Tape_fbf, symTable, "+m2_Tape+_fbf",
+                      std::array<const char*, 1>{{"s:Alphabet"}}, std::array<const char*, 1>{{"symbol"}}),
+
+              wrapper_rel_16_m2_TapeLimits_fff(*rel_16_m2_TapeLimits_fff, symTable, "+m2_TapeLimits+_fff",
+                      std::array<const char*, 0>{{}}, std::array<const char*, 0>{{}}),
+
+              wrapper_rel_61_Configuration(*rel_61_Configuration, symTable, "Configuration",
+                      std::array<const char*, 3>{{"i:number", "s:State", "i:number"}},
+                      std::array<const char*, 3>{{"position", "state", "step"}}),
+
+              wrapper_rel_62_Configuration_bbb(*rel_62_Configuration_bbb, symTable, "Configuration+_bbb",
+                      std::array<const char*, 3>{{"i:number", "s:State", "i:number"}},
+                      std::array<const char*, 3>{{"position", "state", "step"}}),
+
+              wrapper_rel_63_Configuration_ffb(*rel_63_Configuration_ffb, symTable, "Configuration+_ffb",
+                      std::array<const char*, 3>{{"i:number", "s:State", "i:number"}},
+                      std::array<const char*, 3>{{"position", "state", "step"}}),
+
+              wrapper_rel_64_Configuration_fff(*rel_64_Configuration_fff, symTable, "Configuration+_fff",
+                      std::array<const char*, 3>{{"i:number", "s:State", "i:number"}},
+                      std::array<const char*, 3>{{"position", "state", "step"}}),
+
+              wrapper_rel_65_Tape(*rel_65_Tape, symTable, "Tape",
+                      std::array<const char*, 3>{{"i:number", "s:Alphabet", "i:number"}},
+                      std::array<const char*, 3>{{"position", "symbol", "step"}}),
+
+              wrapper_rel_66_Tape_fbf(*rel_66_Tape_fbf, symTable, "Tape+_fbf",
+                      std::array<const char*, 3>{{"i:number", "s:Alphabet", "i:number"}},
+                      std::array<const char*, 3>{{"position", "symbol", "step"}}),
+
+              wrapper_rel_67_Tape_fff(*rel_67_Tape_fff, symTable, "Tape+_fff",
+                      std::array<const char*, 3>{{"i:number", "s:Alphabet", "i:number"}},
+                      std::array<const char*, 3>{{"position", "symbol", "step"}}),
+
+              wrapper_rel_68_TapeLimits(*rel_68_TapeLimits, symTable, "TapeLimits",
+                      std::array<const char*, 3>{{"i:number", "i:number", "i:number"}},
+                      std::array<const char*, 3>{{"step", "left", "right"}}),
+
+              wrapper_rel_69_TapeLimits_fff(*rel_69_TapeLimits_fff, symTable, "TapeLimits+_fff",
+                      std::array<const char*, 3>{{"i:number", "i:number", "i:number"}},
+                      std::array<const char*, 3>{{"step", "left", "right"}}),
+
+              wrapper_rel_70_Transition(*rel_70_Transition, symTable, "Transition",
+                      std::array<const char*, 5>{
+                              {"s:State", "s:State", "s:Alphabet", "s:Alphabet", "s:Direction"}},
+                      std::array<const char*, 5>{{"src", "dest", "read", "write", "d"}}),
+
+              wrapper_rel_71_newedb1(*rel_71_newedb1, symTable, "newedb1",
+                      std::array<const char*, 3>{{"i:number", "s:Alphabet", "i:number"}},
+                      std::array<const char*, 3>{{"position", "symbol", "step"}}),
+
+              wrapper_rel_72_newedb2(*rel_72_newedb2, symTable, "newedb2",
+                      std::array<const char*, 3>{{"i:number", "s:State", "i:number"}},
+                      std::array<const char*, 3>{{"position", "state", "step"}}),
+
+              wrapper_rel_73_newedb3(*rel_73_newedb3, symTable, "newedb3",
+                      std::array<const char*, 3>{{"i:number", "i:number", "i:number"}},
+                      std::array<const char*, 3>{{"step", "left", "right"}}) {
+        addRelation("+m0_Configuration+_bbb", &wrapper_rel_1_m0_Configuration_bbb, false, false);
+        addRelation("+m0_Configuration+_ffb", &wrapper_rel_2_m0_Configuration_ffb, false, false);
+        addRelation("+m0_Configuration+_fff", &wrapper_rel_3_m0_Configuration_fff, false, false);
+        addRelation("+m0_Tape+_fbf", &wrapper_rel_4_m0_Tape_fbf, false, false);
+        addRelation("+m0_Tape+_fff", &wrapper_rel_5_m0_Tape_fff, false, false);
+        addRelation("+m0_TapeLimits+_fff", &wrapper_rel_6_m0_TapeLimits_fff, false, false);
+        addRelation("+m1_Configuration+_bbb", &wrapper_rel_7_m1_Configuration_bbb, false, false);
+        addRelation("+m1_Configuration+_ffb", &wrapper_rel_8_m1_Configuration_ffb, false, false);
+        addRelation("+m1_Configuration+_fff", &wrapper_rel_9_m1_Configuration_fff, false, false);
+        addRelation("+m1_Tape+_fbf", &wrapper_rel_10_m1_Tape_fbf, false, false);
+        addRelation("+m1_TapeLimits+_fff", &wrapper_rel_11_m1_TapeLimits_fff, false, false);
+        addRelation("+m2_Configuration+_bbb", &wrapper_rel_12_m2_Configuration_bbb, false, false);
+        addRelation("+m2_Configuration+_ffb", &wrapper_rel_13_m2_Configuration_ffb, false, false);
+        addRelation("+m2_Configuration+_fff", &wrapper_rel_14_m2_Configuration_fff, false, false);
+        addRelation("+m2_Tape+_fbf", &wrapper_rel_15_m2_Tape_fbf, false, false);
+        addRelation("+m2_TapeLimits+_fff", &wrapper_rel_16_m2_TapeLimits_fff, false, false);
+        addRelation("Configuration", &wrapper_rel_61_Configuration, false, true);
+        addRelation("Configuration+_bbb", &wrapper_rel_62_Configuration_bbb, false, false);
+        addRelation("Configuration+_ffb", &wrapper_rel_63_Configuration_ffb, false, false);
+        addRelation("Configuration+_fff", &wrapper_rel_64_Configuration_fff, false, false);
+        addRelation("Tape", &wrapper_rel_65_Tape, false, true);
+        addRelation("Tape+_fbf", &wrapper_rel_66_Tape_fbf, false, false);
+        addRelation("Tape+_fff", &wrapper_rel_67_Tape_fff, false, false);
+        addRelation("TapeLimits", &wrapper_rel_68_TapeLimits, false, true);
+        addRelation("TapeLimits+_fff", &wrapper_rel_69_TapeLimits_fff, false, false);
+        addRelation("Transition", &wrapper_rel_70_Transition, false, false);
+        addRelation("newedb1", &wrapper_rel_71_newedb1, false, false);
+        addRelation("newedb2", &wrapper_rel_72_newedb2, false, false);
+        addRelation("newedb3", &wrapper_rel_73_newedb3, false, false);
+    }
+    ~Sf_bad() {}
+
+private:
+    void runFunction(
+            std::string inputDirectory = ".", std::string outputDirectory = ".", bool performIO = false) {
+        SignalHandler::instance()->set();
+        std::atomic<size_t> iter(0);
+
+#if defined(_OPENMP)
+        if (getNumThreads() > 0) {
+            omp_set_num_threads(getNumThreads());
+        }
+#endif
+
+        // -- query evaluation --
+        SignalHandler::instance()->setMsg(R"_(Transition("S0","S0","x","y","R").
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl [108:1-108:39])_");
+        [&]() {
+            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+            Tuple<RamDomain, 5> tuple{{ramBitCast(RamSigned(0)), ramBitCast(RamSigned(0)),
+                    ramBitCast(RamSigned(1)), ramBitCast(RamSigned(2)), ramBitCast(RamSigned(3))}};
+            rel_70_Transition->insert(tuple, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+        }();
+        SignalHandler::instance()->setMsg(R"_(Transition("S0","S1","y","x","L").
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl [109:1-109:39])_");
+        [&]() {
+            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+            Tuple<RamDomain, 5> tuple{{ramBitCast(RamSigned(0)), ramBitCast(RamSigned(4)),
+                    ramBitCast(RamSigned(2)), ramBitCast(RamSigned(1)), ramBitCast(RamSigned(5))}};
+            rel_70_Transition->insert(tuple, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+        }();
+        SignalHandler::instance()->setMsg(R"_(Transition("S1","S1","y","x","L").
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl [110:1-110:39])_");
+        [&]() {
+            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+            Tuple<RamDomain, 5> tuple{{ramBitCast(RamSigned(4)), ramBitCast(RamSigned(4)),
+                    ramBitCast(RamSigned(2)), ramBitCast(RamSigned(1)), ramBitCast(RamSigned(5))}};
+            rel_70_Transition->insert(tuple, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+        }();
+        SignalHandler::instance()->setMsg(R"_(newedb1(0,"x",0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl [118:1-118:17])_");
+        [&]() {
+            CREATE_OP_CONTEXT(rel_71_newedb1_op_ctxt, rel_71_newedb1->createContext());
+            Tuple<RamDomain, 3> tuple{
+                    {ramBitCast(RamSigned(0)), ramBitCast(RamSigned(1)), ramBitCast(RamSigned(0))}};
+            rel_71_newedb1->insert(tuple, READ_OP_CONTEXT(rel_71_newedb1_op_ctxt));
+        }();
+        SignalHandler::instance()->setMsg(R"_(newedb1(1,"x",0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl [119:1-119:17])_");
+        [&]() {
+            CREATE_OP_CONTEXT(rel_71_newedb1_op_ctxt, rel_71_newedb1->createContext());
+            Tuple<RamDomain, 3> tuple{
+                    {ramBitCast(RamSigned(1)), ramBitCast(RamSigned(1)), ramBitCast(RamSigned(0))}};
+            rel_71_newedb1->insert(tuple, READ_OP_CONTEXT(rel_71_newedb1_op_ctxt));
+        }();
+        SignalHandler::instance()->setMsg(R"_(newedb1(2,"y",0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl [120:1-120:17])_");
+        [&]() {
+            CREATE_OP_CONTEXT(rel_71_newedb1_op_ctxt, rel_71_newedb1->createContext());
+            Tuple<RamDomain, 3> tuple{
+                    {ramBitCast(RamSigned(2)), ramBitCast(RamSigned(2)), ramBitCast(RamSigned(0))}};
+            rel_71_newedb1->insert(tuple, READ_OP_CONTEXT(rel_71_newedb1_op_ctxt));
+        }();
+        SignalHandler::instance()->setMsg(R"_(newedb2(0,"S0",0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl [126:1-126:27])_");
+        [&]() {
+            CREATE_OP_CONTEXT(rel_72_newedb2_op_ctxt, rel_72_newedb2->createContext());
+            Tuple<RamDomain, 3> tuple{
+                    {ramBitCast(RamSigned(0)), ramBitCast(RamSigned(0)), ramBitCast(RamSigned(0))}};
+            rel_72_newedb2->insert(tuple, READ_OP_CONTEXT(rel_72_newedb2_op_ctxt));
+        }();
+        SignalHandler::instance()->setMsg(R"_(newedb3(0,0,2).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl [123:1-123:21])_");
+        [&]() {
+            CREATE_OP_CONTEXT(rel_73_newedb3_op_ctxt, rel_73_newedb3->createContext());
+            Tuple<RamDomain, 3> tuple{
+                    {ramBitCast(RamSigned(0)), ramBitCast(RamSigned(0)), ramBitCast(RamSigned(2))}};
+            rel_73_newedb3->insert(tuple, READ_OP_CONTEXT(rel_73_newedb3_op_ctxt));
+        }();
+        SignalHandler::instance()->setMsg(R"_(+m0_Tape+_fff().
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [7:0-7:1])_");
+        [&]() {
+            CREATE_OP_CONTEXT(rel_5_m0_Tape_fff_op_ctxt, rel_5_m0_Tape_fff->createContext());
+            Tuple<RamDomain, 0> tuple{{}};
+            rel_5_m0_Tape_fff->insert(tuple, READ_OP_CONTEXT(rel_5_m0_Tape_fff_op_ctxt));
+        }();
+        if (!(rel_5_m0_Tape_fff->empty())) {
+            [&]() {
+                CREATE_OP_CONTEXT(
+                        rel_21_delta_m0_Tape_fff_op_ctxt, rel_21_delta_m0_Tape_fff->createContext());
+                Tuple<RamDomain, 0> tuple{{}};
+                rel_21_delta_m0_Tape_fff->insert(tuple, READ_OP_CONTEXT(rel_21_delta_m0_Tape_fff_op_ctxt));
+            }();
+        }
+        iter = 0;
+        for (;;) {
+            SignalHandler::instance()->setMsg(R"_(+m0_Tape+_fff() :- 
+   +m0_Tape+_fff().
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [12:0-12:1])_");
+            if (rel_43_new_m0_Tape_fff->empty() && rel_5_m0_Tape_fff->empty() &&
+                    !(rel_21_delta_m0_Tape_fff->empty())) {
+                [&]() {
+                    CREATE_OP_CONTEXT(
+                            rel_43_new_m0_Tape_fff_op_ctxt, rel_43_new_m0_Tape_fff->createContext());
+                    Tuple<RamDomain, 0> tuple{{}};
+                    rel_43_new_m0_Tape_fff->insert(tuple, READ_OP_CONTEXT(rel_43_new_m0_Tape_fff_op_ctxt));
+                }();
+            }
+            if (rel_43_new_m0_Tape_fff->empty()) break;
+            if (!(rel_43_new_m0_Tape_fff->empty())) {
+                [&]() {
+                    CREATE_OP_CONTEXT(rel_5_m0_Tape_fff_op_ctxt, rel_5_m0_Tape_fff->createContext());
+                    Tuple<RamDomain, 0> tuple{{}};
+                    rel_5_m0_Tape_fff->insert(tuple, READ_OP_CONTEXT(rel_5_m0_Tape_fff_op_ctxt));
+                }();
+            }
+            std::swap(rel_21_delta_m0_Tape_fff, rel_43_new_m0_Tape_fff);
+            rel_43_new_m0_Tape_fff->purge();
+            iter++;
+        }
+        iter = 0;
+        rel_21_delta_m0_Tape_fff->purge();
+        rel_43_new_m0_Tape_fff->purge();
+        [&]() {
+            CREATE_OP_CONTEXT(rel_18_delta_m0_Configuration_ffb_op_ctxt,
+                    rel_18_delta_m0_Configuration_ffb->createContext());
+            CREATE_OP_CONTEXT(
+                    rel_2_m0_Configuration_ffb_op_ctxt, rel_2_m0_Configuration_ffb->createContext());
+            for (const auto& env0 : *rel_2_m0_Configuration_ffb) {
+                Tuple<RamDomain, 1> tuple{{ramBitCast(env0[0])}};
+                rel_18_delta_m0_Configuration_ffb->insert(
+                        tuple, READ_OP_CONTEXT(rel_18_delta_m0_Configuration_ffb_op_ctxt));
+            }
+        }();
+        SignalHandler::instance()->setMsg(R"_(Tape+_fff(arg0,arg1,arg2) :- 
+   +m0_Tape+_fff(),
+   newedb1(arg0,arg1,arg2).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE][MAGIC_FILE] [21:0-21:1])_");
+        if (!(rel_5_m0_Tape_fff->empty()) && !(rel_71_newedb1->empty())) {
+            [&]() {
+                CREATE_OP_CONTEXT(rel_71_newedb1_op_ctxt, rel_71_newedb1->createContext());
+                CREATE_OP_CONTEXT(rel_67_Tape_fff_op_ctxt, rel_67_Tape_fff->createContext());
+                for (const auto& env0 : *rel_71_newedb1) {
+                    Tuple<RamDomain, 3> tuple{
+                            {ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                    rel_67_Tape_fff->insert(tuple, READ_OP_CONTEXT(rel_67_Tape_fff_op_ctxt));
+                }
+            }();
+        }
+        [&]() {
+            CREATE_OP_CONTEXT(rel_67_Tape_fff_op_ctxt, rel_67_Tape_fff->createContext());
+            CREATE_OP_CONTEXT(rel_37_delta_Tape_fff_op_ctxt, rel_37_delta_Tape_fff->createContext());
+            for (const auto& env0 : *rel_67_Tape_fff) {
+                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                rel_37_delta_Tape_fff->insert(tuple, READ_OP_CONTEXT(rel_37_delta_Tape_fff_op_ctxt));
+            }
+        }();
+        SignalHandler::instance()->setMsg(R"_(+m0_Tape+_fbf(oldSymbol) :- 
+   +m0_Tape+_fff(),
+   Transition(currentState,_,oldSymbol,newSymbol,_).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [9:0-9:1])_");
+        if (!(rel_5_m0_Tape_fff->empty()) && !(rel_70_Transition->empty())) {
+            [&]() {
+                CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                CREATE_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt, rel_4_m0_Tape_fbf->createContext());
+                for (const auto& env0 : *rel_70_Transition) {
+                    Tuple<RamDomain, 1> tuple{{ramBitCast(env0[2])}};
+                    rel_4_m0_Tape_fbf->insert(tuple, READ_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt));
+                }
+            }();
+        }
+        [&]() {
+            CREATE_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt, rel_4_m0_Tape_fbf->createContext());
+            CREATE_OP_CONTEXT(rel_20_delta_m0_Tape_fbf_op_ctxt, rel_20_delta_m0_Tape_fbf->createContext());
+            for (const auto& env0 : *rel_4_m0_Tape_fbf) {
+                Tuple<RamDomain, 1> tuple{{ramBitCast(env0[0])}};
+                rel_20_delta_m0_Tape_fbf->insert(tuple, READ_OP_CONTEXT(rel_20_delta_m0_Tape_fbf_op_ctxt));
+            }
+        }();
+        [&]() {
+            CREATE_OP_CONTEXT(
+                    rel_1_m0_Configuration_bbb_op_ctxt, rel_1_m0_Configuration_bbb->createContext());
+            CREATE_OP_CONTEXT(rel_17_delta_m0_Configuration_bbb_op_ctxt,
+                    rel_17_delta_m0_Configuration_bbb->createContext());
+            for (const auto& env0 : *rel_1_m0_Configuration_bbb) {
+                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                rel_17_delta_m0_Configuration_bbb->insert(
+                        tuple, READ_OP_CONTEXT(rel_17_delta_m0_Configuration_bbb_op_ctxt));
+            }
+        }();
+        SignalHandler::instance()->setMsg(R"_(+m0_Configuration+_fff() :- 
+   +m0_Tape+_fff().
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [15:0-15:1])_");
+        if (rel_3_m0_Configuration_fff->empty() && !(rel_5_m0_Tape_fff->empty())) {
+            [&]() {
+                CREATE_OP_CONTEXT(
+                        rel_3_m0_Configuration_fff_op_ctxt, rel_3_m0_Configuration_fff->createContext());
+                Tuple<RamDomain, 0> tuple{{}};
+                rel_3_m0_Configuration_fff->insert(
+                        tuple, READ_OP_CONTEXT(rel_3_m0_Configuration_fff_op_ctxt));
+            }();
+        }
+        SignalHandler::instance()->setMsg(R"_(+m0_Configuration+_fff() :- 
+   +m0_Tape+_fff().
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [18:0-18:1])_");
+        if (rel_3_m0_Configuration_fff->empty() && !(rel_5_m0_Tape_fff->empty())) {
+            [&]() {
+                CREATE_OP_CONTEXT(
+                        rel_3_m0_Configuration_fff_op_ctxt, rel_3_m0_Configuration_fff->createContext());
+                Tuple<RamDomain, 0> tuple{{}};
+                rel_3_m0_Configuration_fff->insert(
+                        tuple, READ_OP_CONTEXT(rel_3_m0_Configuration_fff_op_ctxt));
+            }();
+        }
+        if (!(rel_3_m0_Configuration_fff->empty())) {
+            [&]() {
+                CREATE_OP_CONTEXT(rel_19_delta_m0_Configuration_fff_op_ctxt,
+                        rel_19_delta_m0_Configuration_fff->createContext());
+                Tuple<RamDomain, 0> tuple{{}};
+                rel_19_delta_m0_Configuration_fff->insert(
+                        tuple, READ_OP_CONTEXT(rel_19_delta_m0_Configuration_fff_op_ctxt));
+            }();
+        }
+        if (!(rel_6_m0_TapeLimits_fff->empty())) {
+            [&]() {
+                CREATE_OP_CONTEXT(rel_22_delta_m0_TapeLimits_fff_op_ctxt,
+                        rel_22_delta_m0_TapeLimits_fff->createContext());
+                Tuple<RamDomain, 0> tuple{{}};
+                rel_22_delta_m0_TapeLimits_fff->insert(
+                        tuple, READ_OP_CONTEXT(rel_22_delta_m0_TapeLimits_fff_op_ctxt));
+            }();
+        }
+        [&]() {
+            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+            CREATE_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+            for (const auto& env0 : *rel_66_Tape_fbf) {
+                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                rel_36_delta_Tape_fbf->insert(tuple, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+            }
+        }();
+        [&]() {
+            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt, rel_62_Configuration_bbb->createContext());
+            CREATE_OP_CONTEXT(
+                    rel_33_delta_Configuration_bbb_op_ctxt, rel_33_delta_Configuration_bbb->createContext());
+            for (const auto& env0 : *rel_62_Configuration_bbb) {
+                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                rel_33_delta_Configuration_bbb->insert(
+                        tuple, READ_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt));
+            }
+        }();
+        [&]() {
+            CREATE_OP_CONTEXT(
+                    rel_34_delta_Configuration_ffb_op_ctxt, rel_34_delta_Configuration_ffb->createContext());
+            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt, rel_63_Configuration_ffb->createContext());
+            for (const auto& env0 : *rel_63_Configuration_ffb) {
+                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                rel_34_delta_Configuration_ffb->insert(
+                        tuple, READ_OP_CONTEXT(rel_34_delta_Configuration_ffb_op_ctxt));
+            }
+        }();
+        [&]() {
+            CREATE_OP_CONTEXT(
+                    rel_35_delta_Configuration_fff_op_ctxt, rel_35_delta_Configuration_fff->createContext());
+            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt, rel_64_Configuration_fff->createContext());
+            for (const auto& env0 : *rel_64_Configuration_fff) {
+                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                rel_35_delta_Configuration_fff->insert(
+                        tuple, READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt));
+            }
+        }();
+        [&]() {
+            CREATE_OP_CONTEXT(
+                    rel_38_delta_TapeLimits_fff_op_ctxt, rel_38_delta_TapeLimits_fff->createContext());
+            CREATE_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                rel_38_delta_TapeLimits_fff->insert(
+                        tuple, READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt));
+            }
+        }();
+        SignalHandler::instance()->setMsg(R"_(+m1_Configuration+_fff().
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [71:0-71:1])_");
+        [&]() {
+            CREATE_OP_CONTEXT(
+                    rel_9_m1_Configuration_fff_op_ctxt, rel_9_m1_Configuration_fff->createContext());
+            Tuple<RamDomain, 0> tuple{{}};
+            rel_9_m1_Configuration_fff->insert(tuple, READ_OP_CONTEXT(rel_9_m1_Configuration_fff_op_ctxt));
+        }();
+        if (!(rel_9_m1_Configuration_fff->empty())) {
+            [&]() {
+                CREATE_OP_CONTEXT(rel_25_delta_m1_Configuration_fff_op_ctxt,
+                        rel_25_delta_m1_Configuration_fff->createContext());
+                Tuple<RamDomain, 0> tuple{{}};
+                rel_25_delta_m1_Configuration_fff->insert(
+                        tuple, READ_OP_CONTEXT(rel_25_delta_m1_Configuration_fff_op_ctxt));
+            }();
+        }
+        [&]() {
+            CREATE_OP_CONTEXT(rel_10_m1_Tape_fbf_op_ctxt, rel_10_m1_Tape_fbf->createContext());
+            CREATE_OP_CONTEXT(rel_26_delta_m1_Tape_fbf_op_ctxt, rel_26_delta_m1_Tape_fbf->createContext());
+            for (const auto& env0 : *rel_10_m1_Tape_fbf) {
+                Tuple<RamDomain, 1> tuple{{ramBitCast(env0[0])}};
+                rel_26_delta_m1_Tape_fbf->insert(tuple, READ_OP_CONTEXT(rel_26_delta_m1_Tape_fbf_op_ctxt));
+            }
+        }();
+        [&]() {
+            CREATE_OP_CONTEXT(rel_23_delta_m1_Configuration_bbb_op_ctxt,
+                    rel_23_delta_m1_Configuration_bbb->createContext());
+            CREATE_OP_CONTEXT(
+                    rel_7_m1_Configuration_bbb_op_ctxt, rel_7_m1_Configuration_bbb->createContext());
+            for (const auto& env0 : *rel_7_m1_Configuration_bbb) {
+                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                rel_23_delta_m1_Configuration_bbb->insert(
+                        tuple, READ_OP_CONTEXT(rel_23_delta_m1_Configuration_bbb_op_ctxt));
+            }
+        }();
+        [&]() {
+            CREATE_OP_CONTEXT(
+                    rel_8_m1_Configuration_ffb_op_ctxt, rel_8_m1_Configuration_ffb->createContext());
+            CREATE_OP_CONTEXT(rel_24_delta_m1_Configuration_ffb_op_ctxt,
+                    rel_24_delta_m1_Configuration_ffb->createContext());
+            for (const auto& env0 : *rel_8_m1_Configuration_ffb) {
+                Tuple<RamDomain, 1> tuple{{ramBitCast(env0[0])}};
+                rel_24_delta_m1_Configuration_ffb->insert(
+                        tuple, READ_OP_CONTEXT(rel_24_delta_m1_Configuration_ffb_op_ctxt));
+            }
+        }();
+        if (!(rel_11_m1_TapeLimits_fff->empty())) {
+            [&]() {
+                CREATE_OP_CONTEXT(rel_27_delta_m1_TapeLimits_fff_op_ctxt,
+                        rel_27_delta_m1_TapeLimits_fff->createContext());
+                Tuple<RamDomain, 0> tuple{{}};
+                rel_27_delta_m1_TapeLimits_fff->insert(
+                        tuple, READ_OP_CONTEXT(rel_27_delta_m1_TapeLimits_fff_op_ctxt));
+            }();
+        }
+        if (!(rel_14_m2_Configuration_fff->empty())) {
+            [&]() {
+                CREATE_OP_CONTEXT(rel_30_delta_m2_Configuration_fff_op_ctxt,
+                        rel_30_delta_m2_Configuration_fff->createContext());
+                Tuple<RamDomain, 0> tuple{{}};
+                rel_30_delta_m2_Configuration_fff->insert(
+                        tuple, READ_OP_CONTEXT(rel_30_delta_m2_Configuration_fff_op_ctxt));
+            }();
+        }
+        SignalHandler::instance()->setMsg(R"_(+m2_TapeLimits+_fff().
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [116:0-116:1])_");
+        [&]() {
+            CREATE_OP_CONTEXT(rel_16_m2_TapeLimits_fff_op_ctxt, rel_16_m2_TapeLimits_fff->createContext());
+            Tuple<RamDomain, 0> tuple{{}};
+            rel_16_m2_TapeLimits_fff->insert(tuple, READ_OP_CONTEXT(rel_16_m2_TapeLimits_fff_op_ctxt));
+        }();
+        if (!(rel_16_m2_TapeLimits_fff->empty())) {
+            [&]() {
+                CREATE_OP_CONTEXT(rel_32_delta_m2_TapeLimits_fff_op_ctxt,
+                        rel_32_delta_m2_TapeLimits_fff->createContext());
+                Tuple<RamDomain, 0> tuple{{}};
+                rel_32_delta_m2_TapeLimits_fff->insert(
+                        tuple, READ_OP_CONTEXT(rel_32_delta_m2_TapeLimits_fff_op_ctxt));
+            }();
+        }
+        [&]() {
+            CREATE_OP_CONTEXT(rel_31_delta_m2_Tape_fbf_op_ctxt, rel_31_delta_m2_Tape_fbf->createContext());
+            CREATE_OP_CONTEXT(rel_15_m2_Tape_fbf_op_ctxt, rel_15_m2_Tape_fbf->createContext());
+            for (const auto& env0 : *rel_15_m2_Tape_fbf) {
+                Tuple<RamDomain, 1> tuple{{ramBitCast(env0[0])}};
+                rel_31_delta_m2_Tape_fbf->insert(tuple, READ_OP_CONTEXT(rel_31_delta_m2_Tape_fbf_op_ctxt));
+            }
+        }();
+        [&]() {
+            CREATE_OP_CONTEXT(rel_28_delta_m2_Configuration_bbb_op_ctxt,
+                    rel_28_delta_m2_Configuration_bbb->createContext());
+            CREATE_OP_CONTEXT(
+                    rel_12_m2_Configuration_bbb_op_ctxt, rel_12_m2_Configuration_bbb->createContext());
+            for (const auto& env0 : *rel_12_m2_Configuration_bbb) {
+                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                rel_28_delta_m2_Configuration_bbb->insert(
+                        tuple, READ_OP_CONTEXT(rel_28_delta_m2_Configuration_bbb_op_ctxt));
+            }
+        }();
+        [&]() {
+            CREATE_OP_CONTEXT(rel_29_delta_m2_Configuration_ffb_op_ctxt,
+                    rel_29_delta_m2_Configuration_ffb->createContext());
+            CREATE_OP_CONTEXT(
+                    rel_13_m2_Configuration_ffb_op_ctxt, rel_13_m2_Configuration_ffb->createContext());
+            for (const auto& env0 : *rel_13_m2_Configuration_ffb) {
+                Tuple<RamDomain, 1> tuple{{ramBitCast(env0[0])}};
+                rel_29_delta_m2_Configuration_ffb->insert(
+                        tuple, READ_OP_CONTEXT(rel_29_delta_m2_Configuration_ffb_op_ctxt));
+            }
+        }();
+        iter = 0;
+        for (;;) {
+            SECTIONS_START
+                ;
+                SECTION_START
+                    ;
+                    SignalHandler::instance()->setMsg(R"_(+m0_Configuration+_ffb(step) :- 
+   +m0_Tape+_fff(),
+   Tape+_fff(position,symbol,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [13:0-13:1])_");
+                    if (!(rel_5_m0_Tape_fff->empty()) && !(rel_37_delta_Tape_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_40_new_m0_Configuration_ffb_op_ctxt,
+                                    rel_40_new_m0_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_2_m0_Configuration_ffb_op_ctxt,
+                                    rel_2_m0_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_37_delta_Tape_fff_op_ctxt, rel_37_delta_Tape_fff->createContext());
+                            for (const auto& env0 : *rel_37_delta_Tape_fff) {
+                                if (!(rel_2_m0_Configuration_ffb->contains(
+                                            Tuple<RamDomain, 1>{{ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_2_m0_Configuration_ffb_op_ctxt)))) {
+                                    Tuple<RamDomain, 1> tuple{{ramBitCast(env0[2])}};
+                                    rel_40_new_m0_Configuration_ffb->insert(
+                                            tuple, READ_OP_CONTEXT(rel_40_new_m0_Configuration_ffb_op_ctxt));
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m0_Configuration+_ffb(step) :- 
+   +m0_Tape+_fbf(symbol),
+   Tape+_fbf(position,symbol,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [27:0-27:1])_");
+                    if (!(rel_20_delta_m0_Tape_fbf->empty()) && !(rel_66_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_40_new_m0_Configuration_ffb_op_ctxt,
+                                    rel_40_new_m0_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_2_m0_Configuration_ffb_op_ctxt,
+                                    rel_2_m0_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_20_delta_m0_Tape_fbf_op_ctxt,
+                                    rel_20_delta_m0_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_20_delta_m0_Tape_fbf) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_36_delta_Tape_fbf->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                            !(rel_2_m0_Configuration_ffb->contains(
+                                                    Tuple<RamDomain, 1>{{ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_2_m0_Configuration_ffb_op_ctxt)))) {
+                                        Tuple<RamDomain, 1> tuple{{ramBitCast(env1[2])}};
+                                        rel_40_new_m0_Configuration_ffb->insert(tuple,
+                                                READ_OP_CONTEXT(rel_40_new_m0_Configuration_ffb_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m0_Configuration+_ffb(step) :- 
+   +m0_Tape+_fbf(symbol),
+   Tape+_fbf(position,symbol,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [27:0-27:1])_");
+                    if (!(rel_4_m0_Tape_fbf->empty()) && !(rel_36_delta_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_40_new_m0_Configuration_ffb_op_ctxt,
+                                    rel_40_new_m0_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_2_m0_Configuration_ffb_op_ctxt,
+                                    rel_2_m0_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt, rel_4_m0_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_4_m0_Tape_fbf) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_2_m0_Configuration_ffb->contains(
+                                                Tuple<RamDomain, 1>{{ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_2_m0_Configuration_ffb_op_ctxt)))) {
+                                        Tuple<RamDomain, 1> tuple{{ramBitCast(env1[2])}};
+                                        rel_40_new_m0_Configuration_ffb->insert(tuple,
+                                                READ_OP_CONTEXT(rel_40_new_m0_Configuration_ffb_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                SECTION_END
+                SECTION_START
+                    ;
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fff(position,newSymbol,(step+1)) :- 
+   +m0_Tape+_fff(),
+   Transition(currentState,_,oldSymbol,newSymbol,_),
+   Tape+_fbf(position,oldSymbol,step),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [11:0-11:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_36_delta_Tape_fbf->empty()) &&
+                            !(rel_5_m0_Tape_fff->empty()) && !(rel_62_Configuration_bbb->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_59_new_Tape_fff_op_ctxt, rel_59_new_Tape_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_67_Tape_fff_op_ctxt, rel_67_Tape_fff->createContext());
+                            for (const auto& env0 : *rel_70_Transition) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_33_delta_Configuration_bbb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt))) &&
+                                            !(rel_67_Tape_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[3]),
+                                                            ramBitCast((
+                                                                    ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                    READ_OP_CONTEXT(rel_67_Tape_fff_op_ctxt))) &&
+                                            rel_62_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt))) {
+                                        Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]), ramBitCast(env0[3]),
+                                                ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                            ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        rel_59_new_Tape_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_59_new_Tape_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fff(position,newSymbol,(step+1)) :- 
+   +m0_Tape+_fff(),
+   Transition(currentState,_,oldSymbol,newSymbol,_),
+   Tape+_fbf(position,oldSymbol,step),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [11:0-11:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_5_m0_Tape_fff->empty()) && !(rel_33_delta_Configuration_bbb->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_59_new_Tape_fff_op_ctxt, rel_59_new_Tape_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_67_Tape_fff_op_ctxt, rel_67_Tape_fff->createContext());
+                            for (const auto& env0 : *rel_70_Transition) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (rel_33_delta_Configuration_bbb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt)) &&
+                                            !(rel_67_Tape_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[3]),
+                                                            ramBitCast((
+                                                                    ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                    READ_OP_CONTEXT(rel_67_Tape_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]), ramBitCast(env0[3]),
+                                                ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                            ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        rel_59_new_Tape_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_59_new_Tape_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fff(position,symbol,(step+1)) :- 
+   +m0_Tape+_fff(),
+   Tape+_fff(position,symbol,step),
+   position != writePosition,
+   Configuration+_ffb(writePosition,_,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [14:0-14:1])_");
+                    if (!(rel_37_delta_Tape_fff->empty()) && !(rel_5_m0_Tape_fff->empty()) &&
+                            !(rel_63_Configuration_ffb->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_34_delta_Configuration_ffb_op_ctxt,
+                                    rel_34_delta_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_59_new_Tape_fff_op_ctxt, rel_59_new_Tape_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_67_Tape_fff_op_ctxt, rel_67_Tape_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_37_delta_Tape_fff_op_ctxt, rel_37_delta_Tape_fff->createContext());
+                            for (const auto& env0 : *rel_37_delta_Tape_fff) {
+                                if (!(rel_67_Tape_fff->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast((ramBitCast<RamSigned>(env0[2]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))}},
+                                            READ_OP_CONTEXT(rel_67_Tape_fff_op_ctxt)))) {
+                                    Tuple<RamDomain, 3> lower{{0, 0, ramBitCast(env0[2])}};
+                                    Tuple<RamDomain, 3> upper{{0, 0, ramBitCast(env0[2])}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[1] = MIN_RAM_SIGNED;
+                                    upper[1] = MAX_RAM_SIGNED;
+                                    auto range = rel_63_Configuration_ffb->lowerUpperRange_001(
+                                            lower, upper, READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        if ((ramBitCast<RamDomain>(env0[0]) !=
+                                                    ramBitCast<RamDomain>(env1[0])) &&
+                                                !(rel_34_delta_Configuration_ffb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                                ramBitCast(env1[1]), ramBitCast(env0[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_34_delta_Configuration_ffb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]),
+                                                    ramBitCast(env0[1]),
+                                                    ramBitCast((ramBitCast<RamSigned>(env0[2]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))}};
+                                            rel_59_new_Tape_fff->insert(
+                                                    tuple, READ_OP_CONTEXT(rel_59_new_Tape_fff_op_ctxt));
+                                            break;
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fff(position,symbol,(step+1)) :- 
+   +m0_Tape+_fff(),
+   Tape+_fff(position,symbol,step),
+   position != writePosition,
+   Configuration+_ffb(writePosition,_,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [14:0-14:1])_");
+                    if (!(rel_67_Tape_fff->empty()) && !(rel_5_m0_Tape_fff->empty()) &&
+                            !(rel_34_delta_Configuration_ffb->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_34_delta_Configuration_ffb_op_ctxt,
+                                    rel_34_delta_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_59_new_Tape_fff_op_ctxt, rel_59_new_Tape_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_67_Tape_fff_op_ctxt, rel_67_Tape_fff->createContext());
+                            for (const auto& env0 : *rel_67_Tape_fff) {
+                                if (!(rel_67_Tape_fff->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast((ramBitCast<RamSigned>(env0[2]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))}},
+                                            READ_OP_CONTEXT(rel_67_Tape_fff_op_ctxt)))) {
+                                    Tuple<RamDomain, 3> lower{{0, 0, ramBitCast(env0[2])}};
+                                    Tuple<RamDomain, 3> upper{{0, 0, ramBitCast(env0[2])}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[1] = MIN_RAM_SIGNED;
+                                    upper[1] = MAX_RAM_SIGNED;
+                                    auto range = rel_34_delta_Configuration_ffb->lowerUpperRange_001(lower,
+                                            upper, READ_OP_CONTEXT(rel_34_delta_Configuration_ffb_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        if ((ramBitCast<RamDomain>(env0[0]) !=
+                                                    ramBitCast<RamDomain>(env1[0]))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]),
+                                                    ramBitCast(env0[1]),
+                                                    ramBitCast((ramBitCast<RamSigned>(env0[2]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))}};
+                                            rel_59_new_Tape_fff->insert(
+                                                    tuple, READ_OP_CONTEXT(rel_59_new_Tape_fff_op_ctxt));
+                                            break;
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fff(position,"b",(step+1)) :- 
+   +m0_Tape+_fff(),
+   Configuration+_fff(position,_, _tmp_0),
+   position < left,
+    _tmp_0 = (step+1),
+   TapeLimits+_fff(step,left,_).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [17:0-17:1])_");
+                    if (!(rel_35_delta_Configuration_fff->empty()) && !(rel_5_m0_Tape_fff->empty()) &&
+                            !(rel_69_TapeLimits_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_59_new_Tape_fff_op_ctxt, rel_59_new_Tape_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_67_Tape_fff_op_ctxt, rel_67_Tape_fff->createContext());
+                            for (const auto& env0 : *rel_35_delta_Configuration_fff) {
+                                for (const auto& env1 : *rel_69_TapeLimits_fff) {
+                                    if ((ramBitCast<RamSigned>(env1[1]) >=
+                                                ramBitCast<RamSigned>(
+                                                        (ramBitCast<RamSigned>(env0[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                            (ramBitCast<RamDomain>(env0[2]) ==
+                                                    ramBitCast<RamDomain>(
+                                                            (ramBitCast<RamSigned>(env1[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                            !(rel_67_Tape_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env0[0]),
+                                                            ramBitCast(RamSigned(6)),
+                                                            ramBitCast((
+                                                                    ramBitCast<RamSigned>(env1[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                    READ_OP_CONTEXT(rel_67_Tape_fff_op_ctxt))) &&
+                                            !(rel_38_delta_TapeLimits_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env1[1]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast(env0[0]), ramBitCast(RamSigned(6)),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        rel_59_new_Tape_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_59_new_Tape_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fff(position,"b",(step+1)) :- 
+   +m0_Tape+_fff(),
+   Configuration+_fff(position,_, _tmp_0),
+   position < left,
+    _tmp_0 = (step+1),
+   TapeLimits+_fff(step,left,_).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [17:0-17:1])_");
+                    if (!(rel_64_Configuration_fff->empty()) && !(rel_5_m0_Tape_fff->empty()) &&
+                            !(rel_38_delta_TapeLimits_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_59_new_Tape_fff_op_ctxt, rel_59_new_Tape_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_67_Tape_fff_op_ctxt, rel_67_Tape_fff->createContext());
+                            for (const auto& env0 : *rel_64_Configuration_fff) {
+                                for (const auto& env1 : *rel_38_delta_TapeLimits_fff) {
+                                    if ((ramBitCast<RamSigned>(env1[1]) >=
+                                                ramBitCast<RamSigned>(
+                                                        (ramBitCast<RamSigned>(env0[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                            (ramBitCast<RamDomain>(env0[2]) ==
+                                                    ramBitCast<RamDomain>(
+                                                            (ramBitCast<RamSigned>(env1[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                            !(rel_67_Tape_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env0[0]),
+                                                            ramBitCast(RamSigned(6)),
+                                                            ramBitCast((
+                                                                    ramBitCast<RamSigned>(env1[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                    READ_OP_CONTEXT(rel_67_Tape_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast(env0[0]), ramBitCast(RamSigned(6)),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        rel_59_new_Tape_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_59_new_Tape_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fff(position,"b",(step+1)) :- 
+   +m0_Tape+_fff(),
+   Configuration+_fff(position,_, _tmp_0),
+   position > right,
+    _tmp_0 = (step+1),
+   TapeLimits+_fff(step,_,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [20:0-20:1])_");
+                    if (!(rel_35_delta_Configuration_fff->empty()) && !(rel_5_m0_Tape_fff->empty()) &&
+                            !(rel_69_TapeLimits_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_59_new_Tape_fff_op_ctxt, rel_59_new_Tape_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_67_Tape_fff_op_ctxt, rel_67_Tape_fff->createContext());
+                            for (const auto& env0 : *rel_35_delta_Configuration_fff) {
+                                Tuple<RamDomain, 3> lower{{0, 0, 0}};
+                                Tuple<RamDomain, 3> upper{{0, 0,
+                                        ramBitCast((ramBitCast<RamSigned>(env0[0]) -
+                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                auto range = rel_69_TapeLimits_fff->lowerUpperRange_002(
+                                        lower, upper, READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if ((ramBitCast<RamDomain>(env0[2]) ==
+                                                ramBitCast<RamDomain>(
+                                                        (ramBitCast<RamSigned>(env1[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                            !(rel_67_Tape_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env0[0]),
+                                                            ramBitCast(RamSigned(6)),
+                                                            ramBitCast((
+                                                                    ramBitCast<RamSigned>(env1[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                    READ_OP_CONTEXT(rel_67_Tape_fff_op_ctxt))) &&
+                                            !(rel_38_delta_TapeLimits_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env1[1]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast(env0[0]), ramBitCast(RamSigned(6)),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        rel_59_new_Tape_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_59_new_Tape_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fff(position,"b",(step+1)) :- 
+   +m0_Tape+_fff(),
+   Configuration+_fff(position,_, _tmp_0),
+   position > right,
+    _tmp_0 = (step+1),
+   TapeLimits+_fff(step,_,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [20:0-20:1])_");
+                    if (!(rel_64_Configuration_fff->empty()) && !(rel_5_m0_Tape_fff->empty()) &&
+                            !(rel_38_delta_TapeLimits_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_59_new_Tape_fff_op_ctxt, rel_59_new_Tape_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_67_Tape_fff_op_ctxt, rel_67_Tape_fff->createContext());
+                            for (const auto& env0 : *rel_64_Configuration_fff) {
+                                Tuple<RamDomain, 3> lower{{0, 0, 0}};
+                                Tuple<RamDomain, 3> upper{{0, 0,
+                                        ramBitCast((ramBitCast<RamSigned>(env0[0]) -
+                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                auto range = rel_38_delta_TapeLimits_fff->lowerUpperRange_002(
+                                        lower, upper, READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if ((ramBitCast<RamDomain>(env0[2]) ==
+                                                ramBitCast<RamDomain>(
+                                                        (ramBitCast<RamSigned>(env1[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                            !(rel_67_Tape_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env0[0]),
+                                                            ramBitCast(RamSigned(6)),
+                                                            ramBitCast((
+                                                                    ramBitCast<RamSigned>(env1[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                    READ_OP_CONTEXT(rel_67_Tape_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast(env0[0]), ramBitCast(RamSigned(6)),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        rel_59_new_Tape_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_59_new_Tape_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                SECTION_END
+                SECTION_START
+                    ;
+                    SignalHandler::instance()->setMsg(R"_(+m0_Tape+_fbf(oldSymbol) :- 
+   +m0_Tape+_fbf(newSymbol),
+   Transition(currentState,_,oldSymbol,newSymbol,_).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [23:0-23:1])_");
+                    if (!(rel_20_delta_m0_Tape_fbf->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt, rel_4_m0_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_20_delta_m0_Tape_fbf_op_ctxt,
+                                    rel_20_delta_m0_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_42_new_m0_Tape_fbf_op_ctxt, rel_42_new_m0_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_20_delta_m0_Tape_fbf) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[4] = MIN_RAM_SIGNED;
+                                upper[4] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00010(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_4_m0_Tape_fbf->contains(
+                                                Tuple<RamDomain, 1>{{ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 1> tuple{{ramBitCast(env1[2])}};
+                                        rel_42_new_m0_Tape_fbf->insert(
+                                                tuple, READ_OP_CONTEXT(rel_42_new_m0_Tape_fbf_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m0_Tape+_fbf(symbol) :- 
+   +m0_Tape+_fbf(symbol).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [26:0-26:1])_");
+                    if (!(rel_20_delta_m0_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt, rel_4_m0_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_20_delta_m0_Tape_fbf_op_ctxt,
+                                    rel_20_delta_m0_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_42_new_m0_Tape_fbf_op_ctxt, rel_42_new_m0_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_20_delta_m0_Tape_fbf) {
+                                if (!(rel_4_m0_Tape_fbf->contains(Tuple<RamDomain, 1>{{ramBitCast(env0[0])}},
+                                            READ_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt)))) {
+                                    Tuple<RamDomain, 1> tuple{{ramBitCast(env0[0])}};
+                                    rel_42_new_m0_Tape_fbf->insert(
+                                            tuple, READ_OP_CONTEXT(rel_42_new_m0_Tape_fbf_op_ctxt));
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m0_Tape+_fbf(oldSymbol) :- 
+   +m0_Configuration+_bbb(+functor7,nextState,+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [37:0-37:1])_");
+                    if (!(rel_17_delta_m0_Configuration_bbb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt, rel_4_m0_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_17_delta_m0_Configuration_bbb_op_ctxt,
+                                    rel_17_delta_m0_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_42_new_m0_Tape_fbf_op_ctxt, rel_42_new_m0_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_17_delta_m0_Configuration_bbb) {
+                                Tuple<RamDomain, 5> lower{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_01001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_4_m0_Tape_fbf->contains(
+                                                Tuple<RamDomain, 1>{{ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 1> tuple{{ramBitCast(env1[2])}};
+                                        rel_42_new_m0_Tape_fbf->insert(
+                                                tuple, READ_OP_CONTEXT(rel_42_new_m0_Tape_fbf_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m0_Tape+_fbf(oldSymbol) :- 
+   +m0_Configuration+_bbb(+functor9,nextState,+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [40:0-40:1])_");
+                    if (!(rel_17_delta_m0_Configuration_bbb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt, rel_4_m0_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_17_delta_m0_Configuration_bbb_op_ctxt,
+                                    rel_17_delta_m0_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_42_new_m0_Tape_fbf_op_ctxt, rel_42_new_m0_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_17_delta_m0_Configuration_bbb) {
+                                Tuple<RamDomain, 5> lower{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_01001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_4_m0_Tape_fbf->contains(
+                                                Tuple<RamDomain, 1>{{ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 1> tuple{{ramBitCast(env1[2])}};
+                                        rel_42_new_m0_Tape_fbf->insert(
+                                                tuple, READ_OP_CONTEXT(rel_42_new_m0_Tape_fbf_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m0_Tape+_fbf(oldSymbol) :- 
+   +m0_Configuration+_ffb(+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [45:0-45:1])_");
+                    if (!(rel_18_delta_m0_Configuration_ffb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_18_delta_m0_Configuration_ffb_op_ctxt,
+                                    rel_18_delta_m0_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt, rel_4_m0_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_42_new_m0_Tape_fbf_op_ctxt, rel_42_new_m0_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_18_delta_m0_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_4_m0_Tape_fbf->contains(
+                                                Tuple<RamDomain, 1>{{ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 1> tuple{{ramBitCast(env1[2])}};
+                                        rel_42_new_m0_Tape_fbf->insert(
+                                                tuple, READ_OP_CONTEXT(rel_42_new_m0_Tape_fbf_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m0_Tape+_fbf(oldSymbol) :- 
+   +m0_Configuration+_ffb(+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [48:0-48:1])_");
+                    if (!(rel_18_delta_m0_Configuration_ffb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_18_delta_m0_Configuration_ffb_op_ctxt,
+                                    rel_18_delta_m0_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt, rel_4_m0_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_42_new_m0_Tape_fbf_op_ctxt, rel_42_new_m0_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_18_delta_m0_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_4_m0_Tape_fbf->contains(
+                                                Tuple<RamDomain, 1>{{ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 1> tuple{{ramBitCast(env1[2])}};
+                                        rel_42_new_m0_Tape_fbf->insert(
+                                                tuple, READ_OP_CONTEXT(rel_42_new_m0_Tape_fbf_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m0_Tape+_fbf(oldSymbol) :- 
+   +m0_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [53:0-53:1])_");
+                    if (!(rel_19_delta_m0_Configuration_fff->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt, rel_4_m0_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_42_new_m0_Tape_fbf_op_ctxt, rel_42_new_m0_Tape_fbf->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                if (!(rel_4_m0_Tape_fbf->contains(Tuple<RamDomain, 1>{{ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt)))) {
+                                    Tuple<RamDomain, 1> tuple{{ramBitCast(env0[2])}};
+                                    rel_42_new_m0_Tape_fbf->insert(
+                                            tuple, READ_OP_CONTEXT(rel_42_new_m0_Tape_fbf_op_ctxt));
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m0_Tape+_fbf(oldSymbol) :- 
+   +m0_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [56:0-56:1])_");
+                    if (!(rel_19_delta_m0_Configuration_fff->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt, rel_4_m0_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_42_new_m0_Tape_fbf_op_ctxt, rel_42_new_m0_Tape_fbf->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                if (!(rel_4_m0_Tape_fbf->contains(Tuple<RamDomain, 1>{{ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt)))) {
+                                    Tuple<RamDomain, 1> tuple{{ramBitCast(env0[2])}};
+                                    rel_42_new_m0_Tape_fbf->insert(
+                                            tuple, READ_OP_CONTEXT(rel_42_new_m0_Tape_fbf_op_ctxt));
+                                }
+                            }
+                        }();
+                    }
+                SECTION_END
+                SECTION_START
+                    ;
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m0_Configuration+_bbb(position,currentState,step) :- 
+   +m0_Tape+_fff(),
+   Transition(currentState,_,oldSymbol,newSymbol,_),
+   Tape+_fbf(position,oldSymbol,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [10:0-10:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_5_m0_Tape_fff->empty()) &&
+                            !(rel_36_delta_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt,
+                                    rel_1_m0_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt,
+                                    rel_39_new_m0_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_70_Transition) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_1_m0_Configuration_bbb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                ramBitCast(env1[2])}};
+                                        rel_39_new_m0_Configuration_bbb->insert(tuple,
+                                                READ_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m0_Configuration+_bbb(position,currentState,step) :- 
+   +m0_Tape+_fbf(newSymbol),
+   Transition(currentState,_,oldSymbol,newSymbol,_),
+   Tape+_fbf(position,oldSymbol,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [24:0-24:1])_");
+                    if (!(rel_66_Tape_fbf->empty()) && !(rel_20_delta_m0_Tape_fbf->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt,
+                                    rel_1_m0_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_20_delta_m0_Tape_fbf_op_ctxt,
+                                    rel_20_delta_m0_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt,
+                                    rel_39_new_m0_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_20_delta_m0_Tape_fbf) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[4] = MIN_RAM_SIGNED;
+                                upper[4] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00010(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_36_delta_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[2]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                !(rel_1_m0_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_1_m0_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_39_new_m0_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m0_Configuration+_bbb(position,currentState,step) :- 
+   +m0_Tape+_fbf(newSymbol),
+   Transition(currentState,_,oldSymbol,newSymbol,_),
+   Tape+_fbf(position,oldSymbol,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [24:0-24:1])_");
+                    if (!(rel_36_delta_Tape_fbf->empty()) && !(rel_4_m0_Tape_fbf->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt,
+                                    rel_1_m0_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt, rel_4_m0_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt,
+                                    rel_39_new_m0_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_4_m0_Tape_fbf) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[4] = MIN_RAM_SIGNED;
+                                upper[4] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00010(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_1_m0_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_39_new_m0_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m0_Configuration+_bbb(position,currentState,step) :- 
+   +m0_Configuration+_bbb(+functor7,nextState,+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [38:0-38:1])_");
+                    if (!(rel_66_Tape_fbf->empty()) && !(rel_17_delta_m0_Configuration_bbb->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt,
+                                    rel_1_m0_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_17_delta_m0_Configuration_bbb_op_ctxt,
+                                    rel_17_delta_m0_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt,
+                                    rel_39_new_m0_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_17_delta_m0_Configuration_bbb) {
+                                Tuple<RamDomain, 5> lower{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_01001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_36_delta_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[2]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                !(rel_1_m0_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_1_m0_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_39_new_m0_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m0_Configuration+_bbb(position,currentState,step) :- 
+   +m0_Configuration+_bbb(+functor7,nextState,+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [38:0-38:1])_");
+                    if (!(rel_36_delta_Tape_fbf->empty()) && !(rel_1_m0_Configuration_bbb->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt,
+                                    rel_1_m0_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt,
+                                    rel_39_new_m0_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_1_m0_Configuration_bbb) {
+                                Tuple<RamDomain, 5> lower{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_01001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_1_m0_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_39_new_m0_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m0_Configuration+_bbb(position,currentState,step) :- 
+   +m0_Configuration+_bbb(+functor9,nextState,+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [41:0-41:1])_");
+                    if (!(rel_66_Tape_fbf->empty()) && !(rel_17_delta_m0_Configuration_bbb->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt,
+                                    rel_1_m0_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_17_delta_m0_Configuration_bbb_op_ctxt,
+                                    rel_17_delta_m0_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt,
+                                    rel_39_new_m0_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_17_delta_m0_Configuration_bbb) {
+                                Tuple<RamDomain, 5> lower{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_01001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_36_delta_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[2]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                !(rel_1_m0_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_1_m0_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_39_new_m0_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m0_Configuration+_bbb(position,currentState,step) :- 
+   +m0_Configuration+_bbb(+functor9,nextState,+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [41:0-41:1])_");
+                    if (!(rel_36_delta_Tape_fbf->empty()) && !(rel_1_m0_Configuration_bbb->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt,
+                                    rel_1_m0_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt,
+                                    rel_39_new_m0_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_1_m0_Configuration_bbb) {
+                                Tuple<RamDomain, 5> lower{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_01001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_1_m0_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_39_new_m0_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m0_Configuration+_bbb(position,currentState,step) :- 
+   +m0_Configuration+_ffb(+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [46:0-46:1])_");
+                    if (!(rel_66_Tape_fbf->empty()) && !(rel_18_delta_m0_Configuration_ffb->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_18_delta_m0_Configuration_ffb_op_ctxt,
+                                    rel_18_delta_m0_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt,
+                                    rel_1_m0_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt,
+                                    rel_39_new_m0_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_18_delta_m0_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_36_delta_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[2]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                !(rel_1_m0_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_1_m0_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_39_new_m0_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m0_Configuration+_bbb(position,currentState,step) :- 
+   +m0_Configuration+_ffb(+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [46:0-46:1])_");
+                    if (!(rel_36_delta_Tape_fbf->empty()) && !(rel_2_m0_Configuration_ffb->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_2_m0_Configuration_ffb_op_ctxt,
+                                    rel_2_m0_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt,
+                                    rel_1_m0_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt,
+                                    rel_39_new_m0_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_2_m0_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_1_m0_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_39_new_m0_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m0_Configuration+_bbb(position,currentState,step) :- 
+   +m0_Configuration+_ffb(+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [49:0-49:1])_");
+                    if (!(rel_66_Tape_fbf->empty()) && !(rel_18_delta_m0_Configuration_ffb->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_18_delta_m0_Configuration_ffb_op_ctxt,
+                                    rel_18_delta_m0_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt,
+                                    rel_1_m0_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt,
+                                    rel_39_new_m0_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_18_delta_m0_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_36_delta_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[2]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                !(rel_1_m0_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_1_m0_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_39_new_m0_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m0_Configuration+_bbb(position,currentState,step) :- 
+   +m0_Configuration+_ffb(+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [49:0-49:1])_");
+                    if (!(rel_36_delta_Tape_fbf->empty()) && !(rel_2_m0_Configuration_ffb->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_2_m0_Configuration_ffb_op_ctxt,
+                                    rel_2_m0_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt,
+                                    rel_1_m0_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt,
+                                    rel_39_new_m0_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_2_m0_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_1_m0_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_39_new_m0_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m0_Configuration+_bbb(position,currentState,step) :- 
+   +m0_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [54:0-54:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_19_delta_m0_Configuration_fff->empty()) &&
+                            !(rel_66_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt,
+                                    rel_1_m0_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt,
+                                    rel_39_new_m0_Configuration_bbb->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_36_delta_Tape_fbf->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[2]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                            !(rel_1_m0_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                ramBitCast(env1[2])}};
+                                        rel_39_new_m0_Configuration_bbb->insert(tuple,
+                                                READ_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m0_Configuration+_bbb(position,currentState,step) :- 
+   +m0_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [54:0-54:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_3_m0_Configuration_fff->empty()) &&
+                            !(rel_36_delta_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt,
+                                    rel_1_m0_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt,
+                                    rel_39_new_m0_Configuration_bbb->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_1_m0_Configuration_bbb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                ramBitCast(env1[2])}};
+                                        rel_39_new_m0_Configuration_bbb->insert(tuple,
+                                                READ_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m0_Configuration+_bbb(position,currentState,step) :- 
+   +m0_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [57:0-57:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_19_delta_m0_Configuration_fff->empty()) &&
+                            !(rel_66_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt,
+                                    rel_1_m0_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt,
+                                    rel_39_new_m0_Configuration_bbb->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_36_delta_Tape_fbf->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[2]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                            !(rel_1_m0_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                ramBitCast(env1[2])}};
+                                        rel_39_new_m0_Configuration_bbb->insert(tuple,
+                                                READ_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m0_Configuration+_bbb(position,currentState,step) :- 
+   +m0_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [57:0-57:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_3_m0_Configuration_fff->empty()) &&
+                            !(rel_36_delta_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt,
+                                    rel_1_m0_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt,
+                                    rel_39_new_m0_Configuration_bbb->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_1_m0_Configuration_bbb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                ramBitCast(env1[2])}};
+                                        rel_39_new_m0_Configuration_bbb->insert(tuple,
+                                                READ_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                SECTION_END
+                SECTION_START
+                    ;
+                    SignalHandler::instance()->setMsg(R"_(+m0_Configuration+_fff() :- 
+   +m0_Tape+_fbf(+abdul6_b_s),
+   +abdul6_b_s = "b".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [29:0-29:1])_");
+                    if (!(rel_20_delta_m0_Tape_fbf->empty()) && rel_41_new_m0_Configuration_fff->empty() &&
+                            rel_3_m0_Configuration_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_41_new_m0_Configuration_fff_op_ctxt,
+                                    rel_41_new_m0_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_20_delta_m0_Tape_fbf_op_ctxt,
+                                    rel_20_delta_m0_Tape_fbf->createContext());
+                            if (rel_20_delta_m0_Tape_fbf->contains(
+                                        Tuple<RamDomain, 1>{{ramBitCast(RamSigned(6))}},
+                                        READ_OP_CONTEXT(rel_20_delta_m0_Tape_fbf_op_ctxt))) {
+                                Tuple<RamDomain, 0> tuple{{}};
+                                rel_41_new_m0_Configuration_fff->insert(
+                                        tuple, READ_OP_CONTEXT(rel_41_new_m0_Configuration_fff_op_ctxt));
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m0_Configuration+_fff() :- 
+   +m0_Tape+_fbf(+abdul11_b_s),
+   +abdul11_b_s = "b".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [32:0-32:1])_");
+                    if (!(rel_20_delta_m0_Tape_fbf->empty()) && rel_41_new_m0_Configuration_fff->empty() &&
+                            rel_3_m0_Configuration_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_41_new_m0_Configuration_fff_op_ctxt,
+                                    rel_41_new_m0_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_20_delta_m0_Tape_fbf_op_ctxt,
+                                    rel_20_delta_m0_Tape_fbf->createContext());
+                            if (rel_20_delta_m0_Tape_fbf->contains(
+                                        Tuple<RamDomain, 1>{{ramBitCast(RamSigned(6))}},
+                                        READ_OP_CONTEXT(rel_20_delta_m0_Tape_fbf_op_ctxt))) {
+                                Tuple<RamDomain, 0> tuple{{}};
+                                rel_41_new_m0_Configuration_fff->insert(
+                                        tuple, READ_OP_CONTEXT(rel_41_new_m0_Configuration_fff_op_ctxt));
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m0_Configuration+_fff() :- 
+   +m0_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [62:0-62:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_22_delta_m0_TapeLimits_fff->empty()) &&
+                            rel_41_new_m0_Configuration_fff->empty() && rel_3_m0_Configuration_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_41_new_m0_Configuration_fff_op_ctxt,
+                                    rel_41_new_m0_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                if (!(rel_38_delta_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                    if (!(rel_41_new_m0_Configuration_fff->empty())) break;
+                                    if (!(rel_38_delta_TapeLimits_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                        ramBitCast(env0[2])}},
+                                                READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 0> tuple{{}};
+                                        rel_41_new_m0_Configuration_fff->insert(tuple,
+                                                READ_OP_CONTEXT(rel_41_new_m0_Configuration_fff_op_ctxt));
+                                    }
+                                    break;
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m0_Configuration+_fff() :- 
+   +m0_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [62:0-62:1])_");
+                    if (!(rel_38_delta_TapeLimits_fff->empty()) && !(rel_6_m0_TapeLimits_fff->empty()) &&
+                            rel_41_new_m0_Configuration_fff->empty() && rel_3_m0_Configuration_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_41_new_m0_Configuration_fff_op_ctxt,
+                                    rel_41_new_m0_Configuration_fff->createContext());
+                            for (const auto& env0 : *rel_38_delta_TapeLimits_fff) {
+                                if (!(rel_41_new_m0_Configuration_fff->empty())) break;
+                                Tuple<RamDomain, 0> tuple{{}};
+                                rel_41_new_m0_Configuration_fff->insert(
+                                        tuple, READ_OP_CONTEXT(rel_41_new_m0_Configuration_fff_op_ctxt));
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m0_Configuration+_fff() :- 
+   +m0_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [65:0-65:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_22_delta_m0_TapeLimits_fff->empty()) &&
+                            rel_41_new_m0_Configuration_fff->empty() && rel_3_m0_Configuration_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_41_new_m0_Configuration_fff_op_ctxt,
+                                    rel_41_new_m0_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                if (!(rel_38_delta_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                    if (!(rel_41_new_m0_Configuration_fff->empty())) break;
+                                    if (!(rel_38_delta_TapeLimits_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                        ramBitCast(env0[2])}},
+                                                READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 0> tuple{{}};
+                                        rel_41_new_m0_Configuration_fff->insert(tuple,
+                                                READ_OP_CONTEXT(rel_41_new_m0_Configuration_fff_op_ctxt));
+                                    }
+                                    break;
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m0_Configuration+_fff() :- 
+   +m0_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [65:0-65:1])_");
+                    if (!(rel_38_delta_TapeLimits_fff->empty()) && !(rel_6_m0_TapeLimits_fff->empty()) &&
+                            rel_41_new_m0_Configuration_fff->empty() && rel_3_m0_Configuration_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_41_new_m0_Configuration_fff_op_ctxt,
+                                    rel_41_new_m0_Configuration_fff->createContext());
+                            for (const auto& env0 : *rel_38_delta_TapeLimits_fff) {
+                                if (!(rel_41_new_m0_Configuration_fff->empty())) break;
+                                Tuple<RamDomain, 0> tuple{{}};
+                                rel_41_new_m0_Configuration_fff->insert(
+                                        tuple, READ_OP_CONTEXT(rel_41_new_m0_Configuration_fff_op_ctxt));
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m0_Configuration+_fff() :- 
+   +m0_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [68:0-68:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_22_delta_m0_TapeLimits_fff->empty()) &&
+                            rel_41_new_m0_Configuration_fff->empty() && rel_3_m0_Configuration_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_41_new_m0_Configuration_fff_op_ctxt,
+                                    rel_41_new_m0_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                if (!(rel_38_delta_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                    if (!(rel_41_new_m0_Configuration_fff->empty())) break;
+                                    if (!(rel_38_delta_TapeLimits_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                        ramBitCast(env0[2])}},
+                                                READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 0> tuple{{}};
+                                        rel_41_new_m0_Configuration_fff->insert(tuple,
+                                                READ_OP_CONTEXT(rel_41_new_m0_Configuration_fff_op_ctxt));
+                                    }
+                                    break;
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m0_Configuration+_fff() :- 
+   +m0_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [68:0-68:1])_");
+                    if (!(rel_38_delta_TapeLimits_fff->empty()) && !(rel_6_m0_TapeLimits_fff->empty()) &&
+                            rel_41_new_m0_Configuration_fff->empty() && rel_3_m0_Configuration_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_41_new_m0_Configuration_fff_op_ctxt,
+                                    rel_41_new_m0_Configuration_fff->createContext());
+                            for (const auto& env0 : *rel_38_delta_TapeLimits_fff) {
+                                if (!(rel_41_new_m0_Configuration_fff->empty())) break;
+                                Tuple<RamDomain, 0> tuple{{}};
+                                rel_41_new_m0_Configuration_fff->insert(
+                                        tuple, READ_OP_CONTEXT(rel_41_new_m0_Configuration_fff_op_ctxt));
+                            }
+                        }();
+                    }
+                SECTION_END
+                SECTION_START
+                    ;
+                    SignalHandler::instance()->setMsg(R"_(+m0_TapeLimits+_fff() :- 
+   +m0_Tape+_fff(),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [16:0-16:1])_");
+                    if (!(rel_35_delta_Configuration_fff->empty()) && !(rel_5_m0_Tape_fff->empty()) &&
+                            rel_44_new_m0_TapeLimits_fff->empty() && rel_6_m0_TapeLimits_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_44_new_m0_TapeLimits_fff_op_ctxt,
+                                    rel_44_new_m0_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_35_delta_Configuration_fff) {
+                                if (!(rel_44_new_m0_TapeLimits_fff->empty())) break;
+                                Tuple<RamDomain, 0> tuple{{}};
+                                rel_44_new_m0_TapeLimits_fff->insert(
+                                        tuple, READ_OP_CONTEXT(rel_44_new_m0_TapeLimits_fff_op_ctxt));
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m0_TapeLimits+_fff() :- 
+   +m0_Tape+_fff(),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [19:0-19:1])_");
+                    if (!(rel_35_delta_Configuration_fff->empty()) && !(rel_5_m0_Tape_fff->empty()) &&
+                            rel_44_new_m0_TapeLimits_fff->empty() && rel_6_m0_TapeLimits_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_44_new_m0_TapeLimits_fff_op_ctxt,
+                                    rel_44_new_m0_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_35_delta_Configuration_fff) {
+                                if (!(rel_44_new_m0_TapeLimits_fff->empty())) break;
+                                Tuple<RamDomain, 0> tuple{{}};
+                                rel_44_new_m0_TapeLimits_fff->insert(
+                                        tuple, READ_OP_CONTEXT(rel_44_new_m0_TapeLimits_fff_op_ctxt));
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m0_TapeLimits+_fff() :- 
+   +m0_Tape+_fbf(+abdul6_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   +abdul6_b_s = "b".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [30:0-30:1])_");
+                    if (!(rel_20_delta_m0_Tape_fbf->empty()) && !(rel_64_Configuration_fff->empty()) &&
+                            rel_44_new_m0_TapeLimits_fff->empty() && rel_6_m0_TapeLimits_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_44_new_m0_TapeLimits_fff_op_ctxt,
+                                    rel_44_new_m0_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_20_delta_m0_Tape_fbf_op_ctxt,
+                                    rel_20_delta_m0_Tape_fbf->createContext());
+                            if (rel_20_delta_m0_Tape_fbf->contains(
+                                        Tuple<RamDomain, 1>{{ramBitCast(RamSigned(6))}},
+                                        READ_OP_CONTEXT(rel_20_delta_m0_Tape_fbf_op_ctxt))) {
+                                for (const auto& env0 : *rel_64_Configuration_fff) {
+                                    if (!(rel_35_delta_Configuration_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                        ramBitCast(env0[2])}},
+                                                READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt)))) {
+                                        if (!(rel_44_new_m0_TapeLimits_fff->empty())) break;
+                                        if (!(rel_35_delta_Configuration_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env0[0]),
+                                                            ramBitCast(env0[1]), ramBitCast(env0[2])}},
+                                                    READ_OP_CONTEXT(
+                                                            rel_35_delta_Configuration_fff_op_ctxt)))) {
+                                            Tuple<RamDomain, 0> tuple{{}};
+                                            rel_44_new_m0_TapeLimits_fff->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_44_new_m0_TapeLimits_fff_op_ctxt));
+                                        }
+                                        break;
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m0_TapeLimits+_fff() :- 
+   +m0_Tape+_fbf(+abdul6_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   +abdul6_b_s = "b".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [30:0-30:1])_");
+                    if (!(rel_4_m0_Tape_fbf->empty()) && !(rel_35_delta_Configuration_fff->empty()) &&
+                            rel_44_new_m0_TapeLimits_fff->empty() && rel_6_m0_TapeLimits_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_44_new_m0_TapeLimits_fff_op_ctxt,
+                                    rel_44_new_m0_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt, rel_4_m0_Tape_fbf->createContext());
+                            if (rel_4_m0_Tape_fbf->contains(Tuple<RamDomain, 1>{{ramBitCast(RamSigned(6))}},
+                                        READ_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt))) {
+                                for (const auto& env0 : *rel_35_delta_Configuration_fff) {
+                                    if (!(rel_44_new_m0_TapeLimits_fff->empty())) break;
+                                    Tuple<RamDomain, 0> tuple{{}};
+                                    rel_44_new_m0_TapeLimits_fff->insert(
+                                            tuple, READ_OP_CONTEXT(rel_44_new_m0_TapeLimits_fff_op_ctxt));
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m0_TapeLimits+_fff() :- 
+   +m0_Tape+_fbf(+abdul11_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   +abdul11_b_s = "b".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [33:0-33:1])_");
+                    if (!(rel_20_delta_m0_Tape_fbf->empty()) && !(rel_64_Configuration_fff->empty()) &&
+                            rel_44_new_m0_TapeLimits_fff->empty() && rel_6_m0_TapeLimits_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_44_new_m0_TapeLimits_fff_op_ctxt,
+                                    rel_44_new_m0_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_20_delta_m0_Tape_fbf_op_ctxt,
+                                    rel_20_delta_m0_Tape_fbf->createContext());
+                            if (rel_20_delta_m0_Tape_fbf->contains(
+                                        Tuple<RamDomain, 1>{{ramBitCast(RamSigned(6))}},
+                                        READ_OP_CONTEXT(rel_20_delta_m0_Tape_fbf_op_ctxt))) {
+                                for (const auto& env0 : *rel_64_Configuration_fff) {
+                                    if (!(rel_35_delta_Configuration_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                        ramBitCast(env0[2])}},
+                                                READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt)))) {
+                                        if (!(rel_44_new_m0_TapeLimits_fff->empty())) break;
+                                        if (!(rel_35_delta_Configuration_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env0[0]),
+                                                            ramBitCast(env0[1]), ramBitCast(env0[2])}},
+                                                    READ_OP_CONTEXT(
+                                                            rel_35_delta_Configuration_fff_op_ctxt)))) {
+                                            Tuple<RamDomain, 0> tuple{{}};
+                                            rel_44_new_m0_TapeLimits_fff->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_44_new_m0_TapeLimits_fff_op_ctxt));
+                                        }
+                                        break;
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m0_TapeLimits+_fff() :- 
+   +m0_Tape+_fbf(+abdul11_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   +abdul11_b_s = "b".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [33:0-33:1])_");
+                    if (!(rel_4_m0_Tape_fbf->empty()) && !(rel_35_delta_Configuration_fff->empty()) &&
+                            rel_44_new_m0_TapeLimits_fff->empty() && rel_6_m0_TapeLimits_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_44_new_m0_TapeLimits_fff_op_ctxt,
+                                    rel_44_new_m0_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt, rel_4_m0_Tape_fbf->createContext());
+                            if (rel_4_m0_Tape_fbf->contains(Tuple<RamDomain, 1>{{ramBitCast(RamSigned(6))}},
+                                        READ_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt))) {
+                                for (const auto& env0 : *rel_35_delta_Configuration_fff) {
+                                    if (!(rel_44_new_m0_TapeLimits_fff->empty())) break;
+                                    Tuple<RamDomain, 0> tuple{{}};
+                                    rel_44_new_m0_TapeLimits_fff->insert(
+                                            tuple, READ_OP_CONTEXT(rel_44_new_m0_TapeLimits_fff_op_ctxt));
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m0_TapeLimits+_fff() :- 
+   +m0_TapeLimits+_fff().
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [61:0-61:1])_");
+                    if (rel_44_new_m0_TapeLimits_fff->empty() && rel_6_m0_TapeLimits_fff->empty() &&
+                            !(rel_22_delta_m0_TapeLimits_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_44_new_m0_TapeLimits_fff_op_ctxt,
+                                    rel_44_new_m0_TapeLimits_fff->createContext());
+                            Tuple<RamDomain, 0> tuple{{}};
+                            rel_44_new_m0_TapeLimits_fff->insert(
+                                    tuple, READ_OP_CONTEXT(rel_44_new_m0_TapeLimits_fff_op_ctxt));
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m0_TapeLimits+_fff() :- 
+   +m0_TapeLimits+_fff().
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [64:0-64:1])_");
+                    if (rel_44_new_m0_TapeLimits_fff->empty() && rel_6_m0_TapeLimits_fff->empty() &&
+                            !(rel_22_delta_m0_TapeLimits_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_44_new_m0_TapeLimits_fff_op_ctxt,
+                                    rel_44_new_m0_TapeLimits_fff->createContext());
+                            Tuple<RamDomain, 0> tuple{{}};
+                            rel_44_new_m0_TapeLimits_fff->insert(
+                                    tuple, READ_OP_CONTEXT(rel_44_new_m0_TapeLimits_fff_op_ctxt));
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m0_TapeLimits+_fff() :- 
+   +m0_TapeLimits+_fff().
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [67:0-67:1])_");
+                    if (rel_44_new_m0_TapeLimits_fff->empty() && rel_6_m0_TapeLimits_fff->empty() &&
+                            !(rel_22_delta_m0_TapeLimits_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_44_new_m0_TapeLimits_fff_op_ctxt,
+                                    rel_44_new_m0_TapeLimits_fff->createContext());
+                            Tuple<RamDomain, 0> tuple{{}};
+                            rel_44_new_m0_TapeLimits_fff->insert(
+                                    tuple, READ_OP_CONTEXT(rel_44_new_m0_TapeLimits_fff_op_ctxt));
+                        }();
+                    }
+                SECTION_END
+                SECTION_START
+                    ;
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(arg0,arg1,arg2) :- 
+   +m0_Tape+_fbf(arg1),
+   newedb1(arg0,arg1,arg2).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE][MAGIC_FILE] [35:0-35:1])_");
+                    if (!(rel_20_delta_m0_Tape_fbf->empty()) && !(rel_71_newedb1->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_71_newedb1_op_ctxt, rel_71_newedb1->createContext());
+                            CREATE_OP_CONTEXT(rel_20_delta_m0_Tape_fbf_op_ctxt,
+                                    rel_20_delta_m0_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_20_delta_m0_Tape_fbf) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_71_newedb1->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_71_newedb1_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_66_Tape_fbf->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                ramBitCast(env1[2])}};
+                                        rel_58_new_Tape_fbf->insert(
+                                                tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(arg0,arg1,arg2) :- 
+   +m1_Tape+_fbf(arg1),
+   newedb1(arg0,arg1,arg2).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE][MAGIC_FILE] [91:0-91:1])_");
+                    if (!(rel_26_delta_m1_Tape_fbf->empty()) && !(rel_71_newedb1->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_71_newedb1_op_ctxt, rel_71_newedb1->createContext());
+                            CREATE_OP_CONTEXT(rel_26_delta_m1_Tape_fbf_op_ctxt,
+                                    rel_26_delta_m1_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_26_delta_m1_Tape_fbf) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_71_newedb1->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_71_newedb1_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_66_Tape_fbf->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                ramBitCast(env1[2])}};
+                                        rel_58_new_Tape_fbf->insert(
+                                                tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(arg0,arg1,arg2) :- 
+   +m2_Tape+_fbf(arg1),
+   newedb1(arg0,arg1,arg2).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE][MAGIC_FILE] [146:0-146:1])_");
+                    if (!(rel_31_delta_m2_Tape_fbf->empty()) && !(rel_71_newedb1->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_31_delta_m2_Tape_fbf_op_ctxt,
+                                    rel_31_delta_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_71_newedb1_op_ctxt, rel_71_newedb1->createContext());
+                            for (const auto& env0 : *rel_31_delta_m2_Tape_fbf) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_71_newedb1->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_71_newedb1_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_66_Tape_fbf->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                ramBitCast(env1[2])}};
+                                        rel_58_new_Tape_fbf->insert(
+                                                tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,newSymbol,(step+1)) :- 
+   +m0_Tape+_fbf(newSymbol),
+   Transition(currentState,_,oldSymbol,newSymbol,_),
+   Tape+_fbf(position,oldSymbol,step),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [25:0-25:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_20_delta_m0_Tape_fbf->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_20_delta_m0_Tape_fbf_op_ctxt,
+                                    rel_20_delta_m0_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_20_delta_m0_Tape_fbf) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[4] = MIN_RAM_SIGNED;
+                                upper[4] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00010(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_66_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env0[0]),
+                                                            ramBitCast((
+                                                                    ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                    READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt))) &&
+                                                !(rel_33_delta_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_33_delta_Configuration_bbb_op_ctxt))) &&
+                                                !(rel_36_delta_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[2]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                rel_62_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env0[0]),
+                                                    ramBitCast((ramBitCast<RamSigned>(env2[2]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))}};
+                                            rel_58_new_Tape_fbf->insert(
+                                                    tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,newSymbol,(step+1)) :- 
+   +m0_Tape+_fbf(newSymbol),
+   Transition(currentState,_,oldSymbol,newSymbol,_),
+   Tape+_fbf(position,oldSymbol,step),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [25:0-25:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_36_delta_Tape_fbf->empty()) &&
+                            !(rel_4_m0_Tape_fbf->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt, rel_4_m0_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_4_m0_Tape_fbf) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[4] = MIN_RAM_SIGNED;
+                                upper[4] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00010(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_33_delta_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(
+                                                            rel_33_delta_Configuration_bbb_op_ctxt))) &&
+                                                !(rel_66_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env0[0]),
+                                                                ramBitCast((ramBitCast<RamSigned>(env2[2]) +
+                                                                            ramBitCast<RamSigned>(
+                                                                                    RamSigned(1))))}},
+                                                        READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt))) &&
+                                                rel_62_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env0[0]),
+                                                    ramBitCast((ramBitCast<RamSigned>(env2[2]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))}};
+                                            rel_58_new_Tape_fbf->insert(
+                                                    tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,newSymbol,(step+1)) :- 
+   +m0_Tape+_fbf(newSymbol),
+   Transition(currentState,_,oldSymbol,newSymbol,_),
+   Tape+_fbf(position,oldSymbol,step),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [25:0-25:1])_");
+                    if (!(rel_33_delta_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_4_m0_Tape_fbf->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt, rel_4_m0_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_4_m0_Tape_fbf) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[4] = MIN_RAM_SIGNED;
+                                upper[4] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00010(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (rel_33_delta_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(
+                                                            rel_33_delta_Configuration_bbb_op_ctxt)) &&
+                                                !(rel_66_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env0[0]),
+                                                                ramBitCast((ramBitCast<RamSigned>(env2[2]) +
+                                                                            ramBitCast<RamSigned>(
+                                                                                    RamSigned(1))))}},
+                                                        READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env0[0]),
+                                                    ramBitCast((ramBitCast<RamSigned>(env2[2]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))}};
+                                            rel_58_new_Tape_fbf->insert(
+                                                    tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,symbol,(step+1)) :- 
+   +m0_Tape+_fbf(symbol),
+   Tape+_fbf(position,symbol,step),
+   position != writePosition,
+   Configuration+_ffb(writePosition,_,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [28:0-28:1])_");
+                    if (!(rel_63_Configuration_ffb->empty()) && !(rel_20_delta_m0_Tape_fbf->empty()) &&
+                            !(rel_66_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_34_delta_Configuration_ffb_op_ctxt,
+                                    rel_34_delta_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_20_delta_m0_Tape_fbf_op_ctxt,
+                                    rel_20_delta_m0_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_20_delta_m0_Tape_fbf) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_36_delta_Tape_fbf->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                            !(rel_66_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]),
+                                                            ramBitCast((
+                                                                    ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                    READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> lower{{0, 0, ramBitCast(env1[2])}};
+                                        Tuple<RamDomain, 3> upper{{0, 0, ramBitCast(env1[2])}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[1] = MIN_RAM_SIGNED;
+                                        upper[1] = MAX_RAM_SIGNED;
+                                        auto range = rel_63_Configuration_ffb->lowerUpperRange_001(lower,
+                                                upper, READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env1[0]) !=
+                                                        ramBitCast<RamDomain>(env2[0])) &&
+                                                    !(rel_34_delta_Configuration_ffb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env2[1]),
+                                                                            ramBitCast(env1[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_34_delta_Configuration_ffb_op_ctxt)))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                        ramBitCast(env0[0]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                                rel_58_new_Tape_fbf->insert(
+                                                        tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                                break;
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,symbol,(step+1)) :- 
+   +m0_Tape+_fbf(symbol),
+   Tape+_fbf(position,symbol,step),
+   position != writePosition,
+   Configuration+_ffb(writePosition,_,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [28:0-28:1])_");
+                    if (!(rel_63_Configuration_ffb->empty()) && !(rel_4_m0_Tape_fbf->empty()) &&
+                            !(rel_36_delta_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_34_delta_Configuration_ffb_op_ctxt,
+                                    rel_34_delta_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt, rel_4_m0_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_4_m0_Tape_fbf) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_66_Tape_fbf->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> lower{{0, 0, ramBitCast(env1[2])}};
+                                        Tuple<RamDomain, 3> upper{{0, 0, ramBitCast(env1[2])}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[1] = MIN_RAM_SIGNED;
+                                        upper[1] = MAX_RAM_SIGNED;
+                                        auto range = rel_63_Configuration_ffb->lowerUpperRange_001(lower,
+                                                upper, READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env1[0]) !=
+                                                        ramBitCast<RamDomain>(env2[0])) &&
+                                                    !(rel_34_delta_Configuration_ffb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env2[1]),
+                                                                            ramBitCast(env1[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_34_delta_Configuration_ffb_op_ctxt)))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                        ramBitCast(env0[0]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                                rel_58_new_Tape_fbf->insert(
+                                                        tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                                break;
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,symbol,(step+1)) :- 
+   +m0_Tape+_fbf(symbol),
+   Tape+_fbf(position,symbol,step),
+   position != writePosition,
+   Configuration+_ffb(writePosition,_,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [28:0-28:1])_");
+                    if (!(rel_34_delta_Configuration_ffb->empty()) && !(rel_4_m0_Tape_fbf->empty()) &&
+                            !(rel_66_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_34_delta_Configuration_ffb_op_ctxt,
+                                    rel_34_delta_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt, rel_4_m0_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_4_m0_Tape_fbf) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_66_Tape_fbf->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> lower{{0, 0, ramBitCast(env1[2])}};
+                                        Tuple<RamDomain, 3> upper{{0, 0, ramBitCast(env1[2])}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[1] = MIN_RAM_SIGNED;
+                                        upper[1] = MAX_RAM_SIGNED;
+                                        auto range = rel_34_delta_Configuration_ffb->lowerUpperRange_001(
+                                                lower, upper,
+                                                READ_OP_CONTEXT(rel_34_delta_Configuration_ffb_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env1[0]) !=
+                                                        ramBitCast<RamDomain>(env2[0]))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                        ramBitCast(env0[0]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                                rel_58_new_Tape_fbf->insert(
+                                                        tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                                break;
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,+abdul6_b_s,(step+1)) :- 
+   +m0_Tape+_fbf(+abdul6_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   position < left,
+    _tmp_0 = (step+1),
+   +abdul6_b_s = "b",
+   TapeLimits+_fff(step,left,_).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [31:0-31:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_20_delta_m0_Tape_fbf->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_20_delta_m0_Tape_fbf_op_ctxt,
+                                    rel_20_delta_m0_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            Tuple<RamDomain, 1> lower{{ramBitCast(RamSigned(6))}};
+                            Tuple<RamDomain, 1> upper{{ramBitCast(RamSigned(6))}};
+                            auto range = rel_20_delta_m0_Tape_fbf->lowerUpperRange_1(
+                                    lower, upper, READ_OP_CONTEXT(rel_20_delta_m0_Tape_fbf_op_ctxt));
+                            for (const auto& env0 : range) {
+                                for (const auto& env1 : *rel_64_Configuration_fff) {
+                                    if (!(rel_35_delta_Configuration_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env1[1]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt)))) {
+                                        for (const auto& env2 : *rel_69_TapeLimits_fff) {
+                                            if ((ramBitCast<RamSigned>(env2[1]) >=
+                                                        ramBitCast<RamSigned>((
+                                                                ramBitCast<RamSigned>(env1[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    (ramBitCast<RamDomain>(env1[2]) ==
+                                                            ramBitCast<RamDomain>((
+                                                                    ramBitCast<RamSigned>(env2[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    !(rel_66_Tape_fbf->contains(
+                                                            Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                                    ramBitCast(env0[0]),
+                                                                    ramBitCast(
+                                                                            (ramBitCast<RamSigned>(env2[0]) +
+                                                                                    ramBitCast<RamSigned>(
+                                                                                            RamSigned(1))))}},
+                                                            READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt))) &&
+                                                    !(rel_38_delta_TapeLimits_fff->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env2[1]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                        ramBitCast(env0[0]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                                rel_58_new_Tape_fbf->insert(
+                                                        tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,+abdul6_b_s,(step+1)) :- 
+   +m0_Tape+_fbf(+abdul6_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   position < left,
+    _tmp_0 = (step+1),
+   +abdul6_b_s = "b",
+   TapeLimits+_fff(step,left,_).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [31:0-31:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_4_m0_Tape_fbf->empty()) &&
+                            !(rel_35_delta_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt, rel_4_m0_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            Tuple<RamDomain, 1> lower{{ramBitCast(RamSigned(6))}};
+                            Tuple<RamDomain, 1> upper{{ramBitCast(RamSigned(6))}};
+                            auto range = rel_4_m0_Tape_fbf->lowerUpperRange_1(
+                                    lower, upper, READ_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt));
+                            for (const auto& env0 : range) {
+                                for (const auto& env1 : *rel_35_delta_Configuration_fff) {
+                                    for (const auto& env2 : *rel_69_TapeLimits_fff) {
+                                        if ((ramBitCast<RamSigned>(env2[1]) >=
+                                                    ramBitCast<RamSigned>(
+                                                            (ramBitCast<RamSigned>(env1[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                (ramBitCast<RamDomain>(env1[2]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                !(rel_66_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                                ramBitCast(env0[0]),
+                                                                ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                            ramBitCast<RamSigned>(
+                                                                                    RamSigned(1))))}},
+                                                        READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt))) &&
+                                                !(rel_38_delta_TapeLimits_fff->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env2[1]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                    ramBitCast(env0[0]),
+                                                    ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))}};
+                                            rel_58_new_Tape_fbf->insert(
+                                                    tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,+abdul6_b_s,(step+1)) :- 
+   +m0_Tape+_fbf(+abdul6_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   position < left,
+    _tmp_0 = (step+1),
+   +abdul6_b_s = "b",
+   TapeLimits+_fff(step,left,_).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [31:0-31:1])_");
+                    if (!(rel_38_delta_TapeLimits_fff->empty()) && !(rel_4_m0_Tape_fbf->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt, rel_4_m0_Tape_fbf->createContext());
+                            Tuple<RamDomain, 1> lower{{ramBitCast(RamSigned(6))}};
+                            Tuple<RamDomain, 1> upper{{ramBitCast(RamSigned(6))}};
+                            auto range = rel_4_m0_Tape_fbf->lowerUpperRange_1(
+                                    lower, upper, READ_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt));
+                            for (const auto& env0 : range) {
+                                for (const auto& env1 : *rel_64_Configuration_fff) {
+                                    for (const auto& env2 : *rel_38_delta_TapeLimits_fff) {
+                                        if ((ramBitCast<RamSigned>(env2[1]) >=
+                                                    ramBitCast<RamSigned>(
+                                                            (ramBitCast<RamSigned>(env1[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                (ramBitCast<RamDomain>(env1[2]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                !(rel_66_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                                ramBitCast(env0[0]),
+                                                                ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                            ramBitCast<RamSigned>(
+                                                                                    RamSigned(1))))}},
+                                                        READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                    ramBitCast(env0[0]),
+                                                    ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))}};
+                                            rel_58_new_Tape_fbf->insert(
+                                                    tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,+abdul11_b_s,(step+1)) :- 
+   +m0_Tape+_fbf(+abdul11_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   position > right,
+    _tmp_0 = (step+1),
+   +abdul11_b_s = "b",
+   TapeLimits+_fff(step,_,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [34:0-34:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_20_delta_m0_Tape_fbf->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_20_delta_m0_Tape_fbf_op_ctxt,
+                                    rel_20_delta_m0_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            Tuple<RamDomain, 1> lower{{ramBitCast(RamSigned(6))}};
+                            Tuple<RamDomain, 1> upper{{ramBitCast(RamSigned(6))}};
+                            auto range = rel_20_delta_m0_Tape_fbf->lowerUpperRange_1(
+                                    lower, upper, READ_OP_CONTEXT(rel_20_delta_m0_Tape_fbf_op_ctxt));
+                            for (const auto& env0 : range) {
+                                for (const auto& env1 : *rel_64_Configuration_fff) {
+                                    if (!(rel_35_delta_Configuration_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env1[1]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> lower{{0, 0, 0}};
+                                        Tuple<RamDomain, 3> upper{{0, 0,
+                                                ramBitCast((ramBitCast<RamSigned>(env1[0]) -
+                                                            ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[1] = MIN_RAM_SIGNED;
+                                        upper[1] = MAX_RAM_SIGNED;
+                                        lower[2] = MIN_RAM_SIGNED;
+                                        auto range = rel_69_TapeLimits_fff->lowerUpperRange_002(
+                                                lower, upper, READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env1[2]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    !(rel_66_Tape_fbf->contains(
+                                                            Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                                    ramBitCast(env0[0]),
+                                                                    ramBitCast(
+                                                                            (ramBitCast<RamSigned>(env2[0]) +
+                                                                                    ramBitCast<RamSigned>(
+                                                                                            RamSigned(1))))}},
+                                                            READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt))) &&
+                                                    !(rel_38_delta_TapeLimits_fff->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env2[1]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                        ramBitCast(env0[0]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                                rel_58_new_Tape_fbf->insert(
+                                                        tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,+abdul11_b_s,(step+1)) :- 
+   +m0_Tape+_fbf(+abdul11_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   position > right,
+    _tmp_0 = (step+1),
+   +abdul11_b_s = "b",
+   TapeLimits+_fff(step,_,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [34:0-34:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_4_m0_Tape_fbf->empty()) &&
+                            !(rel_35_delta_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt, rel_4_m0_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            Tuple<RamDomain, 1> lower{{ramBitCast(RamSigned(6))}};
+                            Tuple<RamDomain, 1> upper{{ramBitCast(RamSigned(6))}};
+                            auto range = rel_4_m0_Tape_fbf->lowerUpperRange_1(
+                                    lower, upper, READ_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt));
+                            for (const auto& env0 : range) {
+                                for (const auto& env1 : *rel_35_delta_Configuration_fff) {
+                                    Tuple<RamDomain, 3> lower{{0, 0, 0}};
+                                    Tuple<RamDomain, 3> upper{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env1[0]) -
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[1] = MIN_RAM_SIGNED;
+                                    upper[1] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    auto range = rel_69_TapeLimits_fff->lowerUpperRange_002(
+                                            lower, upper, READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if ((ramBitCast<RamDomain>(env1[2]) ==
+                                                    ramBitCast<RamDomain>(
+                                                            (ramBitCast<RamSigned>(env2[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                !(rel_66_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                                ramBitCast(env0[0]),
+                                                                ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                            ramBitCast<RamSigned>(
+                                                                                    RamSigned(1))))}},
+                                                        READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt))) &&
+                                                !(rel_38_delta_TapeLimits_fff->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env2[1]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                    ramBitCast(env0[0]),
+                                                    ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))}};
+                                            rel_58_new_Tape_fbf->insert(
+                                                    tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,+abdul11_b_s,(step+1)) :- 
+   +m0_Tape+_fbf(+abdul11_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   position > right,
+    _tmp_0 = (step+1),
+   +abdul11_b_s = "b",
+   TapeLimits+_fff(step,_,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [34:0-34:1])_");
+                    if (!(rel_38_delta_TapeLimits_fff->empty()) && !(rel_4_m0_Tape_fbf->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt, rel_4_m0_Tape_fbf->createContext());
+                            Tuple<RamDomain, 1> lower{{ramBitCast(RamSigned(6))}};
+                            Tuple<RamDomain, 1> upper{{ramBitCast(RamSigned(6))}};
+                            auto range = rel_4_m0_Tape_fbf->lowerUpperRange_1(
+                                    lower, upper, READ_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt));
+                            for (const auto& env0 : range) {
+                                for (const auto& env1 : *rel_64_Configuration_fff) {
+                                    Tuple<RamDomain, 3> lower{{0, 0, 0}};
+                                    Tuple<RamDomain, 3> upper{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env1[0]) -
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[1] = MIN_RAM_SIGNED;
+                                    upper[1] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    auto range = rel_38_delta_TapeLimits_fff->lowerUpperRange_002(lower,
+                                            upper, READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if ((ramBitCast<RamDomain>(env1[2]) ==
+                                                    ramBitCast<RamDomain>(
+                                                            (ramBitCast<RamSigned>(env2[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                !(rel_66_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                                ramBitCast(env0[0]),
+                                                                ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                            ramBitCast<RamSigned>(
+                                                                                    RamSigned(1))))}},
+                                                        READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                    ramBitCast(env0[0]),
+                                                    ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))}};
+                                            rel_58_new_Tape_fbf->insert(
+                                                    tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,newSymbol,(step+1)) :- 
+   +m1_Tape+_fbf(newSymbol),
+   Transition(currentState,_,oldSymbol,newSymbol,_),
+   Tape+_fbf(position,oldSymbol,step),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [81:0-81:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_26_delta_m1_Tape_fbf->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_26_delta_m1_Tape_fbf_op_ctxt,
+                                    rel_26_delta_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_26_delta_m1_Tape_fbf) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[4] = MIN_RAM_SIGNED;
+                                upper[4] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00010(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_66_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env0[0]),
+                                                            ramBitCast((
+                                                                    ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                    READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt))) &&
+                                                !(rel_33_delta_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_33_delta_Configuration_bbb_op_ctxt))) &&
+                                                !(rel_36_delta_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[2]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                rel_62_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env0[0]),
+                                                    ramBitCast((ramBitCast<RamSigned>(env2[2]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))}};
+                                            rel_58_new_Tape_fbf->insert(
+                                                    tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,newSymbol,(step+1)) :- 
+   +m1_Tape+_fbf(newSymbol),
+   Transition(currentState,_,oldSymbol,newSymbol,_),
+   Tape+_fbf(position,oldSymbol,step),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [81:0-81:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_36_delta_Tape_fbf->empty()) &&
+                            !(rel_10_m1_Tape_fbf->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_10_m1_Tape_fbf_op_ctxt, rel_10_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_10_m1_Tape_fbf) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[4] = MIN_RAM_SIGNED;
+                                upper[4] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00010(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_33_delta_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(
+                                                            rel_33_delta_Configuration_bbb_op_ctxt))) &&
+                                                !(rel_66_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env0[0]),
+                                                                ramBitCast((ramBitCast<RamSigned>(env2[2]) +
+                                                                            ramBitCast<RamSigned>(
+                                                                                    RamSigned(1))))}},
+                                                        READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt))) &&
+                                                rel_62_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env0[0]),
+                                                    ramBitCast((ramBitCast<RamSigned>(env2[2]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))}};
+                                            rel_58_new_Tape_fbf->insert(
+                                                    tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,newSymbol,(step+1)) :- 
+   +m1_Tape+_fbf(newSymbol),
+   Transition(currentState,_,oldSymbol,newSymbol,_),
+   Tape+_fbf(position,oldSymbol,step),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [81:0-81:1])_");
+                    if (!(rel_33_delta_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_10_m1_Tape_fbf->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_10_m1_Tape_fbf_op_ctxt, rel_10_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_10_m1_Tape_fbf) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[4] = MIN_RAM_SIGNED;
+                                upper[4] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00010(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (rel_33_delta_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(
+                                                            rel_33_delta_Configuration_bbb_op_ctxt)) &&
+                                                !(rel_66_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env0[0]),
+                                                                ramBitCast((ramBitCast<RamSigned>(env2[2]) +
+                                                                            ramBitCast<RamSigned>(
+                                                                                    RamSigned(1))))}},
+                                                        READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env0[0]),
+                                                    ramBitCast((ramBitCast<RamSigned>(env2[2]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))}};
+                                            rel_58_new_Tape_fbf->insert(
+                                                    tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,symbol,(step+1)) :- 
+   +m1_Tape+_fbf(symbol),
+   Tape+_fbf(position,symbol,step),
+   position != writePosition,
+   Configuration+_ffb(writePosition,_,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [84:0-84:1])_");
+                    if (!(rel_63_Configuration_ffb->empty()) && !(rel_26_delta_m1_Tape_fbf->empty()) &&
+                            !(rel_66_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_34_delta_Configuration_ffb_op_ctxt,
+                                    rel_34_delta_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_26_delta_m1_Tape_fbf_op_ctxt,
+                                    rel_26_delta_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_26_delta_m1_Tape_fbf) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_36_delta_Tape_fbf->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                            !(rel_66_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]),
+                                                            ramBitCast((
+                                                                    ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                    READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> lower{{0, 0, ramBitCast(env1[2])}};
+                                        Tuple<RamDomain, 3> upper{{0, 0, ramBitCast(env1[2])}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[1] = MIN_RAM_SIGNED;
+                                        upper[1] = MAX_RAM_SIGNED;
+                                        auto range = rel_63_Configuration_ffb->lowerUpperRange_001(lower,
+                                                upper, READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env1[0]) !=
+                                                        ramBitCast<RamDomain>(env2[0])) &&
+                                                    !(rel_34_delta_Configuration_ffb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env2[1]),
+                                                                            ramBitCast(env1[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_34_delta_Configuration_ffb_op_ctxt)))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                        ramBitCast(env0[0]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                                rel_58_new_Tape_fbf->insert(
+                                                        tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                                break;
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,symbol,(step+1)) :- 
+   +m1_Tape+_fbf(symbol),
+   Tape+_fbf(position,symbol,step),
+   position != writePosition,
+   Configuration+_ffb(writePosition,_,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [84:0-84:1])_");
+                    if (!(rel_63_Configuration_ffb->empty()) && !(rel_10_m1_Tape_fbf->empty()) &&
+                            !(rel_36_delta_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_34_delta_Configuration_ffb_op_ctxt,
+                                    rel_34_delta_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_10_m1_Tape_fbf_op_ctxt, rel_10_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_10_m1_Tape_fbf) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_66_Tape_fbf->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> lower{{0, 0, ramBitCast(env1[2])}};
+                                        Tuple<RamDomain, 3> upper{{0, 0, ramBitCast(env1[2])}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[1] = MIN_RAM_SIGNED;
+                                        upper[1] = MAX_RAM_SIGNED;
+                                        auto range = rel_63_Configuration_ffb->lowerUpperRange_001(lower,
+                                                upper, READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env1[0]) !=
+                                                        ramBitCast<RamDomain>(env2[0])) &&
+                                                    !(rel_34_delta_Configuration_ffb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env2[1]),
+                                                                            ramBitCast(env1[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_34_delta_Configuration_ffb_op_ctxt)))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                        ramBitCast(env0[0]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                                rel_58_new_Tape_fbf->insert(
+                                                        tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                                break;
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,symbol,(step+1)) :- 
+   +m1_Tape+_fbf(symbol),
+   Tape+_fbf(position,symbol,step),
+   position != writePosition,
+   Configuration+_ffb(writePosition,_,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [84:0-84:1])_");
+                    if (!(rel_34_delta_Configuration_ffb->empty()) && !(rel_10_m1_Tape_fbf->empty()) &&
+                            !(rel_66_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_34_delta_Configuration_ffb_op_ctxt,
+                                    rel_34_delta_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_10_m1_Tape_fbf_op_ctxt, rel_10_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_10_m1_Tape_fbf) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_66_Tape_fbf->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> lower{{0, 0, ramBitCast(env1[2])}};
+                                        Tuple<RamDomain, 3> upper{{0, 0, ramBitCast(env1[2])}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[1] = MIN_RAM_SIGNED;
+                                        upper[1] = MAX_RAM_SIGNED;
+                                        auto range = rel_34_delta_Configuration_ffb->lowerUpperRange_001(
+                                                lower, upper,
+                                                READ_OP_CONTEXT(rel_34_delta_Configuration_ffb_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env1[0]) !=
+                                                        ramBitCast<RamDomain>(env2[0]))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                        ramBitCast(env0[0]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                                rel_58_new_Tape_fbf->insert(
+                                                        tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                                break;
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,+abdul6_b_s,(step+1)) :- 
+   +m1_Tape+_fbf(+abdul6_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   position < left,
+    _tmp_0 = (step+1),
+   +abdul6_b_s = "b",
+   TapeLimits+_fff(step,left,_).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [87:0-87:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_26_delta_m1_Tape_fbf->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_26_delta_m1_Tape_fbf_op_ctxt,
+                                    rel_26_delta_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            Tuple<RamDomain, 1> lower{{ramBitCast(RamSigned(6))}};
+                            Tuple<RamDomain, 1> upper{{ramBitCast(RamSigned(6))}};
+                            auto range = rel_26_delta_m1_Tape_fbf->lowerUpperRange_1(
+                                    lower, upper, READ_OP_CONTEXT(rel_26_delta_m1_Tape_fbf_op_ctxt));
+                            for (const auto& env0 : range) {
+                                for (const auto& env1 : *rel_64_Configuration_fff) {
+                                    if (!(rel_35_delta_Configuration_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env1[1]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt)))) {
+                                        for (const auto& env2 : *rel_69_TapeLimits_fff) {
+                                            if ((ramBitCast<RamSigned>(env2[1]) >=
+                                                        ramBitCast<RamSigned>((
+                                                                ramBitCast<RamSigned>(env1[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    (ramBitCast<RamDomain>(env1[2]) ==
+                                                            ramBitCast<RamDomain>((
+                                                                    ramBitCast<RamSigned>(env2[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    !(rel_66_Tape_fbf->contains(
+                                                            Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                                    ramBitCast(env0[0]),
+                                                                    ramBitCast(
+                                                                            (ramBitCast<RamSigned>(env2[0]) +
+                                                                                    ramBitCast<RamSigned>(
+                                                                                            RamSigned(1))))}},
+                                                            READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt))) &&
+                                                    !(rel_38_delta_TapeLimits_fff->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env2[1]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                        ramBitCast(env0[0]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                                rel_58_new_Tape_fbf->insert(
+                                                        tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,+abdul6_b_s,(step+1)) :- 
+   +m1_Tape+_fbf(+abdul6_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   position < left,
+    _tmp_0 = (step+1),
+   +abdul6_b_s = "b",
+   TapeLimits+_fff(step,left,_).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [87:0-87:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_10_m1_Tape_fbf->empty()) &&
+                            !(rel_35_delta_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_10_m1_Tape_fbf_op_ctxt, rel_10_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            Tuple<RamDomain, 1> lower{{ramBitCast(RamSigned(6))}};
+                            Tuple<RamDomain, 1> upper{{ramBitCast(RamSigned(6))}};
+                            auto range = rel_10_m1_Tape_fbf->lowerUpperRange_1(
+                                    lower, upper, READ_OP_CONTEXT(rel_10_m1_Tape_fbf_op_ctxt));
+                            for (const auto& env0 : range) {
+                                for (const auto& env1 : *rel_35_delta_Configuration_fff) {
+                                    for (const auto& env2 : *rel_69_TapeLimits_fff) {
+                                        if ((ramBitCast<RamSigned>(env2[1]) >=
+                                                    ramBitCast<RamSigned>(
+                                                            (ramBitCast<RamSigned>(env1[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                (ramBitCast<RamDomain>(env1[2]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                !(rel_66_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                                ramBitCast(env0[0]),
+                                                                ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                            ramBitCast<RamSigned>(
+                                                                                    RamSigned(1))))}},
+                                                        READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt))) &&
+                                                !(rel_38_delta_TapeLimits_fff->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env2[1]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                    ramBitCast(env0[0]),
+                                                    ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))}};
+                                            rel_58_new_Tape_fbf->insert(
+                                                    tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,+abdul6_b_s,(step+1)) :- 
+   +m1_Tape+_fbf(+abdul6_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   position < left,
+    _tmp_0 = (step+1),
+   +abdul6_b_s = "b",
+   TapeLimits+_fff(step,left,_).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [87:0-87:1])_");
+                    if (!(rel_38_delta_TapeLimits_fff->empty()) && !(rel_10_m1_Tape_fbf->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_10_m1_Tape_fbf_op_ctxt, rel_10_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            Tuple<RamDomain, 1> lower{{ramBitCast(RamSigned(6))}};
+                            Tuple<RamDomain, 1> upper{{ramBitCast(RamSigned(6))}};
+                            auto range = rel_10_m1_Tape_fbf->lowerUpperRange_1(
+                                    lower, upper, READ_OP_CONTEXT(rel_10_m1_Tape_fbf_op_ctxt));
+                            for (const auto& env0 : range) {
+                                for (const auto& env1 : *rel_64_Configuration_fff) {
+                                    for (const auto& env2 : *rel_38_delta_TapeLimits_fff) {
+                                        if ((ramBitCast<RamSigned>(env2[1]) >=
+                                                    ramBitCast<RamSigned>(
+                                                            (ramBitCast<RamSigned>(env1[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                (ramBitCast<RamDomain>(env1[2]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                !(rel_66_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                                ramBitCast(env0[0]),
+                                                                ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                            ramBitCast<RamSigned>(
+                                                                                    RamSigned(1))))}},
+                                                        READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                    ramBitCast(env0[0]),
+                                                    ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))}};
+                                            rel_58_new_Tape_fbf->insert(
+                                                    tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,+abdul11_b_s,(step+1)) :- 
+   +m1_Tape+_fbf(+abdul11_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   position > right,
+    _tmp_0 = (step+1),
+   +abdul11_b_s = "b",
+   TapeLimits+_fff(step,_,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [90:0-90:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_26_delta_m1_Tape_fbf->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_26_delta_m1_Tape_fbf_op_ctxt,
+                                    rel_26_delta_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            Tuple<RamDomain, 1> lower{{ramBitCast(RamSigned(6))}};
+                            Tuple<RamDomain, 1> upper{{ramBitCast(RamSigned(6))}};
+                            auto range = rel_26_delta_m1_Tape_fbf->lowerUpperRange_1(
+                                    lower, upper, READ_OP_CONTEXT(rel_26_delta_m1_Tape_fbf_op_ctxt));
+                            for (const auto& env0 : range) {
+                                for (const auto& env1 : *rel_64_Configuration_fff) {
+                                    if (!(rel_35_delta_Configuration_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env1[1]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> lower{{0, 0, 0}};
+                                        Tuple<RamDomain, 3> upper{{0, 0,
+                                                ramBitCast((ramBitCast<RamSigned>(env1[0]) -
+                                                            ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[1] = MIN_RAM_SIGNED;
+                                        upper[1] = MAX_RAM_SIGNED;
+                                        lower[2] = MIN_RAM_SIGNED;
+                                        auto range = rel_69_TapeLimits_fff->lowerUpperRange_002(
+                                                lower, upper, READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env1[2]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    !(rel_66_Tape_fbf->contains(
+                                                            Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                                    ramBitCast(env0[0]),
+                                                                    ramBitCast(
+                                                                            (ramBitCast<RamSigned>(env2[0]) +
+                                                                                    ramBitCast<RamSigned>(
+                                                                                            RamSigned(1))))}},
+                                                            READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt))) &&
+                                                    !(rel_38_delta_TapeLimits_fff->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env2[1]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                        ramBitCast(env0[0]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                                rel_58_new_Tape_fbf->insert(
+                                                        tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,+abdul11_b_s,(step+1)) :- 
+   +m1_Tape+_fbf(+abdul11_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   position > right,
+    _tmp_0 = (step+1),
+   +abdul11_b_s = "b",
+   TapeLimits+_fff(step,_,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [90:0-90:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_10_m1_Tape_fbf->empty()) &&
+                            !(rel_35_delta_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_10_m1_Tape_fbf_op_ctxt, rel_10_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            Tuple<RamDomain, 1> lower{{ramBitCast(RamSigned(6))}};
+                            Tuple<RamDomain, 1> upper{{ramBitCast(RamSigned(6))}};
+                            auto range = rel_10_m1_Tape_fbf->lowerUpperRange_1(
+                                    lower, upper, READ_OP_CONTEXT(rel_10_m1_Tape_fbf_op_ctxt));
+                            for (const auto& env0 : range) {
+                                for (const auto& env1 : *rel_35_delta_Configuration_fff) {
+                                    Tuple<RamDomain, 3> lower{{0, 0, 0}};
+                                    Tuple<RamDomain, 3> upper{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env1[0]) -
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[1] = MIN_RAM_SIGNED;
+                                    upper[1] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    auto range = rel_69_TapeLimits_fff->lowerUpperRange_002(
+                                            lower, upper, READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if ((ramBitCast<RamDomain>(env1[2]) ==
+                                                    ramBitCast<RamDomain>(
+                                                            (ramBitCast<RamSigned>(env2[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                !(rel_66_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                                ramBitCast(env0[0]),
+                                                                ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                            ramBitCast<RamSigned>(
+                                                                                    RamSigned(1))))}},
+                                                        READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt))) &&
+                                                !(rel_38_delta_TapeLimits_fff->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env2[1]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                    ramBitCast(env0[0]),
+                                                    ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))}};
+                                            rel_58_new_Tape_fbf->insert(
+                                                    tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,+abdul11_b_s,(step+1)) :- 
+   +m1_Tape+_fbf(+abdul11_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   position > right,
+    _tmp_0 = (step+1),
+   +abdul11_b_s = "b",
+   TapeLimits+_fff(step,_,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [90:0-90:1])_");
+                    if (!(rel_38_delta_TapeLimits_fff->empty()) && !(rel_10_m1_Tape_fbf->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_10_m1_Tape_fbf_op_ctxt, rel_10_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            Tuple<RamDomain, 1> lower{{ramBitCast(RamSigned(6))}};
+                            Tuple<RamDomain, 1> upper{{ramBitCast(RamSigned(6))}};
+                            auto range = rel_10_m1_Tape_fbf->lowerUpperRange_1(
+                                    lower, upper, READ_OP_CONTEXT(rel_10_m1_Tape_fbf_op_ctxt));
+                            for (const auto& env0 : range) {
+                                for (const auto& env1 : *rel_64_Configuration_fff) {
+                                    Tuple<RamDomain, 3> lower{{0, 0, 0}};
+                                    Tuple<RamDomain, 3> upper{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env1[0]) -
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[1] = MIN_RAM_SIGNED;
+                                    upper[1] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    auto range = rel_38_delta_TapeLimits_fff->lowerUpperRange_002(lower,
+                                            upper, READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if ((ramBitCast<RamDomain>(env1[2]) ==
+                                                    ramBitCast<RamDomain>(
+                                                            (ramBitCast<RamSigned>(env2[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                !(rel_66_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                                ramBitCast(env0[0]),
+                                                                ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                            ramBitCast<RamSigned>(
+                                                                                    RamSigned(1))))}},
+                                                        READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                    ramBitCast(env0[0]),
+                                                    ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))}};
+                                            rel_58_new_Tape_fbf->insert(
+                                                    tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,newSymbol,(step+1)) :- 
+   +m2_Tape+_fbf(newSymbol),
+   Transition(currentState,_,oldSymbol,newSymbol,_),
+   Tape+_fbf(position,oldSymbol,step),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [136:0-136:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_31_delta_m2_Tape_fbf->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_31_delta_m2_Tape_fbf_op_ctxt,
+                                    rel_31_delta_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_31_delta_m2_Tape_fbf) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[4] = MIN_RAM_SIGNED;
+                                upper[4] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00010(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_66_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env0[0]),
+                                                            ramBitCast((
+                                                                    ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                    READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt))) &&
+                                                !(rel_33_delta_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_33_delta_Configuration_bbb_op_ctxt))) &&
+                                                !(rel_36_delta_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[2]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                rel_62_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env0[0]),
+                                                    ramBitCast((ramBitCast<RamSigned>(env2[2]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))}};
+                                            rel_58_new_Tape_fbf->insert(
+                                                    tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,newSymbol,(step+1)) :- 
+   +m2_Tape+_fbf(newSymbol),
+   Transition(currentState,_,oldSymbol,newSymbol,_),
+   Tape+_fbf(position,oldSymbol,step),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [136:0-136:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_36_delta_Tape_fbf->empty()) &&
+                            !(rel_15_m2_Tape_fbf->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_15_m2_Tape_fbf_op_ctxt, rel_15_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_15_m2_Tape_fbf) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[4] = MIN_RAM_SIGNED;
+                                upper[4] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00010(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_33_delta_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(
+                                                            rel_33_delta_Configuration_bbb_op_ctxt))) &&
+                                                !(rel_66_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env0[0]),
+                                                                ramBitCast((ramBitCast<RamSigned>(env2[2]) +
+                                                                            ramBitCast<RamSigned>(
+                                                                                    RamSigned(1))))}},
+                                                        READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt))) &&
+                                                rel_62_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env0[0]),
+                                                    ramBitCast((ramBitCast<RamSigned>(env2[2]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))}};
+                                            rel_58_new_Tape_fbf->insert(
+                                                    tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,newSymbol,(step+1)) :- 
+   +m2_Tape+_fbf(newSymbol),
+   Transition(currentState,_,oldSymbol,newSymbol,_),
+   Tape+_fbf(position,oldSymbol,step),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [136:0-136:1])_");
+                    if (!(rel_33_delta_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_15_m2_Tape_fbf->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_15_m2_Tape_fbf_op_ctxt, rel_15_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_15_m2_Tape_fbf) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[4] = MIN_RAM_SIGNED;
+                                upper[4] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00010(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (rel_33_delta_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(
+                                                            rel_33_delta_Configuration_bbb_op_ctxt)) &&
+                                                !(rel_66_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env0[0]),
+                                                                ramBitCast((ramBitCast<RamSigned>(env2[2]) +
+                                                                            ramBitCast<RamSigned>(
+                                                                                    RamSigned(1))))}},
+                                                        READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env0[0]),
+                                                    ramBitCast((ramBitCast<RamSigned>(env2[2]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))}};
+                                            rel_58_new_Tape_fbf->insert(
+                                                    tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,symbol,(step+1)) :- 
+   +m2_Tape+_fbf(symbol),
+   Tape+_fbf(position,symbol,step),
+   position != writePosition,
+   Configuration+_ffb(writePosition,_,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [139:0-139:1])_");
+                    if (!(rel_63_Configuration_ffb->empty()) && !(rel_31_delta_m2_Tape_fbf->empty()) &&
+                            !(rel_66_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_34_delta_Configuration_ffb_op_ctxt,
+                                    rel_34_delta_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_31_delta_m2_Tape_fbf_op_ctxt,
+                                    rel_31_delta_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_31_delta_m2_Tape_fbf) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_36_delta_Tape_fbf->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                            !(rel_66_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]),
+                                                            ramBitCast((
+                                                                    ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                    READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> lower{{0, 0, ramBitCast(env1[2])}};
+                                        Tuple<RamDomain, 3> upper{{0, 0, ramBitCast(env1[2])}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[1] = MIN_RAM_SIGNED;
+                                        upper[1] = MAX_RAM_SIGNED;
+                                        auto range = rel_63_Configuration_ffb->lowerUpperRange_001(lower,
+                                                upper, READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env1[0]) !=
+                                                        ramBitCast<RamDomain>(env2[0])) &&
+                                                    !(rel_34_delta_Configuration_ffb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env2[1]),
+                                                                            ramBitCast(env1[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_34_delta_Configuration_ffb_op_ctxt)))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                        ramBitCast(env0[0]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                                rel_58_new_Tape_fbf->insert(
+                                                        tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                                break;
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,symbol,(step+1)) :- 
+   +m2_Tape+_fbf(symbol),
+   Tape+_fbf(position,symbol,step),
+   position != writePosition,
+   Configuration+_ffb(writePosition,_,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [139:0-139:1])_");
+                    if (!(rel_63_Configuration_ffb->empty()) && !(rel_15_m2_Tape_fbf->empty()) &&
+                            !(rel_36_delta_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_34_delta_Configuration_ffb_op_ctxt,
+                                    rel_34_delta_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_15_m2_Tape_fbf_op_ctxt, rel_15_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_15_m2_Tape_fbf) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_66_Tape_fbf->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> lower{{0, 0, ramBitCast(env1[2])}};
+                                        Tuple<RamDomain, 3> upper{{0, 0, ramBitCast(env1[2])}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[1] = MIN_RAM_SIGNED;
+                                        upper[1] = MAX_RAM_SIGNED;
+                                        auto range = rel_63_Configuration_ffb->lowerUpperRange_001(lower,
+                                                upper, READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env1[0]) !=
+                                                        ramBitCast<RamDomain>(env2[0])) &&
+                                                    !(rel_34_delta_Configuration_ffb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env2[1]),
+                                                                            ramBitCast(env1[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_34_delta_Configuration_ffb_op_ctxt)))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                        ramBitCast(env0[0]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                                rel_58_new_Tape_fbf->insert(
+                                                        tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                                break;
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,symbol,(step+1)) :- 
+   +m2_Tape+_fbf(symbol),
+   Tape+_fbf(position,symbol,step),
+   position != writePosition,
+   Configuration+_ffb(writePosition,_,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [139:0-139:1])_");
+                    if (!(rel_34_delta_Configuration_ffb->empty()) && !(rel_15_m2_Tape_fbf->empty()) &&
+                            !(rel_66_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_34_delta_Configuration_ffb_op_ctxt,
+                                    rel_34_delta_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_15_m2_Tape_fbf_op_ctxt, rel_15_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_15_m2_Tape_fbf) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_66_Tape_fbf->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> lower{{0, 0, ramBitCast(env1[2])}};
+                                        Tuple<RamDomain, 3> upper{{0, 0, ramBitCast(env1[2])}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[1] = MIN_RAM_SIGNED;
+                                        upper[1] = MAX_RAM_SIGNED;
+                                        auto range = rel_34_delta_Configuration_ffb->lowerUpperRange_001(
+                                                lower, upper,
+                                                READ_OP_CONTEXT(rel_34_delta_Configuration_ffb_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env1[0]) !=
+                                                        ramBitCast<RamDomain>(env2[0]))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                        ramBitCast(env0[0]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                                rel_58_new_Tape_fbf->insert(
+                                                        tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                                break;
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,+abdul6_b_s,(step+1)) :- 
+   +m2_Tape+_fbf(+abdul6_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   position < left,
+    _tmp_0 = (step+1),
+   +abdul6_b_s = "b",
+   TapeLimits+_fff(step,left,_).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [142:0-142:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_31_delta_m2_Tape_fbf->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_31_delta_m2_Tape_fbf_op_ctxt,
+                                    rel_31_delta_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            Tuple<RamDomain, 1> lower{{ramBitCast(RamSigned(6))}};
+                            Tuple<RamDomain, 1> upper{{ramBitCast(RamSigned(6))}};
+                            auto range = rel_31_delta_m2_Tape_fbf->lowerUpperRange_1(
+                                    lower, upper, READ_OP_CONTEXT(rel_31_delta_m2_Tape_fbf_op_ctxt));
+                            for (const auto& env0 : range) {
+                                for (const auto& env1 : *rel_64_Configuration_fff) {
+                                    if (!(rel_35_delta_Configuration_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env1[1]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt)))) {
+                                        for (const auto& env2 : *rel_69_TapeLimits_fff) {
+                                            if ((ramBitCast<RamSigned>(env2[1]) >=
+                                                        ramBitCast<RamSigned>((
+                                                                ramBitCast<RamSigned>(env1[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    (ramBitCast<RamDomain>(env1[2]) ==
+                                                            ramBitCast<RamDomain>((
+                                                                    ramBitCast<RamSigned>(env2[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    !(rel_66_Tape_fbf->contains(
+                                                            Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                                    ramBitCast(env0[0]),
+                                                                    ramBitCast(
+                                                                            (ramBitCast<RamSigned>(env2[0]) +
+                                                                                    ramBitCast<RamSigned>(
+                                                                                            RamSigned(1))))}},
+                                                            READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt))) &&
+                                                    !(rel_38_delta_TapeLimits_fff->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env2[1]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                        ramBitCast(env0[0]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                                rel_58_new_Tape_fbf->insert(
+                                                        tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,+abdul6_b_s,(step+1)) :- 
+   +m2_Tape+_fbf(+abdul6_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   position < left,
+    _tmp_0 = (step+1),
+   +abdul6_b_s = "b",
+   TapeLimits+_fff(step,left,_).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [142:0-142:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_15_m2_Tape_fbf->empty()) &&
+                            !(rel_35_delta_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_15_m2_Tape_fbf_op_ctxt, rel_15_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            Tuple<RamDomain, 1> lower{{ramBitCast(RamSigned(6))}};
+                            Tuple<RamDomain, 1> upper{{ramBitCast(RamSigned(6))}};
+                            auto range = rel_15_m2_Tape_fbf->lowerUpperRange_1(
+                                    lower, upper, READ_OP_CONTEXT(rel_15_m2_Tape_fbf_op_ctxt));
+                            for (const auto& env0 : range) {
+                                for (const auto& env1 : *rel_35_delta_Configuration_fff) {
+                                    for (const auto& env2 : *rel_69_TapeLimits_fff) {
+                                        if ((ramBitCast<RamSigned>(env2[1]) >=
+                                                    ramBitCast<RamSigned>(
+                                                            (ramBitCast<RamSigned>(env1[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                (ramBitCast<RamDomain>(env1[2]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                !(rel_66_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                                ramBitCast(env0[0]),
+                                                                ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                            ramBitCast<RamSigned>(
+                                                                                    RamSigned(1))))}},
+                                                        READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt))) &&
+                                                !(rel_38_delta_TapeLimits_fff->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env2[1]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                    ramBitCast(env0[0]),
+                                                    ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))}};
+                                            rel_58_new_Tape_fbf->insert(
+                                                    tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,+abdul6_b_s,(step+1)) :- 
+   +m2_Tape+_fbf(+abdul6_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   position < left,
+    _tmp_0 = (step+1),
+   +abdul6_b_s = "b",
+   TapeLimits+_fff(step,left,_).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [142:0-142:1])_");
+                    if (!(rel_38_delta_TapeLimits_fff->empty()) && !(rel_15_m2_Tape_fbf->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_15_m2_Tape_fbf_op_ctxt, rel_15_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            Tuple<RamDomain, 1> lower{{ramBitCast(RamSigned(6))}};
+                            Tuple<RamDomain, 1> upper{{ramBitCast(RamSigned(6))}};
+                            auto range = rel_15_m2_Tape_fbf->lowerUpperRange_1(
+                                    lower, upper, READ_OP_CONTEXT(rel_15_m2_Tape_fbf_op_ctxt));
+                            for (const auto& env0 : range) {
+                                for (const auto& env1 : *rel_64_Configuration_fff) {
+                                    for (const auto& env2 : *rel_38_delta_TapeLimits_fff) {
+                                        if ((ramBitCast<RamSigned>(env2[1]) >=
+                                                    ramBitCast<RamSigned>(
+                                                            (ramBitCast<RamSigned>(env1[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                (ramBitCast<RamDomain>(env1[2]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                !(rel_66_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                                ramBitCast(env0[0]),
+                                                                ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                            ramBitCast<RamSigned>(
+                                                                                    RamSigned(1))))}},
+                                                        READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                    ramBitCast(env0[0]),
+                                                    ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))}};
+                                            rel_58_new_Tape_fbf->insert(
+                                                    tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,+abdul11_b_s,(step+1)) :- 
+   +m2_Tape+_fbf(+abdul11_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   position > right,
+    _tmp_0 = (step+1),
+   +abdul11_b_s = "b",
+   TapeLimits+_fff(step,_,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [145:0-145:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_31_delta_m2_Tape_fbf->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_31_delta_m2_Tape_fbf_op_ctxt,
+                                    rel_31_delta_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            Tuple<RamDomain, 1> lower{{ramBitCast(RamSigned(6))}};
+                            Tuple<RamDomain, 1> upper{{ramBitCast(RamSigned(6))}};
+                            auto range = rel_31_delta_m2_Tape_fbf->lowerUpperRange_1(
+                                    lower, upper, READ_OP_CONTEXT(rel_31_delta_m2_Tape_fbf_op_ctxt));
+                            for (const auto& env0 : range) {
+                                for (const auto& env1 : *rel_64_Configuration_fff) {
+                                    if (!(rel_35_delta_Configuration_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env1[1]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> lower{{0, 0, 0}};
+                                        Tuple<RamDomain, 3> upper{{0, 0,
+                                                ramBitCast((ramBitCast<RamSigned>(env1[0]) -
+                                                            ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[1] = MIN_RAM_SIGNED;
+                                        upper[1] = MAX_RAM_SIGNED;
+                                        lower[2] = MIN_RAM_SIGNED;
+                                        auto range = rel_69_TapeLimits_fff->lowerUpperRange_002(
+                                                lower, upper, READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env1[2]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    !(rel_66_Tape_fbf->contains(
+                                                            Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                                    ramBitCast(env0[0]),
+                                                                    ramBitCast(
+                                                                            (ramBitCast<RamSigned>(env2[0]) +
+                                                                                    ramBitCast<RamSigned>(
+                                                                                            RamSigned(1))))}},
+                                                            READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt))) &&
+                                                    !(rel_38_delta_TapeLimits_fff->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env2[1]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                        ramBitCast(env0[0]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                                rel_58_new_Tape_fbf->insert(
+                                                        tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,+abdul11_b_s,(step+1)) :- 
+   +m2_Tape+_fbf(+abdul11_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   position > right,
+    _tmp_0 = (step+1),
+   +abdul11_b_s = "b",
+   TapeLimits+_fff(step,_,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [145:0-145:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_15_m2_Tape_fbf->empty()) &&
+                            !(rel_35_delta_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_15_m2_Tape_fbf_op_ctxt, rel_15_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            Tuple<RamDomain, 1> lower{{ramBitCast(RamSigned(6))}};
+                            Tuple<RamDomain, 1> upper{{ramBitCast(RamSigned(6))}};
+                            auto range = rel_15_m2_Tape_fbf->lowerUpperRange_1(
+                                    lower, upper, READ_OP_CONTEXT(rel_15_m2_Tape_fbf_op_ctxt));
+                            for (const auto& env0 : range) {
+                                for (const auto& env1 : *rel_35_delta_Configuration_fff) {
+                                    Tuple<RamDomain, 3> lower{{0, 0, 0}};
+                                    Tuple<RamDomain, 3> upper{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env1[0]) -
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[1] = MIN_RAM_SIGNED;
+                                    upper[1] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    auto range = rel_69_TapeLimits_fff->lowerUpperRange_002(
+                                            lower, upper, READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if ((ramBitCast<RamDomain>(env1[2]) ==
+                                                    ramBitCast<RamDomain>(
+                                                            (ramBitCast<RamSigned>(env2[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                !(rel_66_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                                ramBitCast(env0[0]),
+                                                                ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                            ramBitCast<RamSigned>(
+                                                                                    RamSigned(1))))}},
+                                                        READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt))) &&
+                                                !(rel_38_delta_TapeLimits_fff->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env2[1]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                    ramBitCast(env0[0]),
+                                                    ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))}};
+                                            rel_58_new_Tape_fbf->insert(
+                                                    tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Tape+_fbf(position,+abdul11_b_s,(step+1)) :- 
+   +m2_Tape+_fbf(+abdul11_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   position > right,
+    _tmp_0 = (step+1),
+   +abdul11_b_s = "b",
+   TapeLimits+_fff(step,_,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [145:0-145:1])_");
+                    if (!(rel_38_delta_TapeLimits_fff->empty()) && !(rel_15_m2_Tape_fbf->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_15_m2_Tape_fbf_op_ctxt, rel_15_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            Tuple<RamDomain, 1> lower{{ramBitCast(RamSigned(6))}};
+                            Tuple<RamDomain, 1> upper{{ramBitCast(RamSigned(6))}};
+                            auto range = rel_15_m2_Tape_fbf->lowerUpperRange_1(
+                                    lower, upper, READ_OP_CONTEXT(rel_15_m2_Tape_fbf_op_ctxt));
+                            for (const auto& env0 : range) {
+                                for (const auto& env1 : *rel_64_Configuration_fff) {
+                                    Tuple<RamDomain, 3> lower{{0, 0, 0}};
+                                    Tuple<RamDomain, 3> upper{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env1[0]) -
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[1] = MIN_RAM_SIGNED;
+                                    upper[1] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    auto range = rel_38_delta_TapeLimits_fff->lowerUpperRange_002(lower,
+                                            upper, READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if ((ramBitCast<RamDomain>(env1[2]) ==
+                                                    ramBitCast<RamDomain>(
+                                                            (ramBitCast<RamSigned>(env2[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                !(rel_66_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                                ramBitCast(env0[0]),
+                                                                ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                            ramBitCast<RamSigned>(
+                                                                                    RamSigned(1))))}},
+                                                        READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]),
+                                                    ramBitCast(env0[0]),
+                                                    ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))}};
+                                            rel_58_new_Tape_fbf->insert(
+                                                    tuple, READ_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                SECTION_END
+                SECTION_START
+                    ;
+                    SignalHandler::instance()->setMsg(R"_(Configuration+_bbb(arg0,arg1,arg2) :- 
+   +m0_Configuration+_bbb(arg0,arg1,arg2),
+   newedb2(arg0,arg1,arg2).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE][MAGIC_FILE] [43:0-43:1])_");
+                    if (!(rel_17_delta_m0_Configuration_bbb->empty()) && !(rel_72_newedb2->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_72_newedb2_op_ctxt, rel_72_newedb2->createContext());
+                            CREATE_OP_CONTEXT(rel_17_delta_m0_Configuration_bbb_op_ctxt,
+                                    rel_17_delta_m0_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_55_new_Configuration_bbb_op_ctxt,
+                                    rel_55_new_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_17_delta_m0_Configuration_bbb) {
+                                if (rel_72_newedb2->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_72_newedb2_op_ctxt)) &&
+                                        !(rel_62_Configuration_bbb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                        ramBitCast(env0[2])}},
+                                                READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)))) {
+                                    Tuple<RamDomain, 3> tuple{
+                                            {ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                    rel_55_new_Configuration_bbb->insert(
+                                            tuple, READ_OP_CONTEXT(rel_55_new_Configuration_bbb_op_ctxt));
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Configuration+_bbb(arg0,arg1,arg2) :- 
+   +m1_Configuration+_bbb(arg0,arg1,arg2),
+   newedb2(arg0,arg1,arg2).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE][MAGIC_FILE] [98:0-98:1])_");
+                    if (!(rel_23_delta_m1_Configuration_bbb->empty()) && !(rel_72_newedb2->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_23_delta_m1_Configuration_bbb_op_ctxt,
+                                    rel_23_delta_m1_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_72_newedb2_op_ctxt, rel_72_newedb2->createContext());
+                            CREATE_OP_CONTEXT(rel_55_new_Configuration_bbb_op_ctxt,
+                                    rel_55_new_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_23_delta_m1_Configuration_bbb) {
+                                if (rel_72_newedb2->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_72_newedb2_op_ctxt)) &&
+                                        !(rel_62_Configuration_bbb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                        ramBitCast(env0[2])}},
+                                                READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)))) {
+                                    Tuple<RamDomain, 3> tuple{
+                                            {ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                    rel_55_new_Configuration_bbb->insert(
+                                            tuple, READ_OP_CONTEXT(rel_55_new_Configuration_bbb_op_ctxt));
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Configuration+_bbb(arg0,arg1,arg2) :- 
+   +m2_Configuration+_bbb(arg0,arg1,arg2),
+   newedb2(arg0,arg1,arg2).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE][MAGIC_FILE] [153:0-153:1])_");
+                    if (!(rel_28_delta_m2_Configuration_bbb->empty()) && !(rel_72_newedb2->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_28_delta_m2_Configuration_bbb_op_ctxt,
+                                    rel_28_delta_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_72_newedb2_op_ctxt, rel_72_newedb2->createContext());
+                            CREATE_OP_CONTEXT(rel_55_new_Configuration_bbb_op_ctxt,
+                                    rel_55_new_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_28_delta_m2_Configuration_bbb) {
+                                if (rel_72_newedb2->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_72_newedb2_op_ctxt)) &&
+                                        !(rel_62_Configuration_bbb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                        ramBitCast(env0[2])}},
+                                                READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)))) {
+                                    Tuple<RamDomain, 3> tuple{
+                                            {ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                    rel_55_new_Configuration_bbb->insert(
+                                            tuple, READ_OP_CONTEXT(rel_55_new_Configuration_bbb_op_ctxt));
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_bbb(+functor7,nextState,+functor8) :- 
+   +m0_Configuration+_bbb(+functor7,nextState,+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   +functor8 = (step+1),
+   +functor7 = (position-1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [39:0-39:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_17_delta_m0_Configuration_bbb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_17_delta_m0_Configuration_bbb_op_ctxt,
+                                    rel_17_delta_m0_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_55_new_Configuration_bbb_op_ctxt,
+                                    rel_55_new_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_17_delta_m0_Configuration_bbb) {
+                                if (!(rel_62_Configuration_bbb->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)))) {
+                                    Tuple<RamDomain, 5> lower{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                    Tuple<RamDomain, 5> upper{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    lower[3] = MIN_RAM_SIGNED;
+                                    upper[3] = MAX_RAM_SIGNED;
+                                    auto range = rel_70_Transition->lowerUpperRange_01001(
+                                            lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                        Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[2] = MIN_RAM_SIGNED;
+                                        upper[2] = MAX_RAM_SIGNED;
+                                        auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                                lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env0[2]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[2]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    (ramBitCast<RamDomain>(env0[0]) ==
+                                                            ramBitCast<RamDomain>((
+                                                                    ramBitCast<RamSigned>(env2[0]) -
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    rel_62_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_62_Configuration_bbb_op_ctxt)) &&
+                                                    !(rel_36_delta_Tape_fbf->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[2]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                    !(rel_33_delta_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_33_delta_Configuration_bbb_op_ctxt)))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]),
+                                                        ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                                rel_55_new_Configuration_bbb->insert(
+                                                        tuple, READ_OP_CONTEXT(
+                                                                       rel_55_new_Configuration_bbb_op_ctxt));
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_bbb(+functor7,nextState,+functor8) :- 
+   +m0_Configuration+_bbb(+functor7,nextState,+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   +functor8 = (step+1),
+   +functor7 = (position-1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [39:0-39:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_36_delta_Tape_fbf->empty()) &&
+                            !(rel_1_m0_Configuration_bbb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt,
+                                    rel_1_m0_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_55_new_Configuration_bbb_op_ctxt,
+                                    rel_55_new_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_1_m0_Configuration_bbb) {
+                                if (!(rel_62_Configuration_bbb->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)))) {
+                                    Tuple<RamDomain, 5> lower{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                    Tuple<RamDomain, 5> upper{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    lower[3] = MIN_RAM_SIGNED;
+                                    upper[3] = MAX_RAM_SIGNED;
+                                    auto range = rel_70_Transition->lowerUpperRange_01001(
+                                            lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                        Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[2] = MIN_RAM_SIGNED;
+                                        upper[2] = MAX_RAM_SIGNED;
+                                        auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                                lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[0]) -
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    (ramBitCast<RamDomain>(env0[2]) ==
+                                                            ramBitCast<RamDomain>((
+                                                                    ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    rel_62_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_62_Configuration_bbb_op_ctxt)) &&
+                                                    !(rel_33_delta_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_33_delta_Configuration_bbb_op_ctxt)))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]),
+                                                        ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                                rel_55_new_Configuration_bbb->insert(
+                                                        tuple, READ_OP_CONTEXT(
+                                                                       rel_55_new_Configuration_bbb_op_ctxt));
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_bbb(+functor7,nextState,+functor8) :- 
+   +m0_Configuration+_bbb(+functor7,nextState,+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   +functor8 = (step+1),
+   +functor7 = (position-1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [39:0-39:1])_");
+                    if (!(rel_33_delta_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_1_m0_Configuration_bbb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt,
+                                    rel_1_m0_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_55_new_Configuration_bbb_op_ctxt,
+                                    rel_55_new_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_1_m0_Configuration_bbb) {
+                                if (!(rel_62_Configuration_bbb->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)))) {
+                                    Tuple<RamDomain, 5> lower{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                    Tuple<RamDomain, 5> upper{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    lower[3] = MIN_RAM_SIGNED;
+                                    upper[3] = MAX_RAM_SIGNED;
+                                    auto range = rel_70_Transition->lowerUpperRange_01001(
+                                            lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                        Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[2] = MIN_RAM_SIGNED;
+                                        upper[2] = MAX_RAM_SIGNED;
+                                        auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                                lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[0]) -
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    (ramBitCast<RamDomain>(env0[2]) ==
+                                                            ramBitCast<RamDomain>((
+                                                                    ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    rel_33_delta_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_33_delta_Configuration_bbb_op_ctxt))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]),
+                                                        ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                                rel_55_new_Configuration_bbb->insert(
+                                                        tuple, READ_OP_CONTEXT(
+                                                                       rel_55_new_Configuration_bbb_op_ctxt));
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_bbb(+functor9,nextState,+functor10) :- 
+   +m0_Configuration+_bbb(+functor9,nextState,+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   +functor10 = (step+1),
+   +functor9 = (position+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [42:0-42:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_17_delta_m0_Configuration_bbb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_17_delta_m0_Configuration_bbb_op_ctxt,
+                                    rel_17_delta_m0_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_55_new_Configuration_bbb_op_ctxt,
+                                    rel_55_new_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_17_delta_m0_Configuration_bbb) {
+                                if (!(rel_62_Configuration_bbb->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)))) {
+                                    Tuple<RamDomain, 5> lower{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                    Tuple<RamDomain, 5> upper{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    lower[3] = MIN_RAM_SIGNED;
+                                    upper[3] = MAX_RAM_SIGNED;
+                                    auto range = rel_70_Transition->lowerUpperRange_01001(
+                                            lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                        Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[2] = MIN_RAM_SIGNED;
+                                        upper[2] = MAX_RAM_SIGNED;
+                                        auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                                lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env0[2]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[2]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    (ramBitCast<RamDomain>(env0[0]) ==
+                                                            ramBitCast<RamDomain>((
+                                                                    ramBitCast<RamSigned>(env2[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    rel_62_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_62_Configuration_bbb_op_ctxt)) &&
+                                                    !(rel_36_delta_Tape_fbf->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[2]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                    !(rel_33_delta_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_33_delta_Configuration_bbb_op_ctxt)))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]),
+                                                        ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                                rel_55_new_Configuration_bbb->insert(
+                                                        tuple, READ_OP_CONTEXT(
+                                                                       rel_55_new_Configuration_bbb_op_ctxt));
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_bbb(+functor9,nextState,+functor10) :- 
+   +m0_Configuration+_bbb(+functor9,nextState,+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   +functor10 = (step+1),
+   +functor9 = (position+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [42:0-42:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_36_delta_Tape_fbf->empty()) &&
+                            !(rel_1_m0_Configuration_bbb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt,
+                                    rel_1_m0_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_55_new_Configuration_bbb_op_ctxt,
+                                    rel_55_new_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_1_m0_Configuration_bbb) {
+                                if (!(rel_62_Configuration_bbb->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)))) {
+                                    Tuple<RamDomain, 5> lower{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                    Tuple<RamDomain, 5> upper{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    lower[3] = MIN_RAM_SIGNED;
+                                    upper[3] = MAX_RAM_SIGNED;
+                                    auto range = rel_70_Transition->lowerUpperRange_01001(
+                                            lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                        Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[2] = MIN_RAM_SIGNED;
+                                        upper[2] = MAX_RAM_SIGNED;
+                                        auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                                lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    (ramBitCast<RamDomain>(env0[2]) ==
+                                                            ramBitCast<RamDomain>((
+                                                                    ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    rel_62_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_62_Configuration_bbb_op_ctxt)) &&
+                                                    !(rel_33_delta_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_33_delta_Configuration_bbb_op_ctxt)))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]),
+                                                        ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                                rel_55_new_Configuration_bbb->insert(
+                                                        tuple, READ_OP_CONTEXT(
+                                                                       rel_55_new_Configuration_bbb_op_ctxt));
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_bbb(+functor9,nextState,+functor10) :- 
+   +m0_Configuration+_bbb(+functor9,nextState,+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   +functor10 = (step+1),
+   +functor9 = (position+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [42:0-42:1])_");
+                    if (!(rel_33_delta_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_1_m0_Configuration_bbb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt,
+                                    rel_1_m0_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_55_new_Configuration_bbb_op_ctxt,
+                                    rel_55_new_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_1_m0_Configuration_bbb) {
+                                if (!(rel_62_Configuration_bbb->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)))) {
+                                    Tuple<RamDomain, 5> lower{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                    Tuple<RamDomain, 5> upper{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    lower[3] = MIN_RAM_SIGNED;
+                                    upper[3] = MAX_RAM_SIGNED;
+                                    auto range = rel_70_Transition->lowerUpperRange_01001(
+                                            lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                        Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[2] = MIN_RAM_SIGNED;
+                                        upper[2] = MAX_RAM_SIGNED;
+                                        auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                                lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    (ramBitCast<RamDomain>(env0[2]) ==
+                                                            ramBitCast<RamDomain>((
+                                                                    ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    rel_33_delta_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_33_delta_Configuration_bbb_op_ctxt))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]),
+                                                        ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                                rel_55_new_Configuration_bbb->insert(
+                                                        tuple, READ_OP_CONTEXT(
+                                                                       rel_55_new_Configuration_bbb_op_ctxt));
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_bbb(+functor7,nextState,+functor8) :- 
+   +m1_Configuration+_bbb(+functor7,nextState,+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   +functor8 = (step+1),
+   +functor7 = (position-1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [94:0-94:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_23_delta_m1_Configuration_bbb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_23_delta_m1_Configuration_bbb_op_ctxt,
+                                    rel_23_delta_m1_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_55_new_Configuration_bbb_op_ctxt,
+                                    rel_55_new_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_23_delta_m1_Configuration_bbb) {
+                                if (!(rel_62_Configuration_bbb->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)))) {
+                                    Tuple<RamDomain, 5> lower{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                    Tuple<RamDomain, 5> upper{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    lower[3] = MIN_RAM_SIGNED;
+                                    upper[3] = MAX_RAM_SIGNED;
+                                    auto range = rel_70_Transition->lowerUpperRange_01001(
+                                            lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                        Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[2] = MIN_RAM_SIGNED;
+                                        upper[2] = MAX_RAM_SIGNED;
+                                        auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                                lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env0[2]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[2]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    (ramBitCast<RamDomain>(env0[0]) ==
+                                                            ramBitCast<RamDomain>((
+                                                                    ramBitCast<RamSigned>(env2[0]) -
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    rel_62_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_62_Configuration_bbb_op_ctxt)) &&
+                                                    !(rel_36_delta_Tape_fbf->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[2]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                    !(rel_33_delta_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_33_delta_Configuration_bbb_op_ctxt)))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]),
+                                                        ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                                rel_55_new_Configuration_bbb->insert(
+                                                        tuple, READ_OP_CONTEXT(
+                                                                       rel_55_new_Configuration_bbb_op_ctxt));
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_bbb(+functor7,nextState,+functor8) :- 
+   +m1_Configuration+_bbb(+functor7,nextState,+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   +functor8 = (step+1),
+   +functor7 = (position-1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [94:0-94:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_36_delta_Tape_fbf->empty()) &&
+                            !(rel_7_m1_Configuration_bbb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt,
+                                    rel_7_m1_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_55_new_Configuration_bbb_op_ctxt,
+                                    rel_55_new_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_7_m1_Configuration_bbb) {
+                                if (!(rel_62_Configuration_bbb->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)))) {
+                                    Tuple<RamDomain, 5> lower{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                    Tuple<RamDomain, 5> upper{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    lower[3] = MIN_RAM_SIGNED;
+                                    upper[3] = MAX_RAM_SIGNED;
+                                    auto range = rel_70_Transition->lowerUpperRange_01001(
+                                            lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                        Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[2] = MIN_RAM_SIGNED;
+                                        upper[2] = MAX_RAM_SIGNED;
+                                        auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                                lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[0]) -
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    (ramBitCast<RamDomain>(env0[2]) ==
+                                                            ramBitCast<RamDomain>((
+                                                                    ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    rel_62_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_62_Configuration_bbb_op_ctxt)) &&
+                                                    !(rel_33_delta_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_33_delta_Configuration_bbb_op_ctxt)))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]),
+                                                        ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                                rel_55_new_Configuration_bbb->insert(
+                                                        tuple, READ_OP_CONTEXT(
+                                                                       rel_55_new_Configuration_bbb_op_ctxt));
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_bbb(+functor7,nextState,+functor8) :- 
+   +m1_Configuration+_bbb(+functor7,nextState,+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   +functor8 = (step+1),
+   +functor7 = (position-1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [94:0-94:1])_");
+                    if (!(rel_33_delta_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_7_m1_Configuration_bbb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt,
+                                    rel_7_m1_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_55_new_Configuration_bbb_op_ctxt,
+                                    rel_55_new_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_7_m1_Configuration_bbb) {
+                                if (!(rel_62_Configuration_bbb->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)))) {
+                                    Tuple<RamDomain, 5> lower{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                    Tuple<RamDomain, 5> upper{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    lower[3] = MIN_RAM_SIGNED;
+                                    upper[3] = MAX_RAM_SIGNED;
+                                    auto range = rel_70_Transition->lowerUpperRange_01001(
+                                            lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                        Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[2] = MIN_RAM_SIGNED;
+                                        upper[2] = MAX_RAM_SIGNED;
+                                        auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                                lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[0]) -
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    (ramBitCast<RamDomain>(env0[2]) ==
+                                                            ramBitCast<RamDomain>((
+                                                                    ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    rel_33_delta_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_33_delta_Configuration_bbb_op_ctxt))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]),
+                                                        ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                                rel_55_new_Configuration_bbb->insert(
+                                                        tuple, READ_OP_CONTEXT(
+                                                                       rel_55_new_Configuration_bbb_op_ctxt));
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_bbb(+functor9,nextState,+functor10) :- 
+   +m1_Configuration+_bbb(+functor9,nextState,+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   +functor10 = (step+1),
+   +functor9 = (position+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [97:0-97:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_23_delta_m1_Configuration_bbb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_23_delta_m1_Configuration_bbb_op_ctxt,
+                                    rel_23_delta_m1_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_55_new_Configuration_bbb_op_ctxt,
+                                    rel_55_new_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_23_delta_m1_Configuration_bbb) {
+                                if (!(rel_62_Configuration_bbb->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)))) {
+                                    Tuple<RamDomain, 5> lower{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                    Tuple<RamDomain, 5> upper{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    lower[3] = MIN_RAM_SIGNED;
+                                    upper[3] = MAX_RAM_SIGNED;
+                                    auto range = rel_70_Transition->lowerUpperRange_01001(
+                                            lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                        Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[2] = MIN_RAM_SIGNED;
+                                        upper[2] = MAX_RAM_SIGNED;
+                                        auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                                lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env0[2]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[2]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    (ramBitCast<RamDomain>(env0[0]) ==
+                                                            ramBitCast<RamDomain>((
+                                                                    ramBitCast<RamSigned>(env2[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    rel_62_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_62_Configuration_bbb_op_ctxt)) &&
+                                                    !(rel_36_delta_Tape_fbf->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[2]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                    !(rel_33_delta_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_33_delta_Configuration_bbb_op_ctxt)))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]),
+                                                        ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                                rel_55_new_Configuration_bbb->insert(
+                                                        tuple, READ_OP_CONTEXT(
+                                                                       rel_55_new_Configuration_bbb_op_ctxt));
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_bbb(+functor9,nextState,+functor10) :- 
+   +m1_Configuration+_bbb(+functor9,nextState,+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   +functor10 = (step+1),
+   +functor9 = (position+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [97:0-97:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_36_delta_Tape_fbf->empty()) &&
+                            !(rel_7_m1_Configuration_bbb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt,
+                                    rel_7_m1_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_55_new_Configuration_bbb_op_ctxt,
+                                    rel_55_new_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_7_m1_Configuration_bbb) {
+                                if (!(rel_62_Configuration_bbb->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)))) {
+                                    Tuple<RamDomain, 5> lower{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                    Tuple<RamDomain, 5> upper{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    lower[3] = MIN_RAM_SIGNED;
+                                    upper[3] = MAX_RAM_SIGNED;
+                                    auto range = rel_70_Transition->lowerUpperRange_01001(
+                                            lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                        Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[2] = MIN_RAM_SIGNED;
+                                        upper[2] = MAX_RAM_SIGNED;
+                                        auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                                lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    (ramBitCast<RamDomain>(env0[2]) ==
+                                                            ramBitCast<RamDomain>((
+                                                                    ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    rel_62_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_62_Configuration_bbb_op_ctxt)) &&
+                                                    !(rel_33_delta_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_33_delta_Configuration_bbb_op_ctxt)))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]),
+                                                        ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                                rel_55_new_Configuration_bbb->insert(
+                                                        tuple, READ_OP_CONTEXT(
+                                                                       rel_55_new_Configuration_bbb_op_ctxt));
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_bbb(+functor9,nextState,+functor10) :- 
+   +m1_Configuration+_bbb(+functor9,nextState,+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   +functor10 = (step+1),
+   +functor9 = (position+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [97:0-97:1])_");
+                    if (!(rel_33_delta_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_7_m1_Configuration_bbb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt,
+                                    rel_7_m1_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_55_new_Configuration_bbb_op_ctxt,
+                                    rel_55_new_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_7_m1_Configuration_bbb) {
+                                if (!(rel_62_Configuration_bbb->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)))) {
+                                    Tuple<RamDomain, 5> lower{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                    Tuple<RamDomain, 5> upper{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    lower[3] = MIN_RAM_SIGNED;
+                                    upper[3] = MAX_RAM_SIGNED;
+                                    auto range = rel_70_Transition->lowerUpperRange_01001(
+                                            lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                        Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[2] = MIN_RAM_SIGNED;
+                                        upper[2] = MAX_RAM_SIGNED;
+                                        auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                                lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    (ramBitCast<RamDomain>(env0[2]) ==
+                                                            ramBitCast<RamDomain>((
+                                                                    ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    rel_33_delta_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_33_delta_Configuration_bbb_op_ctxt))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]),
+                                                        ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                                rel_55_new_Configuration_bbb->insert(
+                                                        tuple, READ_OP_CONTEXT(
+                                                                       rel_55_new_Configuration_bbb_op_ctxt));
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_bbb(+functor7,nextState,+functor8) :- 
+   +m2_Configuration+_bbb(+functor7,nextState,+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   +functor8 = (step+1),
+   +functor7 = (position-1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [149:0-149:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_28_delta_m2_Configuration_bbb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_28_delta_m2_Configuration_bbb_op_ctxt,
+                                    rel_28_delta_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_55_new_Configuration_bbb_op_ctxt,
+                                    rel_55_new_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_28_delta_m2_Configuration_bbb) {
+                                if (!(rel_62_Configuration_bbb->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)))) {
+                                    Tuple<RamDomain, 5> lower{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                    Tuple<RamDomain, 5> upper{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    lower[3] = MIN_RAM_SIGNED;
+                                    upper[3] = MAX_RAM_SIGNED;
+                                    auto range = rel_70_Transition->lowerUpperRange_01001(
+                                            lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                        Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[2] = MIN_RAM_SIGNED;
+                                        upper[2] = MAX_RAM_SIGNED;
+                                        auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                                lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env0[2]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[2]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    (ramBitCast<RamDomain>(env0[0]) ==
+                                                            ramBitCast<RamDomain>((
+                                                                    ramBitCast<RamSigned>(env2[0]) -
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    rel_62_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_62_Configuration_bbb_op_ctxt)) &&
+                                                    !(rel_36_delta_Tape_fbf->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[2]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                    !(rel_33_delta_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_33_delta_Configuration_bbb_op_ctxt)))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]),
+                                                        ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                                rel_55_new_Configuration_bbb->insert(
+                                                        tuple, READ_OP_CONTEXT(
+                                                                       rel_55_new_Configuration_bbb_op_ctxt));
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_bbb(+functor7,nextState,+functor8) :- 
+   +m2_Configuration+_bbb(+functor7,nextState,+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   +functor8 = (step+1),
+   +functor7 = (position-1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [149:0-149:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_36_delta_Tape_fbf->empty()) &&
+                            !(rel_12_m2_Configuration_bbb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt,
+                                    rel_12_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_55_new_Configuration_bbb_op_ctxt,
+                                    rel_55_new_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_12_m2_Configuration_bbb) {
+                                if (!(rel_62_Configuration_bbb->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)))) {
+                                    Tuple<RamDomain, 5> lower{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                    Tuple<RamDomain, 5> upper{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    lower[3] = MIN_RAM_SIGNED;
+                                    upper[3] = MAX_RAM_SIGNED;
+                                    auto range = rel_70_Transition->lowerUpperRange_01001(
+                                            lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                        Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[2] = MIN_RAM_SIGNED;
+                                        upper[2] = MAX_RAM_SIGNED;
+                                        auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                                lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[0]) -
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    (ramBitCast<RamDomain>(env0[2]) ==
+                                                            ramBitCast<RamDomain>((
+                                                                    ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    rel_62_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_62_Configuration_bbb_op_ctxt)) &&
+                                                    !(rel_33_delta_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_33_delta_Configuration_bbb_op_ctxt)))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]),
+                                                        ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                                rel_55_new_Configuration_bbb->insert(
+                                                        tuple, READ_OP_CONTEXT(
+                                                                       rel_55_new_Configuration_bbb_op_ctxt));
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_bbb(+functor7,nextState,+functor8) :- 
+   +m2_Configuration+_bbb(+functor7,nextState,+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   +functor8 = (step+1),
+   +functor7 = (position-1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [149:0-149:1])_");
+                    if (!(rel_33_delta_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_12_m2_Configuration_bbb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt,
+                                    rel_12_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_55_new_Configuration_bbb_op_ctxt,
+                                    rel_55_new_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_12_m2_Configuration_bbb) {
+                                if (!(rel_62_Configuration_bbb->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)))) {
+                                    Tuple<RamDomain, 5> lower{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                    Tuple<RamDomain, 5> upper{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    lower[3] = MIN_RAM_SIGNED;
+                                    upper[3] = MAX_RAM_SIGNED;
+                                    auto range = rel_70_Transition->lowerUpperRange_01001(
+                                            lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                        Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[2] = MIN_RAM_SIGNED;
+                                        upper[2] = MAX_RAM_SIGNED;
+                                        auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                                lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[0]) -
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    (ramBitCast<RamDomain>(env0[2]) ==
+                                                            ramBitCast<RamDomain>((
+                                                                    ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    rel_33_delta_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_33_delta_Configuration_bbb_op_ctxt))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]),
+                                                        ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                                rel_55_new_Configuration_bbb->insert(
+                                                        tuple, READ_OP_CONTEXT(
+                                                                       rel_55_new_Configuration_bbb_op_ctxt));
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_bbb(+functor9,nextState,+functor10) :- 
+   +m2_Configuration+_bbb(+functor9,nextState,+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   +functor10 = (step+1),
+   +functor9 = (position+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [152:0-152:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_28_delta_m2_Configuration_bbb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_28_delta_m2_Configuration_bbb_op_ctxt,
+                                    rel_28_delta_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_55_new_Configuration_bbb_op_ctxt,
+                                    rel_55_new_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_28_delta_m2_Configuration_bbb) {
+                                if (!(rel_62_Configuration_bbb->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)))) {
+                                    Tuple<RamDomain, 5> lower{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                    Tuple<RamDomain, 5> upper{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    lower[3] = MIN_RAM_SIGNED;
+                                    upper[3] = MAX_RAM_SIGNED;
+                                    auto range = rel_70_Transition->lowerUpperRange_01001(
+                                            lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                        Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[2] = MIN_RAM_SIGNED;
+                                        upper[2] = MAX_RAM_SIGNED;
+                                        auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                                lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env0[2]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[2]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    (ramBitCast<RamDomain>(env0[0]) ==
+                                                            ramBitCast<RamDomain>((
+                                                                    ramBitCast<RamSigned>(env2[0]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    rel_62_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_62_Configuration_bbb_op_ctxt)) &&
+                                                    !(rel_36_delta_Tape_fbf->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[2]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                    !(rel_33_delta_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_33_delta_Configuration_bbb_op_ctxt)))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]),
+                                                        ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                                rel_55_new_Configuration_bbb->insert(
+                                                        tuple, READ_OP_CONTEXT(
+                                                                       rel_55_new_Configuration_bbb_op_ctxt));
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_bbb(+functor9,nextState,+functor10) :- 
+   +m2_Configuration+_bbb(+functor9,nextState,+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   +functor10 = (step+1),
+   +functor9 = (position+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [152:0-152:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_36_delta_Tape_fbf->empty()) &&
+                            !(rel_12_m2_Configuration_bbb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt,
+                                    rel_12_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_55_new_Configuration_bbb_op_ctxt,
+                                    rel_55_new_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_12_m2_Configuration_bbb) {
+                                if (!(rel_62_Configuration_bbb->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)))) {
+                                    Tuple<RamDomain, 5> lower{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                    Tuple<RamDomain, 5> upper{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    lower[3] = MIN_RAM_SIGNED;
+                                    upper[3] = MAX_RAM_SIGNED;
+                                    auto range = rel_70_Transition->lowerUpperRange_01001(
+                                            lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                        Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[2] = MIN_RAM_SIGNED;
+                                        upper[2] = MAX_RAM_SIGNED;
+                                        auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                                lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    (ramBitCast<RamDomain>(env0[2]) ==
+                                                            ramBitCast<RamDomain>((
+                                                                    ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    rel_62_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_62_Configuration_bbb_op_ctxt)) &&
+                                                    !(rel_33_delta_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_33_delta_Configuration_bbb_op_ctxt)))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]),
+                                                        ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                                rel_55_new_Configuration_bbb->insert(
+                                                        tuple, READ_OP_CONTEXT(
+                                                                       rel_55_new_Configuration_bbb_op_ctxt));
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_bbb(+functor9,nextState,+functor10) :- 
+   +m2_Configuration+_bbb(+functor9,nextState,+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   +functor10 = (step+1),
+   +functor9 = (position+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [152:0-152:1])_");
+                    if (!(rel_33_delta_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_12_m2_Configuration_bbb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt,
+                                    rel_12_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_55_new_Configuration_bbb_op_ctxt,
+                                    rel_55_new_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_12_m2_Configuration_bbb) {
+                                if (!(rel_62_Configuration_bbb->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)))) {
+                                    Tuple<RamDomain, 5> lower{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                    Tuple<RamDomain, 5> upper{
+                                            {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    lower[3] = MIN_RAM_SIGNED;
+                                    upper[3] = MAX_RAM_SIGNED;
+                                    auto range = rel_70_Transition->lowerUpperRange_01001(
+                                            lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                        Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                        lower[0] = MIN_RAM_SIGNED;
+                                        upper[0] = MAX_RAM_SIGNED;
+                                        lower[2] = MIN_RAM_SIGNED;
+                                        upper[2] = MAX_RAM_SIGNED;
+                                        auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                                lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                        for (const auto& env2 : range) {
+                                            if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                        ramBitCast<RamDomain>((
+                                                                ramBitCast<RamSigned>(env2[0]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    (ramBitCast<RamDomain>(env0[2]) ==
+                                                            ramBitCast<RamDomain>((
+                                                                    ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                    rel_33_delta_Configuration_bbb->contains(
+                                                            Tuple<RamDomain, 3>{
+                                                                    {ramBitCast(env2[0]), ramBitCast(env1[0]),
+                                                                            ramBitCast(env2[2])}},
+                                                            READ_OP_CONTEXT(
+                                                                    rel_33_delta_Configuration_bbb_op_ctxt))) {
+                                                Tuple<RamDomain, 3> tuple{{ramBitCast(env0[0]),
+                                                        ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                                rel_55_new_Configuration_bbb->insert(
+                                                        tuple, READ_OP_CONTEXT(
+                                                                       rel_55_new_Configuration_bbb_op_ctxt));
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                SECTION_END
+                SECTION_START
+                    ;
+                    SignalHandler::instance()->setMsg(R"_(Configuration+_ffb(arg0,arg1,arg2) :- 
+   +m0_Configuration+_ffb(arg2),
+   newedb2(arg0,arg1,arg2).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE][MAGIC_FILE] [51:0-51:1])_");
+                    if (!(rel_18_delta_m0_Configuration_ffb->empty()) && !(rel_72_newedb2->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_18_delta_m0_Configuration_ffb_op_ctxt,
+                                    rel_18_delta_m0_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt,
+                                    rel_56_new_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_72_newedb2_op_ctxt, rel_72_newedb2->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_18_delta_m0_Configuration_ffb) {
+                                Tuple<RamDomain, 3> lower{{0, 0, ramBitCast(env0[0])}};
+                                Tuple<RamDomain, 3> upper{{0, 0, ramBitCast(env0[0])}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                auto range = rel_72_newedb2->lowerUpperRange_001(
+                                        lower, upper, READ_OP_CONTEXT(rel_72_newedb2_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_63_Configuration_ffb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env1[1]),
+                                                        ramBitCast(env0[0])}},
+                                                READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]), ramBitCast(env1[1]),
+                                                ramBitCast(env0[0])}};
+                                        rel_56_new_Configuration_ffb->insert(
+                                                tuple, READ_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Configuration+_ffb(arg0,arg1,arg2) :- 
+   +m1_Configuration+_ffb(arg2),
+   newedb2(arg0,arg1,arg2).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE][MAGIC_FILE] [105:0-105:1])_");
+                    if (!(rel_24_delta_m1_Configuration_ffb->empty()) && !(rel_72_newedb2->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt,
+                                    rel_56_new_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_24_delta_m1_Configuration_ffb_op_ctxt,
+                                    rel_24_delta_m1_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_72_newedb2_op_ctxt, rel_72_newedb2->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_24_delta_m1_Configuration_ffb) {
+                                Tuple<RamDomain, 3> lower{{0, 0, ramBitCast(env0[0])}};
+                                Tuple<RamDomain, 3> upper{{0, 0, ramBitCast(env0[0])}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                auto range = rel_72_newedb2->lowerUpperRange_001(
+                                        lower, upper, READ_OP_CONTEXT(rel_72_newedb2_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_63_Configuration_ffb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env1[1]),
+                                                        ramBitCast(env0[0])}},
+                                                READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]), ramBitCast(env1[1]),
+                                                ramBitCast(env0[0])}};
+                                        rel_56_new_Configuration_ffb->insert(
+                                                tuple, READ_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Configuration+_ffb(arg0,arg1,arg2) :- 
+   +m2_Configuration+_ffb(arg2),
+   newedb2(arg0,arg1,arg2).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE][MAGIC_FILE] [160:0-160:1])_");
+                    if (!(rel_29_delta_m2_Configuration_ffb->empty()) && !(rel_72_newedb2->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_29_delta_m2_Configuration_ffb_op_ctxt,
+                                    rel_29_delta_m2_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt,
+                                    rel_56_new_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_72_newedb2_op_ctxt, rel_72_newedb2->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_29_delta_m2_Configuration_ffb) {
+                                Tuple<RamDomain, 3> lower{{0, 0, ramBitCast(env0[0])}};
+                                Tuple<RamDomain, 3> upper{{0, 0, ramBitCast(env0[0])}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                auto range = rel_72_newedb2->lowerUpperRange_001(
+                                        lower, upper, READ_OP_CONTEXT(rel_72_newedb2_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_63_Configuration_ffb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env1[1]),
+                                                        ramBitCast(env0[0])}},
+                                                READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]), ramBitCast(env1[1]),
+                                                ramBitCast(env0[0])}};
+                                        rel_56_new_Configuration_ffb->insert(
+                                                tuple, READ_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_ffb((position-1),nextState,+functor8) :- 
+   +m0_Configuration+_ffb(+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   +functor8 = (step+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [47:0-47:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_18_delta_m0_Configuration_ffb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_18_delta_m0_Configuration_ffb_op_ctxt,
+                                    rel_18_delta_m0_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt,
+                                    rel_56_new_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_18_delta_m0_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                    ramBitCast<RamDomain>(
+                                                            (ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                rel_62_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)) &&
+                                                !(rel_36_delta_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[2]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                !(rel_33_delta_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_33_delta_Configuration_bbb_op_ctxt))) &&
+                                                !(rel_63_Configuration_ffb->contains(
+                                                        Tuple<RamDomain, 3>{
+                                                                {ramBitCast((ramBitCast<RamSigned>(env2[0]) -
+                                                                             ramBitCast<RamSigned>(
+                                                                                     RamSigned(1)))),
+                                                                        ramBitCast(env1[1]),
+                                                                        ramBitCast(env0[0])}},
+                                                        READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env2[0]) -
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env1[1]), ramBitCast(env0[0])}};
+                                            rel_56_new_Configuration_ffb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_ffb((position-1),nextState,+functor8) :- 
+   +m0_Configuration+_ffb(+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   +functor8 = (step+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [47:0-47:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_36_delta_Tape_fbf->empty()) &&
+                            !(rel_2_m0_Configuration_ffb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_2_m0_Configuration_ffb_op_ctxt,
+                                    rel_2_m0_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt,
+                                    rel_56_new_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_2_m0_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                    ramBitCast<RamDomain>(
+                                                            (ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                rel_62_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)) &&
+                                                !(rel_63_Configuration_ffb->contains(
+                                                        Tuple<RamDomain, 3>{
+                                                                {ramBitCast((ramBitCast<RamSigned>(env2[0]) -
+                                                                             ramBitCast<RamSigned>(
+                                                                                     RamSigned(1)))),
+                                                                        ramBitCast(env1[1]),
+                                                                        ramBitCast(env0[0])}},
+                                                        READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt))) &&
+                                                !(rel_33_delta_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_33_delta_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env2[0]) -
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env1[1]), ramBitCast(env0[0])}};
+                                            rel_56_new_Configuration_ffb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_ffb((position-1),nextState,+functor8) :- 
+   +m0_Configuration+_ffb(+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   +functor8 = (step+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [47:0-47:1])_");
+                    if (!(rel_33_delta_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_2_m0_Configuration_ffb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_2_m0_Configuration_ffb_op_ctxt,
+                                    rel_2_m0_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt,
+                                    rel_56_new_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_2_m0_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                    ramBitCast<RamDomain>(
+                                                            (ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                rel_33_delta_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_33_delta_Configuration_bbb_op_ctxt)) &&
+                                                !(rel_63_Configuration_ffb->contains(
+                                                        Tuple<RamDomain, 3>{
+                                                                {ramBitCast((ramBitCast<RamSigned>(env2[0]) -
+                                                                             ramBitCast<RamSigned>(
+                                                                                     RamSigned(1)))),
+                                                                        ramBitCast(env1[1]),
+                                                                        ramBitCast(env0[0])}},
+                                                        READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env2[0]) -
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env1[1]), ramBitCast(env0[0])}};
+                                            rel_56_new_Configuration_ffb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_ffb((position+1),nextState,+functor10) :- 
+   +m0_Configuration+_ffb(+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   +functor10 = (step+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [50:0-50:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_18_delta_m0_Configuration_ffb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_18_delta_m0_Configuration_ffb_op_ctxt,
+                                    rel_18_delta_m0_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt,
+                                    rel_56_new_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_18_delta_m0_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                    ramBitCast<RamDomain>(
+                                                            (ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                rel_62_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)) &&
+                                                !(rel_36_delta_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[2]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                !(rel_33_delta_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_33_delta_Configuration_bbb_op_ctxt))) &&
+                                                !(rel_63_Configuration_ffb->contains(
+                                                        Tuple<RamDomain, 3>{
+                                                                {ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                             ramBitCast<RamSigned>(
+                                                                                     RamSigned(1)))),
+                                                                        ramBitCast(env1[1]),
+                                                                        ramBitCast(env0[0])}},
+                                                        READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env1[1]), ramBitCast(env0[0])}};
+                                            rel_56_new_Configuration_ffb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_ffb((position+1),nextState,+functor10) :- 
+   +m0_Configuration+_ffb(+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   +functor10 = (step+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [50:0-50:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_36_delta_Tape_fbf->empty()) &&
+                            !(rel_2_m0_Configuration_ffb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_2_m0_Configuration_ffb_op_ctxt,
+                                    rel_2_m0_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt,
+                                    rel_56_new_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_2_m0_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                    ramBitCast<RamDomain>(
+                                                            (ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                rel_62_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)) &&
+                                                !(rel_63_Configuration_ffb->contains(
+                                                        Tuple<RamDomain, 3>{
+                                                                {ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                             ramBitCast<RamSigned>(
+                                                                                     RamSigned(1)))),
+                                                                        ramBitCast(env1[1]),
+                                                                        ramBitCast(env0[0])}},
+                                                        READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt))) &&
+                                                !(rel_33_delta_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_33_delta_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env1[1]), ramBitCast(env0[0])}};
+                                            rel_56_new_Configuration_ffb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_ffb((position+1),nextState,+functor10) :- 
+   +m0_Configuration+_ffb(+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   +functor10 = (step+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [50:0-50:1])_");
+                    if (!(rel_33_delta_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_2_m0_Configuration_ffb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_2_m0_Configuration_ffb_op_ctxt,
+                                    rel_2_m0_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt,
+                                    rel_56_new_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_2_m0_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                    ramBitCast<RamDomain>(
+                                                            (ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                rel_33_delta_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_33_delta_Configuration_bbb_op_ctxt)) &&
+                                                !(rel_63_Configuration_ffb->contains(
+                                                        Tuple<RamDomain, 3>{
+                                                                {ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                             ramBitCast<RamSigned>(
+                                                                                     RamSigned(1)))),
+                                                                        ramBitCast(env1[1]),
+                                                                        ramBitCast(env0[0])}},
+                                                        READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env1[1]), ramBitCast(env0[0])}};
+                                            rel_56_new_Configuration_ffb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_ffb((position-1),nextState,+functor8) :- 
+   +m1_Configuration+_ffb(+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   +functor8 = (step+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [101:0-101:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_24_delta_m1_Configuration_ffb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt,
+                                    rel_56_new_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_24_delta_m1_Configuration_ffb_op_ctxt,
+                                    rel_24_delta_m1_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_24_delta_m1_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                    ramBitCast<RamDomain>(
+                                                            (ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                rel_62_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)) &&
+                                                !(rel_36_delta_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[2]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                !(rel_33_delta_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_33_delta_Configuration_bbb_op_ctxt))) &&
+                                                !(rel_63_Configuration_ffb->contains(
+                                                        Tuple<RamDomain, 3>{
+                                                                {ramBitCast((ramBitCast<RamSigned>(env2[0]) -
+                                                                             ramBitCast<RamSigned>(
+                                                                                     RamSigned(1)))),
+                                                                        ramBitCast(env1[1]),
+                                                                        ramBitCast(env0[0])}},
+                                                        READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env2[0]) -
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env1[1]), ramBitCast(env0[0])}};
+                                            rel_56_new_Configuration_ffb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_ffb((position-1),nextState,+functor8) :- 
+   +m1_Configuration+_ffb(+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   +functor8 = (step+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [101:0-101:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_36_delta_Tape_fbf->empty()) &&
+                            !(rel_8_m1_Configuration_ffb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt,
+                                    rel_56_new_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_8_m1_Configuration_ffb_op_ctxt,
+                                    rel_8_m1_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_8_m1_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                    ramBitCast<RamDomain>(
+                                                            (ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                rel_62_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)) &&
+                                                !(rel_63_Configuration_ffb->contains(
+                                                        Tuple<RamDomain, 3>{
+                                                                {ramBitCast((ramBitCast<RamSigned>(env2[0]) -
+                                                                             ramBitCast<RamSigned>(
+                                                                                     RamSigned(1)))),
+                                                                        ramBitCast(env1[1]),
+                                                                        ramBitCast(env0[0])}},
+                                                        READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt))) &&
+                                                !(rel_33_delta_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_33_delta_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env2[0]) -
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env1[1]), ramBitCast(env0[0])}};
+                                            rel_56_new_Configuration_ffb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_ffb((position-1),nextState,+functor8) :- 
+   +m1_Configuration+_ffb(+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   +functor8 = (step+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [101:0-101:1])_");
+                    if (!(rel_33_delta_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_8_m1_Configuration_ffb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt,
+                                    rel_56_new_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_8_m1_Configuration_ffb_op_ctxt,
+                                    rel_8_m1_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_8_m1_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                    ramBitCast<RamDomain>(
+                                                            (ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                rel_33_delta_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_33_delta_Configuration_bbb_op_ctxt)) &&
+                                                !(rel_63_Configuration_ffb->contains(
+                                                        Tuple<RamDomain, 3>{
+                                                                {ramBitCast((ramBitCast<RamSigned>(env2[0]) -
+                                                                             ramBitCast<RamSigned>(
+                                                                                     RamSigned(1)))),
+                                                                        ramBitCast(env1[1]),
+                                                                        ramBitCast(env0[0])}},
+                                                        READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env2[0]) -
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env1[1]), ramBitCast(env0[0])}};
+                                            rel_56_new_Configuration_ffb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_ffb((position+1),nextState,+functor10) :- 
+   +m1_Configuration+_ffb(+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   +functor10 = (step+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [104:0-104:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_24_delta_m1_Configuration_ffb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt,
+                                    rel_56_new_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_24_delta_m1_Configuration_ffb_op_ctxt,
+                                    rel_24_delta_m1_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_24_delta_m1_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                    ramBitCast<RamDomain>(
+                                                            (ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                rel_62_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)) &&
+                                                !(rel_36_delta_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[2]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                !(rel_33_delta_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_33_delta_Configuration_bbb_op_ctxt))) &&
+                                                !(rel_63_Configuration_ffb->contains(
+                                                        Tuple<RamDomain, 3>{
+                                                                {ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                             ramBitCast<RamSigned>(
+                                                                                     RamSigned(1)))),
+                                                                        ramBitCast(env1[1]),
+                                                                        ramBitCast(env0[0])}},
+                                                        READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env1[1]), ramBitCast(env0[0])}};
+                                            rel_56_new_Configuration_ffb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_ffb((position+1),nextState,+functor10) :- 
+   +m1_Configuration+_ffb(+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   +functor10 = (step+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [104:0-104:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_36_delta_Tape_fbf->empty()) &&
+                            !(rel_8_m1_Configuration_ffb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt,
+                                    rel_56_new_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_8_m1_Configuration_ffb_op_ctxt,
+                                    rel_8_m1_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_8_m1_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                    ramBitCast<RamDomain>(
+                                                            (ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                rel_62_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)) &&
+                                                !(rel_63_Configuration_ffb->contains(
+                                                        Tuple<RamDomain, 3>{
+                                                                {ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                             ramBitCast<RamSigned>(
+                                                                                     RamSigned(1)))),
+                                                                        ramBitCast(env1[1]),
+                                                                        ramBitCast(env0[0])}},
+                                                        READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt))) &&
+                                                !(rel_33_delta_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_33_delta_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env1[1]), ramBitCast(env0[0])}};
+                                            rel_56_new_Configuration_ffb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_ffb((position+1),nextState,+functor10) :- 
+   +m1_Configuration+_ffb(+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   +functor10 = (step+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [104:0-104:1])_");
+                    if (!(rel_33_delta_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_8_m1_Configuration_ffb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt,
+                                    rel_56_new_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_8_m1_Configuration_ffb_op_ctxt,
+                                    rel_8_m1_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_8_m1_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                    ramBitCast<RamDomain>(
+                                                            (ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                rel_33_delta_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_33_delta_Configuration_bbb_op_ctxt)) &&
+                                                !(rel_63_Configuration_ffb->contains(
+                                                        Tuple<RamDomain, 3>{
+                                                                {ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                             ramBitCast<RamSigned>(
+                                                                                     RamSigned(1)))),
+                                                                        ramBitCast(env1[1]),
+                                                                        ramBitCast(env0[0])}},
+                                                        READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env1[1]), ramBitCast(env0[0])}};
+                                            rel_56_new_Configuration_ffb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_ffb((position-1),nextState,+functor8) :- 
+   +m2_Configuration+_ffb(+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   +functor8 = (step+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [156:0-156:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_29_delta_m2_Configuration_ffb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_29_delta_m2_Configuration_ffb_op_ctxt,
+                                    rel_29_delta_m2_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt,
+                                    rel_56_new_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_29_delta_m2_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                    ramBitCast<RamDomain>(
+                                                            (ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                rel_62_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)) &&
+                                                !(rel_36_delta_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[2]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                !(rel_33_delta_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_33_delta_Configuration_bbb_op_ctxt))) &&
+                                                !(rel_63_Configuration_ffb->contains(
+                                                        Tuple<RamDomain, 3>{
+                                                                {ramBitCast((ramBitCast<RamSigned>(env2[0]) -
+                                                                             ramBitCast<RamSigned>(
+                                                                                     RamSigned(1)))),
+                                                                        ramBitCast(env1[1]),
+                                                                        ramBitCast(env0[0])}},
+                                                        READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env2[0]) -
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env1[1]), ramBitCast(env0[0])}};
+                                            rel_56_new_Configuration_ffb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_ffb((position-1),nextState,+functor8) :- 
+   +m2_Configuration+_ffb(+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   +functor8 = (step+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [156:0-156:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_36_delta_Tape_fbf->empty()) &&
+                            !(rel_13_m2_Configuration_ffb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt,
+                                    rel_56_new_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_13_m2_Configuration_ffb_op_ctxt,
+                                    rel_13_m2_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_13_m2_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                    ramBitCast<RamDomain>(
+                                                            (ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                rel_62_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)) &&
+                                                !(rel_63_Configuration_ffb->contains(
+                                                        Tuple<RamDomain, 3>{
+                                                                {ramBitCast((ramBitCast<RamSigned>(env2[0]) -
+                                                                             ramBitCast<RamSigned>(
+                                                                                     RamSigned(1)))),
+                                                                        ramBitCast(env1[1]),
+                                                                        ramBitCast(env0[0])}},
+                                                        READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt))) &&
+                                                !(rel_33_delta_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_33_delta_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env2[0]) -
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env1[1]), ramBitCast(env0[0])}};
+                                            rel_56_new_Configuration_ffb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_ffb((position-1),nextState,+functor8) :- 
+   +m2_Configuration+_ffb(+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   +functor8 = (step+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [156:0-156:1])_");
+                    if (!(rel_33_delta_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_13_m2_Configuration_ffb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt,
+                                    rel_56_new_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_13_m2_Configuration_ffb_op_ctxt,
+                                    rel_13_m2_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_13_m2_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                    ramBitCast<RamDomain>(
+                                                            (ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                rel_33_delta_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_33_delta_Configuration_bbb_op_ctxt)) &&
+                                                !(rel_63_Configuration_ffb->contains(
+                                                        Tuple<RamDomain, 3>{
+                                                                {ramBitCast((ramBitCast<RamSigned>(env2[0]) -
+                                                                             ramBitCast<RamSigned>(
+                                                                                     RamSigned(1)))),
+                                                                        ramBitCast(env1[1]),
+                                                                        ramBitCast(env0[0])}},
+                                                        READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env2[0]) -
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env1[1]), ramBitCast(env0[0])}};
+                                            rel_56_new_Configuration_ffb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_ffb((position+1),nextState,+functor10) :- 
+   +m2_Configuration+_ffb(+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   +functor10 = (step+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [159:0-159:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_29_delta_m2_Configuration_ffb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_29_delta_m2_Configuration_ffb_op_ctxt,
+                                    rel_29_delta_m2_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt,
+                                    rel_56_new_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_29_delta_m2_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                    ramBitCast<RamDomain>(
+                                                            (ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                rel_62_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)) &&
+                                                !(rel_36_delta_Tape_fbf->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[2]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                !(rel_33_delta_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_33_delta_Configuration_bbb_op_ctxt))) &&
+                                                !(rel_63_Configuration_ffb->contains(
+                                                        Tuple<RamDomain, 3>{
+                                                                {ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                             ramBitCast<RamSigned>(
+                                                                                     RamSigned(1)))),
+                                                                        ramBitCast(env1[1]),
+                                                                        ramBitCast(env0[0])}},
+                                                        READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env1[1]), ramBitCast(env0[0])}};
+                                            rel_56_new_Configuration_ffb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_ffb((position+1),nextState,+functor10) :- 
+   +m2_Configuration+_ffb(+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   +functor10 = (step+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [159:0-159:1])_");
+                    if (!(rel_62_Configuration_bbb->empty()) && !(rel_36_delta_Tape_fbf->empty()) &&
+                            !(rel_13_m2_Configuration_ffb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt,
+                                    rel_56_new_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_13_m2_Configuration_ffb_op_ctxt,
+                                    rel_13_m2_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_13_m2_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                    ramBitCast<RamDomain>(
+                                                            (ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                rel_62_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt)) &&
+                                                !(rel_63_Configuration_ffb->contains(
+                                                        Tuple<RamDomain, 3>{
+                                                                {ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                             ramBitCast<RamSigned>(
+                                                                                     RamSigned(1)))),
+                                                                        ramBitCast(env1[1]),
+                                                                        ramBitCast(env0[0])}},
+                                                        READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt))) &&
+                                                !(rel_33_delta_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_33_delta_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env1[1]), ramBitCast(env0[0])}};
+                                            rel_56_new_Configuration_ffb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_ffb((position+1),nextState,+functor10) :- 
+   +m2_Configuration+_ffb(+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   +functor10 = (step+1),
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [159:0-159:1])_");
+                    if (!(rel_33_delta_Configuration_bbb->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_13_m2_Configuration_ffb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt,
+                                    rel_56_new_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt,
+                                    rel_63_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_13_m2_Configuration_ffb_op_ctxt,
+                                    rel_13_m2_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_13_m2_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if ((ramBitCast<RamDomain>(env0[0]) ==
+                                                    ramBitCast<RamDomain>(
+                                                            (ramBitCast<RamSigned>(env2[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                                rel_33_delta_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_33_delta_Configuration_bbb_op_ctxt)) &&
+                                                !(rel_63_Configuration_ffb->contains(
+                                                        Tuple<RamDomain, 3>{
+                                                                {ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                             ramBitCast<RamSigned>(
+                                                                                     RamSigned(1)))),
+                                                                        ramBitCast(env1[1]),
+                                                                        ramBitCast(env0[0])}},
+                                                        READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env2[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env1[1]), ramBitCast(env0[0])}};
+                                            rel_56_new_Configuration_ffb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_56_new_Configuration_ffb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                SECTION_END
+                SECTION_START
+                    ;
+                    SignalHandler::instance()->setMsg(R"_(Configuration+_fff(arg0,arg1,arg2) :- 
+   +m0_Configuration+_fff(),
+   newedb2(arg0,arg1,arg2).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE][MAGIC_FILE] [59:0-59:1])_");
+                    if (!(rel_19_delta_m0_Configuration_fff->empty()) && !(rel_72_newedb2->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt,
+                                    rel_57_new_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_72_newedb2_op_ctxt, rel_72_newedb2->createContext());
+                            for (const auto& env0 : *rel_72_newedb2) {
+                                if (!(rel_64_Configuration_fff->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt)))) {
+                                    Tuple<RamDomain, 3> tuple{
+                                            {ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                    rel_57_new_Configuration_fff->insert(
+                                            tuple, READ_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt));
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Configuration+_fff(arg0,arg1,arg2) :- 
+   +m1_Configuration+_fff(),
+   newedb2(arg0,arg1,arg2).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE][MAGIC_FILE] [78:0-78:1])_");
+                    if (!(rel_25_delta_m1_Configuration_fff->empty()) && !(rel_72_newedb2->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt,
+                                    rel_57_new_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_72_newedb2_op_ctxt, rel_72_newedb2->createContext());
+                            for (const auto& env0 : *rel_72_newedb2) {
+                                if (!(rel_64_Configuration_fff->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt)))) {
+                                    Tuple<RamDomain, 3> tuple{
+                                            {ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                    rel_57_new_Configuration_fff->insert(
+                                            tuple, READ_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt));
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(Configuration+_fff(arg0,arg1,arg2) :- 
+   +m2_Configuration+_fff(),
+   newedb2(arg0,arg1,arg2).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE][MAGIC_FILE] [133:0-133:1])_");
+                    if (!(rel_30_delta_m2_Configuration_fff->empty()) && !(rel_72_newedb2->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt,
+                                    rel_57_new_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_72_newedb2_op_ctxt, rel_72_newedb2->createContext());
+                            for (const auto& env0 : *rel_72_newedb2) {
+                                if (!(rel_64_Configuration_fff->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt)))) {
+                                    Tuple<RamDomain, 3> tuple{
+                                            {ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                    rel_57_new_Configuration_fff->insert(
+                                            tuple, READ_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt));
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_fff((position-1),nextState,(step+1)) :- 
+   +m0_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [55:0-55:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_19_delta_m0_Configuration_fff->empty()) &&
+                            !(rel_62_Configuration_bbb->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt,
+                                    rel_57_new_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_64_Configuration_fff->contains(
+                                                Tuple<RamDomain, 3>{
+                                                        {ramBitCast((ramBitCast<RamSigned>(env1[0]) -
+                                                                     ramBitCast<RamSigned>(RamSigned(1)))),
+                                                                ramBitCast(env0[1]),
+                                                                ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                            ramBitCast<RamSigned>(
+                                                                                    RamSigned(1))))}},
+                                                READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt))) &&
+                                            !(rel_33_delta_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(
+                                                            rel_33_delta_Configuration_bbb_op_ctxt))) &&
+                                            !(rel_36_delta_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[2]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                            rel_62_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env1[0]) -
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env0[1]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        rel_57_new_Configuration_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_fff((position-1),nextState,(step+1)) :- 
+   +m0_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [55:0-55:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_36_delta_Tape_fbf->empty()) &&
+                            !(rel_3_m0_Configuration_fff->empty()) && !(rel_62_Configuration_bbb->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt,
+                                    rel_57_new_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_33_delta_Configuration_bbb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt))) &&
+                                            !(rel_64_Configuration_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast((ramBitCast<RamSigned>(
+                                                                                             env1[0]) -
+                                                                                     ramBitCast<RamSigned>(
+                                                                                             RamSigned(1)))),
+                                                            ramBitCast(env0[1]),
+                                                            ramBitCast((
+                                                                    ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                    READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt))) &&
+                                            rel_62_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env1[0]) -
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env0[1]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        rel_57_new_Configuration_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_fff((position-1),nextState,(step+1)) :- 
+   +m0_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [55:0-55:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_3_m0_Configuration_fff->empty()) &&
+                            !(rel_33_delta_Configuration_bbb->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt,
+                                    rel_57_new_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (rel_33_delta_Configuration_bbb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt)) &&
+                                            !(rel_64_Configuration_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast((ramBitCast<RamSigned>(
+                                                                                             env1[0]) -
+                                                                                     ramBitCast<RamSigned>(
+                                                                                             RamSigned(1)))),
+                                                            ramBitCast(env0[1]),
+                                                            ramBitCast((
+                                                                    ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                    READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env1[0]) -
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env0[1]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        rel_57_new_Configuration_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_fff((position+1),nextState,(step+1)) :- 
+   +m0_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [58:0-58:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_19_delta_m0_Configuration_fff->empty()) &&
+                            !(rel_62_Configuration_bbb->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt,
+                                    rel_57_new_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_64_Configuration_fff->contains(
+                                                Tuple<RamDomain, 3>{
+                                                        {ramBitCast((ramBitCast<RamSigned>(env1[0]) +
+                                                                     ramBitCast<RamSigned>(RamSigned(1)))),
+                                                                ramBitCast(env0[1]),
+                                                                ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                            ramBitCast<RamSigned>(
+                                                                                    RamSigned(1))))}},
+                                                READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt))) &&
+                                            !(rel_33_delta_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(
+                                                            rel_33_delta_Configuration_bbb_op_ctxt))) &&
+                                            !(rel_36_delta_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[2]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                            rel_62_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env1[0]) +
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env0[1]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        rel_57_new_Configuration_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_fff((position+1),nextState,(step+1)) :- 
+   +m0_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [58:0-58:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_36_delta_Tape_fbf->empty()) &&
+                            !(rel_3_m0_Configuration_fff->empty()) && !(rel_62_Configuration_bbb->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt,
+                                    rel_57_new_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_33_delta_Configuration_bbb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt))) &&
+                                            !(rel_64_Configuration_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast((ramBitCast<RamSigned>(
+                                                                                             env1[0]) +
+                                                                                     ramBitCast<RamSigned>(
+                                                                                             RamSigned(1)))),
+                                                            ramBitCast(env0[1]),
+                                                            ramBitCast((
+                                                                    ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                    READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt))) &&
+                                            rel_62_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env1[0]) +
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env0[1]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        rel_57_new_Configuration_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_fff((position+1),nextState,(step+1)) :- 
+   +m0_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [58:0-58:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_3_m0_Configuration_fff->empty()) &&
+                            !(rel_33_delta_Configuration_bbb->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt,
+                                    rel_57_new_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (rel_33_delta_Configuration_bbb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt)) &&
+                                            !(rel_64_Configuration_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast((ramBitCast<RamSigned>(
+                                                                                             env1[0]) +
+                                                                                     ramBitCast<RamSigned>(
+                                                                                             RamSigned(1)))),
+                                                            ramBitCast(env0[1]),
+                                                            ramBitCast((
+                                                                    ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                    READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env1[0]) +
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env0[1]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        rel_57_new_Configuration_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_fff((position-1),nextState,(step+1)) :- 
+   +m1_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [74:0-74:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_25_delta_m1_Configuration_fff->empty()) &&
+                            !(rel_62_Configuration_bbb->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt,
+                                    rel_57_new_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_64_Configuration_fff->contains(
+                                                Tuple<RamDomain, 3>{
+                                                        {ramBitCast((ramBitCast<RamSigned>(env1[0]) -
+                                                                     ramBitCast<RamSigned>(RamSigned(1)))),
+                                                                ramBitCast(env0[1]),
+                                                                ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                            ramBitCast<RamSigned>(
+                                                                                    RamSigned(1))))}},
+                                                READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt))) &&
+                                            !(rel_33_delta_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(
+                                                            rel_33_delta_Configuration_bbb_op_ctxt))) &&
+                                            !(rel_36_delta_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[2]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                            rel_62_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env1[0]) -
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env0[1]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        rel_57_new_Configuration_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_fff((position-1),nextState,(step+1)) :- 
+   +m1_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [74:0-74:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_36_delta_Tape_fbf->empty()) &&
+                            !(rel_9_m1_Configuration_fff->empty()) && !(rel_62_Configuration_bbb->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt,
+                                    rel_57_new_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_33_delta_Configuration_bbb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt))) &&
+                                            !(rel_64_Configuration_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast((ramBitCast<RamSigned>(
+                                                                                             env1[0]) -
+                                                                                     ramBitCast<RamSigned>(
+                                                                                             RamSigned(1)))),
+                                                            ramBitCast(env0[1]),
+                                                            ramBitCast((
+                                                                    ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                    READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt))) &&
+                                            rel_62_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env1[0]) -
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env0[1]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        rel_57_new_Configuration_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_fff((position-1),nextState,(step+1)) :- 
+   +m1_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [74:0-74:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_9_m1_Configuration_fff->empty()) &&
+                            !(rel_33_delta_Configuration_bbb->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt,
+                                    rel_57_new_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (rel_33_delta_Configuration_bbb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt)) &&
+                                            !(rel_64_Configuration_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast((ramBitCast<RamSigned>(
+                                                                                             env1[0]) -
+                                                                                     ramBitCast<RamSigned>(
+                                                                                             RamSigned(1)))),
+                                                            ramBitCast(env0[1]),
+                                                            ramBitCast((
+                                                                    ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                    READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env1[0]) -
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env0[1]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        rel_57_new_Configuration_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_fff((position+1),nextState,(step+1)) :- 
+   +m1_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [77:0-77:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_25_delta_m1_Configuration_fff->empty()) &&
+                            !(rel_62_Configuration_bbb->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt,
+                                    rel_57_new_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_64_Configuration_fff->contains(
+                                                Tuple<RamDomain, 3>{
+                                                        {ramBitCast((ramBitCast<RamSigned>(env1[0]) +
+                                                                     ramBitCast<RamSigned>(RamSigned(1)))),
+                                                                ramBitCast(env0[1]),
+                                                                ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                            ramBitCast<RamSigned>(
+                                                                                    RamSigned(1))))}},
+                                                READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt))) &&
+                                            !(rel_33_delta_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(
+                                                            rel_33_delta_Configuration_bbb_op_ctxt))) &&
+                                            !(rel_36_delta_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[2]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                            rel_62_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env1[0]) +
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env0[1]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        rel_57_new_Configuration_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_fff((position+1),nextState,(step+1)) :- 
+   +m1_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [77:0-77:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_36_delta_Tape_fbf->empty()) &&
+                            !(rel_9_m1_Configuration_fff->empty()) && !(rel_62_Configuration_bbb->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt,
+                                    rel_57_new_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_33_delta_Configuration_bbb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt))) &&
+                                            !(rel_64_Configuration_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast((ramBitCast<RamSigned>(
+                                                                                             env1[0]) +
+                                                                                     ramBitCast<RamSigned>(
+                                                                                             RamSigned(1)))),
+                                                            ramBitCast(env0[1]),
+                                                            ramBitCast((
+                                                                    ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                    READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt))) &&
+                                            rel_62_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env1[0]) +
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env0[1]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        rel_57_new_Configuration_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_fff((position+1),nextState,(step+1)) :- 
+   +m1_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [77:0-77:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_9_m1_Configuration_fff->empty()) &&
+                            !(rel_33_delta_Configuration_bbb->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt,
+                                    rel_57_new_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (rel_33_delta_Configuration_bbb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt)) &&
+                                            !(rel_64_Configuration_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast((ramBitCast<RamSigned>(
+                                                                                             env1[0]) +
+                                                                                     ramBitCast<RamSigned>(
+                                                                                             RamSigned(1)))),
+                                                            ramBitCast(env0[1]),
+                                                            ramBitCast((
+                                                                    ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                    READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env1[0]) +
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env0[1]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        rel_57_new_Configuration_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_fff((position-1),nextState,(step+1)) :- 
+   +m2_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [129:0-129:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_30_delta_m2_Configuration_fff->empty()) &&
+                            !(rel_62_Configuration_bbb->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt,
+                                    rel_57_new_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_64_Configuration_fff->contains(
+                                                Tuple<RamDomain, 3>{
+                                                        {ramBitCast((ramBitCast<RamSigned>(env1[0]) -
+                                                                     ramBitCast<RamSigned>(RamSigned(1)))),
+                                                                ramBitCast(env0[1]),
+                                                                ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                            ramBitCast<RamSigned>(
+                                                                                    RamSigned(1))))}},
+                                                READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt))) &&
+                                            !(rel_33_delta_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(
+                                                            rel_33_delta_Configuration_bbb_op_ctxt))) &&
+                                            !(rel_36_delta_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[2]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                            rel_62_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env1[0]) -
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env0[1]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        rel_57_new_Configuration_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_fff((position-1),nextState,(step+1)) :- 
+   +m2_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [129:0-129:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_36_delta_Tape_fbf->empty()) &&
+                            !(rel_14_m2_Configuration_fff->empty()) && !(rel_62_Configuration_bbb->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt,
+                                    rel_57_new_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_33_delta_Configuration_bbb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt))) &&
+                                            !(rel_64_Configuration_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast((ramBitCast<RamSigned>(
+                                                                                             env1[0]) -
+                                                                                     ramBitCast<RamSigned>(
+                                                                                             RamSigned(1)))),
+                                                            ramBitCast(env0[1]),
+                                                            ramBitCast((
+                                                                    ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                    READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt))) &&
+                                            rel_62_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env1[0]) -
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env0[1]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        rel_57_new_Configuration_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_fff((position-1),nextState,(step+1)) :- 
+   +m2_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L",
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [129:0-129:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_14_m2_Configuration_fff->empty()) &&
+                            !(rel_33_delta_Configuration_bbb->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt,
+                                    rel_57_new_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (rel_33_delta_Configuration_bbb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt)) &&
+                                            !(rel_64_Configuration_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast((ramBitCast<RamSigned>(
+                                                                                             env1[0]) -
+                                                                                     ramBitCast<RamSigned>(
+                                                                                             RamSigned(1)))),
+                                                            ramBitCast(env0[1]),
+                                                            ramBitCast((
+                                                                    ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                    READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env1[0]) -
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env0[1]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        rel_57_new_Configuration_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_fff((position+1),nextState,(step+1)) :- 
+   +m2_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [132:0-132:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_30_delta_m2_Configuration_fff->empty()) &&
+                            !(rel_62_Configuration_bbb->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt,
+                                    rel_57_new_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_64_Configuration_fff->contains(
+                                                Tuple<RamDomain, 3>{
+                                                        {ramBitCast((ramBitCast<RamSigned>(env1[0]) +
+                                                                     ramBitCast<RamSigned>(RamSigned(1)))),
+                                                                ramBitCast(env0[1]),
+                                                                ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                            ramBitCast<RamSigned>(
+                                                                                    RamSigned(1))))}},
+                                                READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt))) &&
+                                            !(rel_33_delta_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(
+                                                            rel_33_delta_Configuration_bbb_op_ctxt))) &&
+                                            !(rel_36_delta_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[2]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                            rel_62_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env1[0]) +
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env0[1]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        rel_57_new_Configuration_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_fff((position+1),nextState,(step+1)) :- 
+   +m2_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [132:0-132:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_36_delta_Tape_fbf->empty()) &&
+                            !(rel_14_m2_Configuration_fff->empty()) && !(rel_62_Configuration_bbb->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt,
+                                    rel_62_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt,
+                                    rel_57_new_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_33_delta_Configuration_bbb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt))) &&
+                                            !(rel_64_Configuration_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast((ramBitCast<RamSigned>(
+                                                                                             env1[0]) +
+                                                                                     ramBitCast<RamSigned>(
+                                                                                             RamSigned(1)))),
+                                                            ramBitCast(env0[1]),
+                                                            ramBitCast((
+                                                                    ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                    READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt))) &&
+                                            rel_62_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env1[0]) +
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env0[1]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        rel_57_new_Configuration_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(Configuration+_fff((position+1),nextState,(step+1)) :- 
+   +m2_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R",
+   Configuration+_bbb(position,currentState,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [132:0-132:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_66_Tape_fbf->empty()) &&
+                            !(rel_14_m2_Configuration_fff->empty()) &&
+                            !(rel_33_delta_Configuration_bbb->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt,
+                                    rel_33_delta_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt,
+                                    rel_57_new_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (rel_33_delta_Configuration_bbb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_33_delta_Configuration_bbb_op_ctxt)) &&
+                                            !(rel_64_Configuration_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast((ramBitCast<RamSigned>(
+                                                                                             env1[0]) +
+                                                                                     ramBitCast<RamSigned>(
+                                                                                             RamSigned(1)))),
+                                                            ramBitCast(env0[1]),
+                                                            ramBitCast((
+                                                                    ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                                    READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env1[0]) +
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env0[1]),
+                                                        ramBitCast((ramBitCast<RamSigned>(env1[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                        rel_57_new_Configuration_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_57_new_Configuration_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                SECTION_END
+                SECTION_START
+                    ;
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff(arg0,arg1,arg2) :- 
+   +m0_TapeLimits+_fff(),
+   newedb3(arg0,arg1,arg2).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE][MAGIC_FILE] [70:0-70:1])_");
+                    if (!(rel_22_delta_m0_TapeLimits_fff->empty()) && !(rel_73_newedb3->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_73_newedb3_op_ctxt, rel_73_newedb3->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_73_newedb3) {
+                                if (!(rel_69_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt)))) {
+                                    Tuple<RamDomain, 3> tuple{
+                                            {ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                    rel_60_new_TapeLimits_fff->insert(
+                                            tuple, READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff(arg0,arg1,arg2) :- 
+   +m1_TapeLimits+_fff(),
+   newedb3(arg0,arg1,arg2).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE][MAGIC_FILE] [115:0-115:1])_");
+                    if (!(rel_27_delta_m1_TapeLimits_fff->empty()) && !(rel_73_newedb3->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_73_newedb3_op_ctxt, rel_73_newedb3->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_73_newedb3) {
+                                if (!(rel_69_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt)))) {
+                                    Tuple<RamDomain, 3> tuple{
+                                            {ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                    rel_60_new_TapeLimits_fff->insert(
+                                            tuple, READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff(arg0,arg1,arg2) :- 
+   +m2_TapeLimits+_fff(),
+   newedb3(arg0,arg1,arg2).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE][MAGIC_FILE] [126:0-126:1])_");
+                    if (!(rel_32_delta_m2_TapeLimits_fff->empty()) && !(rel_73_newedb3->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_73_newedb3_op_ctxt, rel_73_newedb3->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_73_newedb3) {
+                                if (!(rel_69_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt)))) {
+                                    Tuple<RamDomain, 3> tuple{
+                                            {ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                    rel_60_new_TapeLimits_fff->insert(
+                                            tuple, READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),left,right) :- 
+   +m0_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   left <= position,
+   position <= right,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [63:0-63:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_22_delta_m0_TapeLimits_fff->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                if (!(rel_38_delta_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt))) &&
+                                        !(rel_69_TapeLimits_fff->contains(
+                                                Tuple<RamDomain, 3>{
+                                                        {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                     ramBitCast<RamSigned>(RamSigned(1)))),
+                                                                ramBitCast(env0[1]), ramBitCast(env0[2])}},
+                                                READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt)))) {
+                                    Tuple<RamDomain, 3> lower{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    Tuple<RamDomain, 3> upper{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[1] = MIN_RAM_SIGNED;
+                                    upper[1] = MAX_RAM_SIGNED;
+                                    auto range = rel_64_Configuration_fff->lowerUpperRange_001(
+                                            lower, upper, READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        if ((ramBitCast<RamSigned>(env1[0]) <=
+                                                    ramBitCast<RamSigned>(env0[2])) &&
+                                                (ramBitCast<RamSigned>(env1[0]) >=
+                                                        ramBitCast<RamSigned>(env0[1])) &&
+                                                !(rel_35_delta_Configuration_fff->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                                ramBitCast(env1[1]), ramBitCast(env1[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_35_delta_Configuration_fff_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                            rel_60_new_TapeLimits_fff->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),left,right) :- 
+   +m0_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   left <= position,
+   position <= right,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [63:0-63:1])_");
+                    if (!(rel_38_delta_TapeLimits_fff->empty()) && !(rel_6_m0_TapeLimits_fff->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_38_delta_TapeLimits_fff) {
+                                if (!(rel_69_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env0[1]), ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt)))) {
+                                    Tuple<RamDomain, 3> lower{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    Tuple<RamDomain, 3> upper{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[1] = MIN_RAM_SIGNED;
+                                    upper[1] = MAX_RAM_SIGNED;
+                                    auto range = rel_64_Configuration_fff->lowerUpperRange_001(
+                                            lower, upper, READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        if ((ramBitCast<RamSigned>(env1[0]) <=
+                                                    ramBitCast<RamSigned>(env0[2])) &&
+                                                (ramBitCast<RamSigned>(env1[0]) >=
+                                                        ramBitCast<RamSigned>(env0[1])) &&
+                                                !(rel_35_delta_Configuration_fff->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                                ramBitCast(env1[1]), ramBitCast(env1[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_35_delta_Configuration_fff_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                            rel_60_new_TapeLimits_fff->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),left,right) :- 
+   +m0_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   left <= position,
+   position <= right,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [63:0-63:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_6_m0_TapeLimits_fff->empty()) &&
+                            !(rel_35_delta_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                if (!(rel_69_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env0[1]), ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt)))) {
+                                    Tuple<RamDomain, 3> lower{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    Tuple<RamDomain, 3> upper{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[1] = MIN_RAM_SIGNED;
+                                    upper[1] = MAX_RAM_SIGNED;
+                                    auto range = rel_35_delta_Configuration_fff->lowerUpperRange_001(lower,
+                                            upper, READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        if ((ramBitCast<RamSigned>(env1[0]) >=
+                                                    ramBitCast<RamSigned>(env0[1])) &&
+                                                (ramBitCast<RamSigned>(env1[0]) <=
+                                                        ramBitCast<RamSigned>(env0[2]))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                            rel_60_new_TapeLimits_fff->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                            break;
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),position,right) :- 
+   +m0_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   position < left,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [66:0-66:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_22_delta_m0_TapeLimits_fff->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                if (!(rel_38_delta_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                    Tuple<RamDomain, 3> lower{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    Tuple<RamDomain, 3> upper{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[1] = MIN_RAM_SIGNED;
+                                    upper[1] = MAX_RAM_SIGNED;
+                                    auto range = rel_64_Configuration_fff->lowerUpperRange_001(
+                                            lower, upper, READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        if (!(rel_35_delta_Configuration_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env1[1]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(
+                                                            rel_35_delta_Configuration_fff_op_ctxt))) &&
+                                                !(rel_69_TapeLimits_fff->contains(
+                                                        Tuple<RamDomain, 3>{
+                                                                {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                             ramBitCast<RamSigned>(
+                                                                                     RamSigned(1)))),
+                                                                        ramBitCast(env1[0]),
+                                                                        ramBitCast(env0[2])}},
+                                                        READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt))) &&
+                                                (ramBitCast<RamSigned>(env1[0]) <=
+                                                        ramBitCast<RamSigned>((
+                                                                ramBitCast<RamSigned>(env0[1]) -
+                                                                ramBitCast<RamSigned>(RamSigned(1)))))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env1[0]), ramBitCast(env0[2])}};
+                                            rel_60_new_TapeLimits_fff->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),position,right) :- 
+   +m0_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   position < left,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [66:0-66:1])_");
+                    if (!(rel_38_delta_TapeLimits_fff->empty()) && !(rel_6_m0_TapeLimits_fff->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_38_delta_TapeLimits_fff) {
+                                Tuple<RamDomain, 3> lower{{0, 0,
+                                        ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                Tuple<RamDomain, 3> upper{{0, 0,
+                                        ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                auto range = rel_64_Configuration_fff->lowerUpperRange_001(
+                                        lower, upper, READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_35_delta_Configuration_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env1[1]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt))) &&
+                                            !(rel_69_TapeLimits_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast((ramBitCast<RamSigned>(
+                                                                                             env0[0]) +
+                                                                                     ramBitCast<RamSigned>(
+                                                                                             RamSigned(1)))),
+                                                            ramBitCast(env1[0]), ramBitCast(env0[2])}},
+                                                    READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt))) &&
+                                            (ramBitCast<RamSigned>(env1[0]) <=
+                                                    ramBitCast<RamSigned>(
+                                                            (ramBitCast<RamSigned>(env0[1]) -
+                                                                    ramBitCast<RamSigned>(RamSigned(1)))))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env1[0]), ramBitCast(env0[2])}};
+                                        rel_60_new_TapeLimits_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),position,right) :- 
+   +m0_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   position < left,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [66:0-66:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_6_m0_TapeLimits_fff->empty()) &&
+                            !(rel_35_delta_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                Tuple<RamDomain, 3> lower{{0, 0,
+                                        ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                Tuple<RamDomain, 3> upper{{0, 0,
+                                        ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                auto range = rel_35_delta_Configuration_fff->lowerUpperRange_001(lower, upper,
+                                        READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if ((ramBitCast<RamSigned>(env1[0]) <=
+                                                ramBitCast<RamSigned>(
+                                                        (ramBitCast<RamSigned>(env0[1]) -
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                            !(rel_69_TapeLimits_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast((ramBitCast<RamSigned>(
+                                                                                             env0[0]) +
+                                                                                     ramBitCast<RamSigned>(
+                                                                                             RamSigned(1)))),
+                                                            ramBitCast(env1[0]), ramBitCast(env0[2])}},
+                                                    READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env1[0]), ramBitCast(env0[2])}};
+                                        rel_60_new_TapeLimits_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),left,position) :- 
+   +m0_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   right < position,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [69:0-69:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_22_delta_m0_TapeLimits_fff->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                if (!(rel_38_delta_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                    Tuple<RamDomain, 3> lower{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    Tuple<RamDomain, 3> upper{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[1] = MIN_RAM_SIGNED;
+                                    upper[1] = MAX_RAM_SIGNED;
+                                    auto range = rel_64_Configuration_fff->lowerUpperRange_001(
+                                            lower, upper, READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        if (!(rel_35_delta_Configuration_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env1[1]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(
+                                                            rel_35_delta_Configuration_fff_op_ctxt))) &&
+                                                !(rel_69_TapeLimits_fff->contains(
+                                                        Tuple<RamDomain, 3>{
+                                                                {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                             ramBitCast<RamSigned>(
+                                                                                     RamSigned(1)))),
+                                                                        ramBitCast(env0[1]),
+                                                                        ramBitCast(env1[0])}},
+                                                        READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt))) &&
+                                                (ramBitCast<RamSigned>(env1[0]) >=
+                                                        ramBitCast<RamSigned>((
+                                                                ramBitCast<RamSigned>(env0[2]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1)))))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env0[1]), ramBitCast(env1[0])}};
+                                            rel_60_new_TapeLimits_fff->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),left,position) :- 
+   +m0_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   right < position,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [69:0-69:1])_");
+                    if (!(rel_38_delta_TapeLimits_fff->empty()) && !(rel_6_m0_TapeLimits_fff->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_38_delta_TapeLimits_fff) {
+                                Tuple<RamDomain, 3> lower{{0, 0,
+                                        ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                Tuple<RamDomain, 3> upper{{0, 0,
+                                        ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                auto range = rel_64_Configuration_fff->lowerUpperRange_001(
+                                        lower, upper, READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_35_delta_Configuration_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env1[1]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt))) &&
+                                            !(rel_69_TapeLimits_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast((ramBitCast<RamSigned>(
+                                                                                             env0[0]) +
+                                                                                     ramBitCast<RamSigned>(
+                                                                                             RamSigned(1)))),
+                                                            ramBitCast(env0[1]), ramBitCast(env1[0])}},
+                                                    READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt))) &&
+                                            (ramBitCast<RamSigned>(env1[0]) >=
+                                                    ramBitCast<RamSigned>(
+                                                            (ramBitCast<RamSigned>(env0[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1)))))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env0[1]), ramBitCast(env1[0])}};
+                                        rel_60_new_TapeLimits_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),left,position) :- 
+   +m0_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   right < position,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [69:0-69:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_6_m0_TapeLimits_fff->empty()) &&
+                            !(rel_35_delta_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                Tuple<RamDomain, 3> lower{{0, 0,
+                                        ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                Tuple<RamDomain, 3> upper{{0, 0,
+                                        ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                auto range = rel_35_delta_Configuration_fff->lowerUpperRange_001(lower, upper,
+                                        READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if ((ramBitCast<RamSigned>(env1[0]) >=
+                                                ramBitCast<RamSigned>(
+                                                        (ramBitCast<RamSigned>(env0[2]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                            !(rel_69_TapeLimits_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast((ramBitCast<RamSigned>(
+                                                                                             env0[0]) +
+                                                                                     ramBitCast<RamSigned>(
+                                                                                             RamSigned(1)))),
+                                                            ramBitCast(env0[1]), ramBitCast(env1[0])}},
+                                                    READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env0[1]), ramBitCast(env1[0])}};
+                                        rel_60_new_TapeLimits_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),left,right) :- 
+   +m1_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   left <= position,
+   position <= right,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [108:0-108:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_27_delta_m1_TapeLimits_fff->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                if (!(rel_38_delta_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt))) &&
+                                        !(rel_69_TapeLimits_fff->contains(
+                                                Tuple<RamDomain, 3>{
+                                                        {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                     ramBitCast<RamSigned>(RamSigned(1)))),
+                                                                ramBitCast(env0[1]), ramBitCast(env0[2])}},
+                                                READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt)))) {
+                                    Tuple<RamDomain, 3> lower{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    Tuple<RamDomain, 3> upper{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[1] = MIN_RAM_SIGNED;
+                                    upper[1] = MAX_RAM_SIGNED;
+                                    auto range = rel_64_Configuration_fff->lowerUpperRange_001(
+                                            lower, upper, READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        if ((ramBitCast<RamSigned>(env1[0]) <=
+                                                    ramBitCast<RamSigned>(env0[2])) &&
+                                                (ramBitCast<RamSigned>(env1[0]) >=
+                                                        ramBitCast<RamSigned>(env0[1])) &&
+                                                !(rel_35_delta_Configuration_fff->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                                ramBitCast(env1[1]), ramBitCast(env1[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_35_delta_Configuration_fff_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                            rel_60_new_TapeLimits_fff->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),left,right) :- 
+   +m1_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   left <= position,
+   position <= right,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [108:0-108:1])_");
+                    if (!(rel_38_delta_TapeLimits_fff->empty()) && !(rel_11_m1_TapeLimits_fff->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_38_delta_TapeLimits_fff) {
+                                if (!(rel_69_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env0[1]), ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt)))) {
+                                    Tuple<RamDomain, 3> lower{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    Tuple<RamDomain, 3> upper{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[1] = MIN_RAM_SIGNED;
+                                    upper[1] = MAX_RAM_SIGNED;
+                                    auto range = rel_64_Configuration_fff->lowerUpperRange_001(
+                                            lower, upper, READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        if ((ramBitCast<RamSigned>(env1[0]) <=
+                                                    ramBitCast<RamSigned>(env0[2])) &&
+                                                (ramBitCast<RamSigned>(env1[0]) >=
+                                                        ramBitCast<RamSigned>(env0[1])) &&
+                                                !(rel_35_delta_Configuration_fff->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                                ramBitCast(env1[1]), ramBitCast(env1[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_35_delta_Configuration_fff_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                            rel_60_new_TapeLimits_fff->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),left,right) :- 
+   +m1_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   left <= position,
+   position <= right,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [108:0-108:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_11_m1_TapeLimits_fff->empty()) &&
+                            !(rel_35_delta_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                if (!(rel_69_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env0[1]), ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt)))) {
+                                    Tuple<RamDomain, 3> lower{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    Tuple<RamDomain, 3> upper{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[1] = MIN_RAM_SIGNED;
+                                    upper[1] = MAX_RAM_SIGNED;
+                                    auto range = rel_35_delta_Configuration_fff->lowerUpperRange_001(lower,
+                                            upper, READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        if ((ramBitCast<RamSigned>(env1[0]) >=
+                                                    ramBitCast<RamSigned>(env0[1])) &&
+                                                (ramBitCast<RamSigned>(env1[0]) <=
+                                                        ramBitCast<RamSigned>(env0[2]))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                            rel_60_new_TapeLimits_fff->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                            break;
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),position,right) :- 
+   +m1_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   position < left,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [111:0-111:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_27_delta_m1_TapeLimits_fff->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                if (!(rel_38_delta_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                    Tuple<RamDomain, 3> lower{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    Tuple<RamDomain, 3> upper{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[1] = MIN_RAM_SIGNED;
+                                    upper[1] = MAX_RAM_SIGNED;
+                                    auto range = rel_64_Configuration_fff->lowerUpperRange_001(
+                                            lower, upper, READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        if (!(rel_35_delta_Configuration_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env1[1]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(
+                                                            rel_35_delta_Configuration_fff_op_ctxt))) &&
+                                                !(rel_69_TapeLimits_fff->contains(
+                                                        Tuple<RamDomain, 3>{
+                                                                {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                             ramBitCast<RamSigned>(
+                                                                                     RamSigned(1)))),
+                                                                        ramBitCast(env1[0]),
+                                                                        ramBitCast(env0[2])}},
+                                                        READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt))) &&
+                                                (ramBitCast<RamSigned>(env1[0]) <=
+                                                        ramBitCast<RamSigned>((
+                                                                ramBitCast<RamSigned>(env0[1]) -
+                                                                ramBitCast<RamSigned>(RamSigned(1)))))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env1[0]), ramBitCast(env0[2])}};
+                                            rel_60_new_TapeLimits_fff->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),position,right) :- 
+   +m1_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   position < left,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [111:0-111:1])_");
+                    if (!(rel_38_delta_TapeLimits_fff->empty()) && !(rel_11_m1_TapeLimits_fff->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_38_delta_TapeLimits_fff) {
+                                Tuple<RamDomain, 3> lower{{0, 0,
+                                        ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                Tuple<RamDomain, 3> upper{{0, 0,
+                                        ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                auto range = rel_64_Configuration_fff->lowerUpperRange_001(
+                                        lower, upper, READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_35_delta_Configuration_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env1[1]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt))) &&
+                                            !(rel_69_TapeLimits_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast((ramBitCast<RamSigned>(
+                                                                                             env0[0]) +
+                                                                                     ramBitCast<RamSigned>(
+                                                                                             RamSigned(1)))),
+                                                            ramBitCast(env1[0]), ramBitCast(env0[2])}},
+                                                    READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt))) &&
+                                            (ramBitCast<RamSigned>(env1[0]) <=
+                                                    ramBitCast<RamSigned>(
+                                                            (ramBitCast<RamSigned>(env0[1]) -
+                                                                    ramBitCast<RamSigned>(RamSigned(1)))))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env1[0]), ramBitCast(env0[2])}};
+                                        rel_60_new_TapeLimits_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),position,right) :- 
+   +m1_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   position < left,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [111:0-111:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_11_m1_TapeLimits_fff->empty()) &&
+                            !(rel_35_delta_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                Tuple<RamDomain, 3> lower{{0, 0,
+                                        ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                Tuple<RamDomain, 3> upper{{0, 0,
+                                        ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                auto range = rel_35_delta_Configuration_fff->lowerUpperRange_001(lower, upper,
+                                        READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if ((ramBitCast<RamSigned>(env1[0]) <=
+                                                ramBitCast<RamSigned>(
+                                                        (ramBitCast<RamSigned>(env0[1]) -
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                            !(rel_69_TapeLimits_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast((ramBitCast<RamSigned>(
+                                                                                             env0[0]) +
+                                                                                     ramBitCast<RamSigned>(
+                                                                                             RamSigned(1)))),
+                                                            ramBitCast(env1[0]), ramBitCast(env0[2])}},
+                                                    READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env1[0]), ramBitCast(env0[2])}};
+                                        rel_60_new_TapeLimits_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),left,position) :- 
+   +m1_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   right < position,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [114:0-114:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_27_delta_m1_TapeLimits_fff->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                if (!(rel_38_delta_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                    Tuple<RamDomain, 3> lower{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    Tuple<RamDomain, 3> upper{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[1] = MIN_RAM_SIGNED;
+                                    upper[1] = MAX_RAM_SIGNED;
+                                    auto range = rel_64_Configuration_fff->lowerUpperRange_001(
+                                            lower, upper, READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        if (!(rel_35_delta_Configuration_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env1[1]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(
+                                                            rel_35_delta_Configuration_fff_op_ctxt))) &&
+                                                !(rel_69_TapeLimits_fff->contains(
+                                                        Tuple<RamDomain, 3>{
+                                                                {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                             ramBitCast<RamSigned>(
+                                                                                     RamSigned(1)))),
+                                                                        ramBitCast(env0[1]),
+                                                                        ramBitCast(env1[0])}},
+                                                        READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt))) &&
+                                                (ramBitCast<RamSigned>(env1[0]) >=
+                                                        ramBitCast<RamSigned>((
+                                                                ramBitCast<RamSigned>(env0[2]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1)))))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env0[1]), ramBitCast(env1[0])}};
+                                            rel_60_new_TapeLimits_fff->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),left,position) :- 
+   +m1_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   right < position,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [114:0-114:1])_");
+                    if (!(rel_38_delta_TapeLimits_fff->empty()) && !(rel_11_m1_TapeLimits_fff->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_38_delta_TapeLimits_fff) {
+                                Tuple<RamDomain, 3> lower{{0, 0,
+                                        ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                Tuple<RamDomain, 3> upper{{0, 0,
+                                        ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                auto range = rel_64_Configuration_fff->lowerUpperRange_001(
+                                        lower, upper, READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_35_delta_Configuration_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env1[1]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt))) &&
+                                            !(rel_69_TapeLimits_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast((ramBitCast<RamSigned>(
+                                                                                             env0[0]) +
+                                                                                     ramBitCast<RamSigned>(
+                                                                                             RamSigned(1)))),
+                                                            ramBitCast(env0[1]), ramBitCast(env1[0])}},
+                                                    READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt))) &&
+                                            (ramBitCast<RamSigned>(env1[0]) >=
+                                                    ramBitCast<RamSigned>(
+                                                            (ramBitCast<RamSigned>(env0[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1)))))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env0[1]), ramBitCast(env1[0])}};
+                                        rel_60_new_TapeLimits_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),left,position) :- 
+   +m1_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   right < position,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [114:0-114:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_11_m1_TapeLimits_fff->empty()) &&
+                            !(rel_35_delta_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                Tuple<RamDomain, 3> lower{{0, 0,
+                                        ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                Tuple<RamDomain, 3> upper{{0, 0,
+                                        ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                auto range = rel_35_delta_Configuration_fff->lowerUpperRange_001(lower, upper,
+                                        READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if ((ramBitCast<RamSigned>(env1[0]) >=
+                                                ramBitCast<RamSigned>(
+                                                        (ramBitCast<RamSigned>(env0[2]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                            !(rel_69_TapeLimits_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast((ramBitCast<RamSigned>(
+                                                                                             env0[0]) +
+                                                                                     ramBitCast<RamSigned>(
+                                                                                             RamSigned(1)))),
+                                                            ramBitCast(env0[1]), ramBitCast(env1[0])}},
+                                                    READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env0[1]), ramBitCast(env1[0])}};
+                                        rel_60_new_TapeLimits_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),left,right) :- 
+   +m2_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   left <= position,
+   position <= right,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [119:0-119:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_32_delta_m2_TapeLimits_fff->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                if (!(rel_38_delta_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt))) &&
+                                        !(rel_69_TapeLimits_fff->contains(
+                                                Tuple<RamDomain, 3>{
+                                                        {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                     ramBitCast<RamSigned>(RamSigned(1)))),
+                                                                ramBitCast(env0[1]), ramBitCast(env0[2])}},
+                                                READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt)))) {
+                                    Tuple<RamDomain, 3> lower{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    Tuple<RamDomain, 3> upper{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[1] = MIN_RAM_SIGNED;
+                                    upper[1] = MAX_RAM_SIGNED;
+                                    auto range = rel_64_Configuration_fff->lowerUpperRange_001(
+                                            lower, upper, READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        if ((ramBitCast<RamSigned>(env1[0]) <=
+                                                    ramBitCast<RamSigned>(env0[2])) &&
+                                                (ramBitCast<RamSigned>(env1[0]) >=
+                                                        ramBitCast<RamSigned>(env0[1])) &&
+                                                !(rel_35_delta_Configuration_fff->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                                ramBitCast(env1[1]), ramBitCast(env1[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_35_delta_Configuration_fff_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                            rel_60_new_TapeLimits_fff->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),left,right) :- 
+   +m2_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   left <= position,
+   position <= right,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [119:0-119:1])_");
+                    if (!(rel_38_delta_TapeLimits_fff->empty()) && !(rel_16_m2_TapeLimits_fff->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_38_delta_TapeLimits_fff) {
+                                if (!(rel_69_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env0[1]), ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt)))) {
+                                    Tuple<RamDomain, 3> lower{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    Tuple<RamDomain, 3> upper{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[1] = MIN_RAM_SIGNED;
+                                    upper[1] = MAX_RAM_SIGNED;
+                                    auto range = rel_64_Configuration_fff->lowerUpperRange_001(
+                                            lower, upper, READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        if ((ramBitCast<RamSigned>(env1[0]) <=
+                                                    ramBitCast<RamSigned>(env0[2])) &&
+                                                (ramBitCast<RamSigned>(env1[0]) >=
+                                                        ramBitCast<RamSigned>(env0[1])) &&
+                                                !(rel_35_delta_Configuration_fff->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                                ramBitCast(env1[1]), ramBitCast(env1[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_35_delta_Configuration_fff_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                            rel_60_new_TapeLimits_fff->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),left,right) :- 
+   +m2_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   left <= position,
+   position <= right,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [119:0-119:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_16_m2_TapeLimits_fff->empty()) &&
+                            !(rel_35_delta_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                if (!(rel_69_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env0[1]), ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt)))) {
+                                    Tuple<RamDomain, 3> lower{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    Tuple<RamDomain, 3> upper{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[1] = MIN_RAM_SIGNED;
+                                    upper[1] = MAX_RAM_SIGNED;
+                                    auto range = rel_35_delta_Configuration_fff->lowerUpperRange_001(lower,
+                                            upper, READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        if ((ramBitCast<RamSigned>(env1[0]) >=
+                                                    ramBitCast<RamSigned>(env0[1])) &&
+                                                (ramBitCast<RamSigned>(env1[0]) <=
+                                                        ramBitCast<RamSigned>(env0[2]))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                                            rel_60_new_TapeLimits_fff->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                            break;
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),position,right) :- 
+   +m2_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   position < left,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [122:0-122:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_32_delta_m2_TapeLimits_fff->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                if (!(rel_38_delta_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                    Tuple<RamDomain, 3> lower{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    Tuple<RamDomain, 3> upper{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[1] = MIN_RAM_SIGNED;
+                                    upper[1] = MAX_RAM_SIGNED;
+                                    auto range = rel_64_Configuration_fff->lowerUpperRange_001(
+                                            lower, upper, READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        if (!(rel_35_delta_Configuration_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env1[1]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(
+                                                            rel_35_delta_Configuration_fff_op_ctxt))) &&
+                                                !(rel_69_TapeLimits_fff->contains(
+                                                        Tuple<RamDomain, 3>{
+                                                                {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                             ramBitCast<RamSigned>(
+                                                                                     RamSigned(1)))),
+                                                                        ramBitCast(env1[0]),
+                                                                        ramBitCast(env0[2])}},
+                                                        READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt))) &&
+                                                (ramBitCast<RamSigned>(env1[0]) <=
+                                                        ramBitCast<RamSigned>((
+                                                                ramBitCast<RamSigned>(env0[1]) -
+                                                                ramBitCast<RamSigned>(RamSigned(1)))))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env1[0]), ramBitCast(env0[2])}};
+                                            rel_60_new_TapeLimits_fff->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),position,right) :- 
+   +m2_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   position < left,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [122:0-122:1])_");
+                    if (!(rel_38_delta_TapeLimits_fff->empty()) && !(rel_16_m2_TapeLimits_fff->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_38_delta_TapeLimits_fff) {
+                                Tuple<RamDomain, 3> lower{{0, 0,
+                                        ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                Tuple<RamDomain, 3> upper{{0, 0,
+                                        ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                auto range = rel_64_Configuration_fff->lowerUpperRange_001(
+                                        lower, upper, READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_35_delta_Configuration_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env1[1]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt))) &&
+                                            !(rel_69_TapeLimits_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast((ramBitCast<RamSigned>(
+                                                                                             env0[0]) +
+                                                                                     ramBitCast<RamSigned>(
+                                                                                             RamSigned(1)))),
+                                                            ramBitCast(env1[0]), ramBitCast(env0[2])}},
+                                                    READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt))) &&
+                                            (ramBitCast<RamSigned>(env1[0]) <=
+                                                    ramBitCast<RamSigned>(
+                                                            (ramBitCast<RamSigned>(env0[1]) -
+                                                                    ramBitCast<RamSigned>(RamSigned(1)))))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env1[0]), ramBitCast(env0[2])}};
+                                        rel_60_new_TapeLimits_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),position,right) :- 
+   +m2_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   position < left,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [122:0-122:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_16_m2_TapeLimits_fff->empty()) &&
+                            !(rel_35_delta_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                Tuple<RamDomain, 3> lower{{0, 0,
+                                        ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                Tuple<RamDomain, 3> upper{{0, 0,
+                                        ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                auto range = rel_35_delta_Configuration_fff->lowerUpperRange_001(lower, upper,
+                                        READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if ((ramBitCast<RamSigned>(env1[0]) <=
+                                                ramBitCast<RamSigned>(
+                                                        (ramBitCast<RamSigned>(env0[1]) -
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                            !(rel_69_TapeLimits_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast((ramBitCast<RamSigned>(
+                                                                                             env0[0]) +
+                                                                                     ramBitCast<RamSigned>(
+                                                                                             RamSigned(1)))),
+                                                            ramBitCast(env1[0]), ramBitCast(env0[2])}},
+                                                    READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env1[0]), ramBitCast(env0[2])}};
+                                        rel_60_new_TapeLimits_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),left,position) :- 
+   +m2_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   right < position,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [125:0-125:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_32_delta_m2_TapeLimits_fff->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                if (!(rel_38_delta_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                    Tuple<RamDomain, 3> lower{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    Tuple<RamDomain, 3> upper{{0, 0,
+                                            ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                        ramBitCast<RamSigned>(RamSigned(1))))}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[1] = MIN_RAM_SIGNED;
+                                    upper[1] = MAX_RAM_SIGNED;
+                                    auto range = rel_64_Configuration_fff->lowerUpperRange_001(
+                                            lower, upper, READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt));
+                                    for (const auto& env1 : range) {
+                                        if (!(rel_35_delta_Configuration_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env1[1]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(
+                                                            rel_35_delta_Configuration_fff_op_ctxt))) &&
+                                                !(rel_69_TapeLimits_fff->contains(
+                                                        Tuple<RamDomain, 3>{
+                                                                {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                             ramBitCast<RamSigned>(
+                                                                                     RamSigned(1)))),
+                                                                        ramBitCast(env0[1]),
+                                                                        ramBitCast(env1[0])}},
+                                                        READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt))) &&
+                                                (ramBitCast<RamSigned>(env1[0]) >=
+                                                        ramBitCast<RamSigned>((
+                                                                ramBitCast<RamSigned>(env0[2]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1)))))) {
+                                            Tuple<RamDomain, 3> tuple{
+                                                    {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1)))),
+                                                            ramBitCast(env0[1]), ramBitCast(env1[0])}};
+                                            rel_60_new_TapeLimits_fff->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),left,position) :- 
+   +m2_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   right < position,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [125:0-125:1])_");
+                    if (!(rel_38_delta_TapeLimits_fff->empty()) && !(rel_16_m2_TapeLimits_fff->empty()) &&
+                            !(rel_64_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_38_delta_TapeLimits_fff) {
+                                Tuple<RamDomain, 3> lower{{0, 0,
+                                        ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                Tuple<RamDomain, 3> upper{{0, 0,
+                                        ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                auto range = rel_64_Configuration_fff->lowerUpperRange_001(
+                                        lower, upper, READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_35_delta_Configuration_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env1[1]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt))) &&
+                                            !(rel_69_TapeLimits_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast((ramBitCast<RamSigned>(
+                                                                                             env0[0]) +
+                                                                                     ramBitCast<RamSigned>(
+                                                                                             RamSigned(1)))),
+                                                            ramBitCast(env0[1]), ramBitCast(env1[0])}},
+                                                    READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt))) &&
+                                            (ramBitCast<RamSigned>(env1[0]) >=
+                                                    ramBitCast<RamSigned>(
+                                                            (ramBitCast<RamSigned>(env0[2]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1)))))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env0[1]), ramBitCast(env1[0])}};
+                                        rel_60_new_TapeLimits_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(TapeLimits+_fff((step+1),left,position) :- 
+   +m2_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right),
+   right < position,
+    _tmp_0 = (step+1),
+   Configuration+_fff(position,_, _tmp_0).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [125:0-125:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_16_m2_TapeLimits_fff->empty()) &&
+                            !(rel_35_delta_Configuration_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt,
+                                    rel_60_new_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                Tuple<RamDomain, 3> lower{{0, 0,
+                                        ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                Tuple<RamDomain, 3> upper{{0, 0,
+                                        ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                    ramBitCast<RamSigned>(RamSigned(1))))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                auto range = rel_35_delta_Configuration_fff->lowerUpperRange_001(lower, upper,
+                                        READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if ((ramBitCast<RamSigned>(env1[0]) >=
+                                                ramBitCast<RamSigned>(
+                                                        (ramBitCast<RamSigned>(env0[2]) +
+                                                                ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                            !(rel_69_TapeLimits_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast((ramBitCast<RamSigned>(
+                                                                                             env0[0]) +
+                                                                                     ramBitCast<RamSigned>(
+                                                                                             RamSigned(1)))),
+                                                            ramBitCast(env0[1]), ramBitCast(env1[0])}},
+                                                    READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{
+                                                {ramBitCast((ramBitCast<RamSigned>(env0[0]) +
+                                                             ramBitCast<RamSigned>(RamSigned(1)))),
+                                                        ramBitCast(env0[1]), ramBitCast(env1[0])}};
+                                        rel_60_new_TapeLimits_fff->insert(
+                                                tuple, READ_OP_CONTEXT(rel_60_new_TapeLimits_fff_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                SECTION_END
+                SECTION_START
+                    ;
+                    SignalHandler::instance()->setMsg(R"_(+m1_Configuration+_fff() :- 
+   +m1_Tape+_fbf(+abdul6_b_s),
+   +abdul6_b_s = "b".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [85:0-85:1])_");
+                    if (!(rel_26_delta_m1_Tape_fbf->empty()) && rel_47_new_m1_Configuration_fff->empty() &&
+                            rel_9_m1_Configuration_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_47_new_m1_Configuration_fff_op_ctxt,
+                                    rel_47_new_m1_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_26_delta_m1_Tape_fbf_op_ctxt,
+                                    rel_26_delta_m1_Tape_fbf->createContext());
+                            if (rel_26_delta_m1_Tape_fbf->contains(
+                                        Tuple<RamDomain, 1>{{ramBitCast(RamSigned(6))}},
+                                        READ_OP_CONTEXT(rel_26_delta_m1_Tape_fbf_op_ctxt))) {
+                                Tuple<RamDomain, 0> tuple{{}};
+                                rel_47_new_m1_Configuration_fff->insert(
+                                        tuple, READ_OP_CONTEXT(rel_47_new_m1_Configuration_fff_op_ctxt));
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m1_Configuration+_fff() :- 
+   +m1_Tape+_fbf(+abdul11_b_s),
+   +abdul11_b_s = "b".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [88:0-88:1])_");
+                    if (!(rel_26_delta_m1_Tape_fbf->empty()) && rel_47_new_m1_Configuration_fff->empty() &&
+                            rel_9_m1_Configuration_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_47_new_m1_Configuration_fff_op_ctxt,
+                                    rel_47_new_m1_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_26_delta_m1_Tape_fbf_op_ctxt,
+                                    rel_26_delta_m1_Tape_fbf->createContext());
+                            if (rel_26_delta_m1_Tape_fbf->contains(
+                                        Tuple<RamDomain, 1>{{ramBitCast(RamSigned(6))}},
+                                        READ_OP_CONTEXT(rel_26_delta_m1_Tape_fbf_op_ctxt))) {
+                                Tuple<RamDomain, 0> tuple{{}};
+                                rel_47_new_m1_Configuration_fff->insert(
+                                        tuple, READ_OP_CONTEXT(rel_47_new_m1_Configuration_fff_op_ctxt));
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m1_Configuration+_fff() :- 
+   +m1_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [107:0-107:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_27_delta_m1_TapeLimits_fff->empty()) &&
+                            rel_47_new_m1_Configuration_fff->empty() && rel_9_m1_Configuration_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_47_new_m1_Configuration_fff_op_ctxt,
+                                    rel_47_new_m1_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                if (!(rel_38_delta_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                    if (!(rel_47_new_m1_Configuration_fff->empty())) break;
+                                    if (!(rel_38_delta_TapeLimits_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                        ramBitCast(env0[2])}},
+                                                READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 0> tuple{{}};
+                                        rel_47_new_m1_Configuration_fff->insert(tuple,
+                                                READ_OP_CONTEXT(rel_47_new_m1_Configuration_fff_op_ctxt));
+                                    }
+                                    break;
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m1_Configuration+_fff() :- 
+   +m1_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [107:0-107:1])_");
+                    if (!(rel_38_delta_TapeLimits_fff->empty()) && !(rel_11_m1_TapeLimits_fff->empty()) &&
+                            rel_47_new_m1_Configuration_fff->empty() && rel_9_m1_Configuration_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_47_new_m1_Configuration_fff_op_ctxt,
+                                    rel_47_new_m1_Configuration_fff->createContext());
+                            for (const auto& env0 : *rel_38_delta_TapeLimits_fff) {
+                                if (!(rel_47_new_m1_Configuration_fff->empty())) break;
+                                Tuple<RamDomain, 0> tuple{{}};
+                                rel_47_new_m1_Configuration_fff->insert(
+                                        tuple, READ_OP_CONTEXT(rel_47_new_m1_Configuration_fff_op_ctxt));
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m1_Configuration+_fff() :- 
+   +m1_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [110:0-110:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_27_delta_m1_TapeLimits_fff->empty()) &&
+                            rel_47_new_m1_Configuration_fff->empty() && rel_9_m1_Configuration_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_47_new_m1_Configuration_fff_op_ctxt,
+                                    rel_47_new_m1_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                if (!(rel_38_delta_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                    if (!(rel_47_new_m1_Configuration_fff->empty())) break;
+                                    if (!(rel_38_delta_TapeLimits_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                        ramBitCast(env0[2])}},
+                                                READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 0> tuple{{}};
+                                        rel_47_new_m1_Configuration_fff->insert(tuple,
+                                                READ_OP_CONTEXT(rel_47_new_m1_Configuration_fff_op_ctxt));
+                                    }
+                                    break;
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m1_Configuration+_fff() :- 
+   +m1_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [110:0-110:1])_");
+                    if (!(rel_38_delta_TapeLimits_fff->empty()) && !(rel_11_m1_TapeLimits_fff->empty()) &&
+                            rel_47_new_m1_Configuration_fff->empty() && rel_9_m1_Configuration_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_47_new_m1_Configuration_fff_op_ctxt,
+                                    rel_47_new_m1_Configuration_fff->createContext());
+                            for (const auto& env0 : *rel_38_delta_TapeLimits_fff) {
+                                if (!(rel_47_new_m1_Configuration_fff->empty())) break;
+                                Tuple<RamDomain, 0> tuple{{}};
+                                rel_47_new_m1_Configuration_fff->insert(
+                                        tuple, READ_OP_CONTEXT(rel_47_new_m1_Configuration_fff_op_ctxt));
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m1_Configuration+_fff() :- 
+   +m1_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [113:0-113:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_27_delta_m1_TapeLimits_fff->empty()) &&
+                            rel_47_new_m1_Configuration_fff->empty() && rel_9_m1_Configuration_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_47_new_m1_Configuration_fff_op_ctxt,
+                                    rel_47_new_m1_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                if (!(rel_38_delta_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                    if (!(rel_47_new_m1_Configuration_fff->empty())) break;
+                                    if (!(rel_38_delta_TapeLimits_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                        ramBitCast(env0[2])}},
+                                                READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 0> tuple{{}};
+                                        rel_47_new_m1_Configuration_fff->insert(tuple,
+                                                READ_OP_CONTEXT(rel_47_new_m1_Configuration_fff_op_ctxt));
+                                    }
+                                    break;
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m1_Configuration+_fff() :- 
+   +m1_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [113:0-113:1])_");
+                    if (!(rel_38_delta_TapeLimits_fff->empty()) && !(rel_11_m1_TapeLimits_fff->empty()) &&
+                            rel_47_new_m1_Configuration_fff->empty() && rel_9_m1_Configuration_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_47_new_m1_Configuration_fff_op_ctxt,
+                                    rel_47_new_m1_Configuration_fff->createContext());
+                            for (const auto& env0 : *rel_38_delta_TapeLimits_fff) {
+                                if (!(rel_47_new_m1_Configuration_fff->empty())) break;
+                                Tuple<RamDomain, 0> tuple{{}};
+                                rel_47_new_m1_Configuration_fff->insert(
+                                        tuple, READ_OP_CONTEXT(rel_47_new_m1_Configuration_fff_op_ctxt));
+                            }
+                        }();
+                    }
+                SECTION_END
+                SECTION_START
+                    ;
+                    SignalHandler::instance()->setMsg(R"_(+m1_Tape+_fbf(oldSymbol) :- 
+   +m1_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [72:0-72:1])_");
+                    if (!(rel_25_delta_m1_Configuration_fff->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_10_m1_Tape_fbf_op_ctxt, rel_10_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_48_new_m1_Tape_fbf_op_ctxt, rel_48_new_m1_Tape_fbf->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                if (!(rel_10_m1_Tape_fbf->contains(Tuple<RamDomain, 1>{{ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_10_m1_Tape_fbf_op_ctxt)))) {
+                                    Tuple<RamDomain, 1> tuple{{ramBitCast(env0[2])}};
+                                    rel_48_new_m1_Tape_fbf->insert(
+                                            tuple, READ_OP_CONTEXT(rel_48_new_m1_Tape_fbf_op_ctxt));
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m1_Tape+_fbf(oldSymbol) :- 
+   +m1_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [75:0-75:1])_");
+                    if (!(rel_25_delta_m1_Configuration_fff->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_10_m1_Tape_fbf_op_ctxt, rel_10_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_48_new_m1_Tape_fbf_op_ctxt, rel_48_new_m1_Tape_fbf->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                if (!(rel_10_m1_Tape_fbf->contains(Tuple<RamDomain, 1>{{ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_10_m1_Tape_fbf_op_ctxt)))) {
+                                    Tuple<RamDomain, 1> tuple{{ramBitCast(env0[2])}};
+                                    rel_48_new_m1_Tape_fbf->insert(
+                                            tuple, READ_OP_CONTEXT(rel_48_new_m1_Tape_fbf_op_ctxt));
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m1_Tape+_fbf(oldSymbol) :- 
+   +m1_Tape+_fbf(newSymbol),
+   Transition(currentState,_,oldSymbol,newSymbol,_).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [79:0-79:1])_");
+                    if (!(rel_26_delta_m1_Tape_fbf->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_10_m1_Tape_fbf_op_ctxt, rel_10_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_26_delta_m1_Tape_fbf_op_ctxt,
+                                    rel_26_delta_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_48_new_m1_Tape_fbf_op_ctxt, rel_48_new_m1_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_26_delta_m1_Tape_fbf) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[4] = MIN_RAM_SIGNED;
+                                upper[4] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00010(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_10_m1_Tape_fbf->contains(
+                                                Tuple<RamDomain, 1>{{ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_10_m1_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 1> tuple{{ramBitCast(env1[2])}};
+                                        rel_48_new_m1_Tape_fbf->insert(
+                                                tuple, READ_OP_CONTEXT(rel_48_new_m1_Tape_fbf_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m1_Tape+_fbf(symbol) :- 
+   +m1_Tape+_fbf(symbol).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [82:0-82:1])_");
+                    if (!(rel_26_delta_m1_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_10_m1_Tape_fbf_op_ctxt, rel_10_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_26_delta_m1_Tape_fbf_op_ctxt,
+                                    rel_26_delta_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_48_new_m1_Tape_fbf_op_ctxt, rel_48_new_m1_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_26_delta_m1_Tape_fbf) {
+                                if (!(rel_10_m1_Tape_fbf->contains(Tuple<RamDomain, 1>{{ramBitCast(env0[0])}},
+                                            READ_OP_CONTEXT(rel_10_m1_Tape_fbf_op_ctxt)))) {
+                                    Tuple<RamDomain, 1> tuple{{ramBitCast(env0[0])}};
+                                    rel_48_new_m1_Tape_fbf->insert(
+                                            tuple, READ_OP_CONTEXT(rel_48_new_m1_Tape_fbf_op_ctxt));
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m1_Tape+_fbf(oldSymbol) :- 
+   +m1_Configuration+_bbb(+functor7,nextState,+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [92:0-92:1])_");
+                    if (!(rel_23_delta_m1_Configuration_bbb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_10_m1_Tape_fbf_op_ctxt, rel_10_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_23_delta_m1_Configuration_bbb_op_ctxt,
+                                    rel_23_delta_m1_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_48_new_m1_Tape_fbf_op_ctxt, rel_48_new_m1_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_23_delta_m1_Configuration_bbb) {
+                                Tuple<RamDomain, 5> lower{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_01001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_10_m1_Tape_fbf->contains(
+                                                Tuple<RamDomain, 1>{{ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_10_m1_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 1> tuple{{ramBitCast(env1[2])}};
+                                        rel_48_new_m1_Tape_fbf->insert(
+                                                tuple, READ_OP_CONTEXT(rel_48_new_m1_Tape_fbf_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m1_Tape+_fbf(oldSymbol) :- 
+   +m1_Configuration+_bbb(+functor9,nextState,+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [95:0-95:1])_");
+                    if (!(rel_23_delta_m1_Configuration_bbb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_10_m1_Tape_fbf_op_ctxt, rel_10_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_23_delta_m1_Configuration_bbb_op_ctxt,
+                                    rel_23_delta_m1_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_48_new_m1_Tape_fbf_op_ctxt, rel_48_new_m1_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_23_delta_m1_Configuration_bbb) {
+                                Tuple<RamDomain, 5> lower{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_01001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_10_m1_Tape_fbf->contains(
+                                                Tuple<RamDomain, 1>{{ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_10_m1_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 1> tuple{{ramBitCast(env1[2])}};
+                                        rel_48_new_m1_Tape_fbf->insert(
+                                                tuple, READ_OP_CONTEXT(rel_48_new_m1_Tape_fbf_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m1_Tape+_fbf(oldSymbol) :- 
+   +m1_Configuration+_ffb(+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [99:0-99:1])_");
+                    if (!(rel_24_delta_m1_Configuration_ffb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_24_delta_m1_Configuration_ffb_op_ctxt,
+                                    rel_24_delta_m1_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_10_m1_Tape_fbf_op_ctxt, rel_10_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_48_new_m1_Tape_fbf_op_ctxt, rel_48_new_m1_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_24_delta_m1_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_10_m1_Tape_fbf->contains(
+                                                Tuple<RamDomain, 1>{{ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_10_m1_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 1> tuple{{ramBitCast(env1[2])}};
+                                        rel_48_new_m1_Tape_fbf->insert(
+                                                tuple, READ_OP_CONTEXT(rel_48_new_m1_Tape_fbf_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m1_Tape+_fbf(oldSymbol) :- 
+   +m1_Configuration+_ffb(+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [102:0-102:1])_");
+                    if (!(rel_24_delta_m1_Configuration_ffb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_24_delta_m1_Configuration_ffb_op_ctxt,
+                                    rel_24_delta_m1_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_10_m1_Tape_fbf_op_ctxt, rel_10_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_48_new_m1_Tape_fbf_op_ctxt, rel_48_new_m1_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_24_delta_m1_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_10_m1_Tape_fbf->contains(
+                                                Tuple<RamDomain, 1>{{ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_10_m1_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 1> tuple{{ramBitCast(env1[2])}};
+                                        rel_48_new_m1_Tape_fbf->insert(
+                                                tuple, READ_OP_CONTEXT(rel_48_new_m1_Tape_fbf_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                SECTION_END
+                SECTION_START
+                    ;
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m1_Configuration+_bbb(position,currentState,step) :- 
+   +m1_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [73:0-73:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_25_delta_m1_Configuration_fff->empty()) &&
+                            !(rel_66_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt,
+                                    rel_7_m1_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt,
+                                    rel_45_new_m1_Configuration_bbb->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_36_delta_Tape_fbf->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[2]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                            !(rel_7_m1_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                ramBitCast(env1[2])}};
+                                        rel_45_new_m1_Configuration_bbb->insert(tuple,
+                                                READ_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m1_Configuration+_bbb(position,currentState,step) :- 
+   +m1_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [73:0-73:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_9_m1_Configuration_fff->empty()) &&
+                            !(rel_36_delta_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt,
+                                    rel_7_m1_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt,
+                                    rel_45_new_m1_Configuration_bbb->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_7_m1_Configuration_bbb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                ramBitCast(env1[2])}};
+                                        rel_45_new_m1_Configuration_bbb->insert(tuple,
+                                                READ_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m1_Configuration+_bbb(position,currentState,step) :- 
+   +m1_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [76:0-76:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_25_delta_m1_Configuration_fff->empty()) &&
+                            !(rel_66_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt,
+                                    rel_7_m1_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt,
+                                    rel_45_new_m1_Configuration_bbb->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_36_delta_Tape_fbf->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[2]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                            !(rel_7_m1_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                ramBitCast(env1[2])}};
+                                        rel_45_new_m1_Configuration_bbb->insert(tuple,
+                                                READ_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m1_Configuration+_bbb(position,currentState,step) :- 
+   +m1_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [76:0-76:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_9_m1_Configuration_fff->empty()) &&
+                            !(rel_36_delta_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt,
+                                    rel_7_m1_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt,
+                                    rel_45_new_m1_Configuration_bbb->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_7_m1_Configuration_bbb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                ramBitCast(env1[2])}};
+                                        rel_45_new_m1_Configuration_bbb->insert(tuple,
+                                                READ_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m1_Configuration+_bbb(position,currentState,step) :- 
+   +m1_Tape+_fbf(newSymbol),
+   Transition(currentState,_,oldSymbol,newSymbol,_),
+   Tape+_fbf(position,oldSymbol,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [80:0-80:1])_");
+                    if (!(rel_66_Tape_fbf->empty()) && !(rel_26_delta_m1_Tape_fbf->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_26_delta_m1_Tape_fbf_op_ctxt,
+                                    rel_26_delta_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt,
+                                    rel_7_m1_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt,
+                                    rel_45_new_m1_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_26_delta_m1_Tape_fbf) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[4] = MIN_RAM_SIGNED;
+                                upper[4] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00010(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_36_delta_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[2]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                !(rel_7_m1_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_7_m1_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_45_new_m1_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m1_Configuration+_bbb(position,currentState,step) :- 
+   +m1_Tape+_fbf(newSymbol),
+   Transition(currentState,_,oldSymbol,newSymbol,_),
+   Tape+_fbf(position,oldSymbol,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [80:0-80:1])_");
+                    if (!(rel_36_delta_Tape_fbf->empty()) && !(rel_10_m1_Tape_fbf->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_10_m1_Tape_fbf_op_ctxt, rel_10_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt,
+                                    rel_7_m1_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt,
+                                    rel_45_new_m1_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_10_m1_Tape_fbf) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[4] = MIN_RAM_SIGNED;
+                                upper[4] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00010(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_7_m1_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_45_new_m1_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m1_Configuration+_bbb(position,currentState,step) :- 
+   +m1_Configuration+_bbb(+functor7,nextState,+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [93:0-93:1])_");
+                    if (!(rel_66_Tape_fbf->empty()) && !(rel_23_delta_m1_Configuration_bbb->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_23_delta_m1_Configuration_bbb_op_ctxt,
+                                    rel_23_delta_m1_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt,
+                                    rel_7_m1_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt,
+                                    rel_45_new_m1_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_23_delta_m1_Configuration_bbb) {
+                                Tuple<RamDomain, 5> lower{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_01001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_36_delta_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[2]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                !(rel_7_m1_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_7_m1_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_45_new_m1_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m1_Configuration+_bbb(position,currentState,step) :- 
+   +m1_Configuration+_bbb(+functor7,nextState,+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [93:0-93:1])_");
+                    if (!(rel_36_delta_Tape_fbf->empty()) && !(rel_7_m1_Configuration_bbb->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt,
+                                    rel_7_m1_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt,
+                                    rel_45_new_m1_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_7_m1_Configuration_bbb) {
+                                Tuple<RamDomain, 5> lower{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_01001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_7_m1_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_45_new_m1_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m1_Configuration+_bbb(position,currentState,step) :- 
+   +m1_Configuration+_bbb(+functor9,nextState,+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [96:0-96:1])_");
+                    if (!(rel_66_Tape_fbf->empty()) && !(rel_23_delta_m1_Configuration_bbb->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_23_delta_m1_Configuration_bbb_op_ctxt,
+                                    rel_23_delta_m1_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt,
+                                    rel_7_m1_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt,
+                                    rel_45_new_m1_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_23_delta_m1_Configuration_bbb) {
+                                Tuple<RamDomain, 5> lower{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_01001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_36_delta_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[2]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                !(rel_7_m1_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_7_m1_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_45_new_m1_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m1_Configuration+_bbb(position,currentState,step) :- 
+   +m1_Configuration+_bbb(+functor9,nextState,+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [96:0-96:1])_");
+                    if (!(rel_36_delta_Tape_fbf->empty()) && !(rel_7_m1_Configuration_bbb->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt,
+                                    rel_7_m1_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt,
+                                    rel_45_new_m1_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_7_m1_Configuration_bbb) {
+                                Tuple<RamDomain, 5> lower{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_01001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_7_m1_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_45_new_m1_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m1_Configuration+_bbb(position,currentState,step) :- 
+   +m1_Configuration+_ffb(+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [100:0-100:1])_");
+                    if (!(rel_66_Tape_fbf->empty()) && !(rel_24_delta_m1_Configuration_ffb->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_24_delta_m1_Configuration_ffb_op_ctxt,
+                                    rel_24_delta_m1_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt,
+                                    rel_7_m1_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt,
+                                    rel_45_new_m1_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_24_delta_m1_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_36_delta_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[2]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                !(rel_7_m1_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_7_m1_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_45_new_m1_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m1_Configuration+_bbb(position,currentState,step) :- 
+   +m1_Configuration+_ffb(+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [100:0-100:1])_");
+                    if (!(rel_36_delta_Tape_fbf->empty()) && !(rel_8_m1_Configuration_ffb->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_8_m1_Configuration_ffb_op_ctxt,
+                                    rel_8_m1_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt,
+                                    rel_7_m1_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt,
+                                    rel_45_new_m1_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_8_m1_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_7_m1_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_45_new_m1_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m1_Configuration+_bbb(position,currentState,step) :- 
+   +m1_Configuration+_ffb(+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [103:0-103:1])_");
+                    if (!(rel_66_Tape_fbf->empty()) && !(rel_24_delta_m1_Configuration_ffb->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_24_delta_m1_Configuration_ffb_op_ctxt,
+                                    rel_24_delta_m1_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt,
+                                    rel_7_m1_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt,
+                                    rel_45_new_m1_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_24_delta_m1_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_36_delta_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[2]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                !(rel_7_m1_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_7_m1_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_45_new_m1_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m1_Configuration+_bbb(position,currentState,step) :- 
+   +m1_Configuration+_ffb(+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [103:0-103:1])_");
+                    if (!(rel_36_delta_Tape_fbf->empty()) && !(rel_8_m1_Configuration_ffb->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_8_m1_Configuration_ffb_op_ctxt,
+                                    rel_8_m1_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt,
+                                    rel_7_m1_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt,
+                                    rel_45_new_m1_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_8_m1_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_7_m1_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_45_new_m1_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                SECTION_END
+                SECTION_START
+                    ;
+                    SignalHandler::instance()->setMsg(R"_(+m1_Configuration+_ffb(step) :- 
+   +m1_Tape+_fbf(symbol),
+   Tape+_fbf(position,symbol,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [83:0-83:1])_");
+                    if (!(rel_26_delta_m1_Tape_fbf->empty()) && !(rel_66_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_46_new_m1_Configuration_ffb_op_ctxt,
+                                    rel_46_new_m1_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_8_m1_Configuration_ffb_op_ctxt,
+                                    rel_8_m1_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_26_delta_m1_Tape_fbf_op_ctxt,
+                                    rel_26_delta_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_26_delta_m1_Tape_fbf) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_36_delta_Tape_fbf->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                            !(rel_8_m1_Configuration_ffb->contains(
+                                                    Tuple<RamDomain, 1>{{ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_8_m1_Configuration_ffb_op_ctxt)))) {
+                                        Tuple<RamDomain, 1> tuple{{ramBitCast(env1[2])}};
+                                        rel_46_new_m1_Configuration_ffb->insert(tuple,
+                                                READ_OP_CONTEXT(rel_46_new_m1_Configuration_ffb_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m1_Configuration+_ffb(step) :- 
+   +m1_Tape+_fbf(symbol),
+   Tape+_fbf(position,symbol,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [83:0-83:1])_");
+                    if (!(rel_10_m1_Tape_fbf->empty()) && !(rel_36_delta_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_46_new_m1_Configuration_ffb_op_ctxt,
+                                    rel_46_new_m1_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_8_m1_Configuration_ffb_op_ctxt,
+                                    rel_8_m1_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_10_m1_Tape_fbf_op_ctxt, rel_10_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_10_m1_Tape_fbf) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_8_m1_Configuration_ffb->contains(
+                                                Tuple<RamDomain, 1>{{ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_8_m1_Configuration_ffb_op_ctxt)))) {
+                                        Tuple<RamDomain, 1> tuple{{ramBitCast(env1[2])}};
+                                        rel_46_new_m1_Configuration_ffb->insert(tuple,
+                                                READ_OP_CONTEXT(rel_46_new_m1_Configuration_ffb_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                SECTION_END
+                SECTION_START
+                    ;
+                    SignalHandler::instance()->setMsg(R"_(+m1_TapeLimits+_fff() :- 
+   +m1_Tape+_fbf(+abdul6_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   +abdul6_b_s = "b".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [86:0-86:1])_");
+                    if (!(rel_26_delta_m1_Tape_fbf->empty()) && !(rel_64_Configuration_fff->empty()) &&
+                            rel_49_new_m1_TapeLimits_fff->empty() && rel_11_m1_TapeLimits_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_26_delta_m1_Tape_fbf_op_ctxt,
+                                    rel_26_delta_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_49_new_m1_TapeLimits_fff_op_ctxt,
+                                    rel_49_new_m1_TapeLimits_fff->createContext());
+                            if (rel_26_delta_m1_Tape_fbf->contains(
+                                        Tuple<RamDomain, 1>{{ramBitCast(RamSigned(6))}},
+                                        READ_OP_CONTEXT(rel_26_delta_m1_Tape_fbf_op_ctxt))) {
+                                for (const auto& env0 : *rel_64_Configuration_fff) {
+                                    if (!(rel_35_delta_Configuration_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                        ramBitCast(env0[2])}},
+                                                READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt)))) {
+                                        if (!(rel_49_new_m1_TapeLimits_fff->empty())) break;
+                                        if (!(rel_35_delta_Configuration_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env0[0]),
+                                                            ramBitCast(env0[1]), ramBitCast(env0[2])}},
+                                                    READ_OP_CONTEXT(
+                                                            rel_35_delta_Configuration_fff_op_ctxt)))) {
+                                            Tuple<RamDomain, 0> tuple{{}};
+                                            rel_49_new_m1_TapeLimits_fff->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_49_new_m1_TapeLimits_fff_op_ctxt));
+                                        }
+                                        break;
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m1_TapeLimits+_fff() :- 
+   +m1_Tape+_fbf(+abdul6_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   +abdul6_b_s = "b".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [86:0-86:1])_");
+                    if (!(rel_10_m1_Tape_fbf->empty()) && !(rel_35_delta_Configuration_fff->empty()) &&
+                            rel_49_new_m1_TapeLimits_fff->empty() && rel_11_m1_TapeLimits_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_10_m1_Tape_fbf_op_ctxt, rel_10_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_49_new_m1_TapeLimits_fff_op_ctxt,
+                                    rel_49_new_m1_TapeLimits_fff->createContext());
+                            if (rel_10_m1_Tape_fbf->contains(Tuple<RamDomain, 1>{{ramBitCast(RamSigned(6))}},
+                                        READ_OP_CONTEXT(rel_10_m1_Tape_fbf_op_ctxt))) {
+                                for (const auto& env0 : *rel_35_delta_Configuration_fff) {
+                                    if (!(rel_49_new_m1_TapeLimits_fff->empty())) break;
+                                    Tuple<RamDomain, 0> tuple{{}};
+                                    rel_49_new_m1_TapeLimits_fff->insert(
+                                            tuple, READ_OP_CONTEXT(rel_49_new_m1_TapeLimits_fff_op_ctxt));
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m1_TapeLimits+_fff() :- 
+   +m1_Tape+_fbf(+abdul11_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   +abdul11_b_s = "b".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [89:0-89:1])_");
+                    if (!(rel_26_delta_m1_Tape_fbf->empty()) && !(rel_64_Configuration_fff->empty()) &&
+                            rel_49_new_m1_TapeLimits_fff->empty() && rel_11_m1_TapeLimits_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_26_delta_m1_Tape_fbf_op_ctxt,
+                                    rel_26_delta_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_49_new_m1_TapeLimits_fff_op_ctxt,
+                                    rel_49_new_m1_TapeLimits_fff->createContext());
+                            if (rel_26_delta_m1_Tape_fbf->contains(
+                                        Tuple<RamDomain, 1>{{ramBitCast(RamSigned(6))}},
+                                        READ_OP_CONTEXT(rel_26_delta_m1_Tape_fbf_op_ctxt))) {
+                                for (const auto& env0 : *rel_64_Configuration_fff) {
+                                    if (!(rel_35_delta_Configuration_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                        ramBitCast(env0[2])}},
+                                                READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt)))) {
+                                        if (!(rel_49_new_m1_TapeLimits_fff->empty())) break;
+                                        if (!(rel_35_delta_Configuration_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env0[0]),
+                                                            ramBitCast(env0[1]), ramBitCast(env0[2])}},
+                                                    READ_OP_CONTEXT(
+                                                            rel_35_delta_Configuration_fff_op_ctxt)))) {
+                                            Tuple<RamDomain, 0> tuple{{}};
+                                            rel_49_new_m1_TapeLimits_fff->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_49_new_m1_TapeLimits_fff_op_ctxt));
+                                        }
+                                        break;
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m1_TapeLimits+_fff() :- 
+   +m1_Tape+_fbf(+abdul11_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   +abdul11_b_s = "b".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [89:0-89:1])_");
+                    if (!(rel_10_m1_Tape_fbf->empty()) && !(rel_35_delta_Configuration_fff->empty()) &&
+                            rel_49_new_m1_TapeLimits_fff->empty() && rel_11_m1_TapeLimits_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_10_m1_Tape_fbf_op_ctxt, rel_10_m1_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_49_new_m1_TapeLimits_fff_op_ctxt,
+                                    rel_49_new_m1_TapeLimits_fff->createContext());
+                            if (rel_10_m1_Tape_fbf->contains(Tuple<RamDomain, 1>{{ramBitCast(RamSigned(6))}},
+                                        READ_OP_CONTEXT(rel_10_m1_Tape_fbf_op_ctxt))) {
+                                for (const auto& env0 : *rel_35_delta_Configuration_fff) {
+                                    if (!(rel_49_new_m1_TapeLimits_fff->empty())) break;
+                                    Tuple<RamDomain, 0> tuple{{}};
+                                    rel_49_new_m1_TapeLimits_fff->insert(
+                                            tuple, READ_OP_CONTEXT(rel_49_new_m1_TapeLimits_fff_op_ctxt));
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m1_TapeLimits+_fff() :- 
+   +m1_TapeLimits+_fff().
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [106:0-106:1])_");
+                    if (rel_49_new_m1_TapeLimits_fff->empty() && rel_11_m1_TapeLimits_fff->empty() &&
+                            !(rel_27_delta_m1_TapeLimits_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_49_new_m1_TapeLimits_fff_op_ctxt,
+                                    rel_49_new_m1_TapeLimits_fff->createContext());
+                            Tuple<RamDomain, 0> tuple{{}};
+                            rel_49_new_m1_TapeLimits_fff->insert(
+                                    tuple, READ_OP_CONTEXT(rel_49_new_m1_TapeLimits_fff_op_ctxt));
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m1_TapeLimits+_fff() :- 
+   +m1_TapeLimits+_fff().
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [109:0-109:1])_");
+                    if (rel_49_new_m1_TapeLimits_fff->empty() && rel_11_m1_TapeLimits_fff->empty() &&
+                            !(rel_27_delta_m1_TapeLimits_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_49_new_m1_TapeLimits_fff_op_ctxt,
+                                    rel_49_new_m1_TapeLimits_fff->createContext());
+                            Tuple<RamDomain, 0> tuple{{}};
+                            rel_49_new_m1_TapeLimits_fff->insert(
+                                    tuple, READ_OP_CONTEXT(rel_49_new_m1_TapeLimits_fff_op_ctxt));
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m1_TapeLimits+_fff() :- 
+   +m1_TapeLimits+_fff().
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [112:0-112:1])_");
+                    if (rel_49_new_m1_TapeLimits_fff->empty() && rel_11_m1_TapeLimits_fff->empty() &&
+                            !(rel_27_delta_m1_TapeLimits_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_49_new_m1_TapeLimits_fff_op_ctxt,
+                                    rel_49_new_m1_TapeLimits_fff->createContext());
+                            Tuple<RamDomain, 0> tuple{{}};
+                            rel_49_new_m1_TapeLimits_fff->insert(
+                                    tuple, READ_OP_CONTEXT(rel_49_new_m1_TapeLimits_fff_op_ctxt));
+                        }();
+                    }
+                SECTION_END
+                SECTION_START
+                    ;
+                    SignalHandler::instance()->setMsg(R"_(+m2_Configuration+_fff() :- 
+   +m2_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [118:0-118:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_32_delta_m2_TapeLimits_fff->empty()) &&
+                            rel_52_new_m2_Configuration_fff->empty() &&
+                            rel_14_m2_Configuration_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_52_new_m2_Configuration_fff_op_ctxt,
+                                    rel_52_new_m2_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                if (!(rel_38_delta_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                    if (!(rel_52_new_m2_Configuration_fff->empty())) break;
+                                    if (!(rel_38_delta_TapeLimits_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                        ramBitCast(env0[2])}},
+                                                READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 0> tuple{{}};
+                                        rel_52_new_m2_Configuration_fff->insert(tuple,
+                                                READ_OP_CONTEXT(rel_52_new_m2_Configuration_fff_op_ctxt));
+                                    }
+                                    break;
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m2_Configuration+_fff() :- 
+   +m2_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [118:0-118:1])_");
+                    if (!(rel_38_delta_TapeLimits_fff->empty()) && !(rel_16_m2_TapeLimits_fff->empty()) &&
+                            rel_52_new_m2_Configuration_fff->empty() &&
+                            rel_14_m2_Configuration_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_52_new_m2_Configuration_fff_op_ctxt,
+                                    rel_52_new_m2_Configuration_fff->createContext());
+                            for (const auto& env0 : *rel_38_delta_TapeLimits_fff) {
+                                if (!(rel_52_new_m2_Configuration_fff->empty())) break;
+                                Tuple<RamDomain, 0> tuple{{}};
+                                rel_52_new_m2_Configuration_fff->insert(
+                                        tuple, READ_OP_CONTEXT(rel_52_new_m2_Configuration_fff_op_ctxt));
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m2_Configuration+_fff() :- 
+   +m2_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [121:0-121:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_32_delta_m2_TapeLimits_fff->empty()) &&
+                            rel_52_new_m2_Configuration_fff->empty() &&
+                            rel_14_m2_Configuration_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_52_new_m2_Configuration_fff_op_ctxt,
+                                    rel_52_new_m2_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                if (!(rel_38_delta_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                    if (!(rel_52_new_m2_Configuration_fff->empty())) break;
+                                    if (!(rel_38_delta_TapeLimits_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                        ramBitCast(env0[2])}},
+                                                READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 0> tuple{{}};
+                                        rel_52_new_m2_Configuration_fff->insert(tuple,
+                                                READ_OP_CONTEXT(rel_52_new_m2_Configuration_fff_op_ctxt));
+                                    }
+                                    break;
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m2_Configuration+_fff() :- 
+   +m2_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [121:0-121:1])_");
+                    if (!(rel_38_delta_TapeLimits_fff->empty()) && !(rel_16_m2_TapeLimits_fff->empty()) &&
+                            rel_52_new_m2_Configuration_fff->empty() &&
+                            rel_14_m2_Configuration_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_52_new_m2_Configuration_fff_op_ctxt,
+                                    rel_52_new_m2_Configuration_fff->createContext());
+                            for (const auto& env0 : *rel_38_delta_TapeLimits_fff) {
+                                if (!(rel_52_new_m2_Configuration_fff->empty())) break;
+                                Tuple<RamDomain, 0> tuple{{}};
+                                rel_52_new_m2_Configuration_fff->insert(
+                                        tuple, READ_OP_CONTEXT(rel_52_new_m2_Configuration_fff_op_ctxt));
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m2_Configuration+_fff() :- 
+   +m2_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [124:0-124:1])_");
+                    if (!(rel_69_TapeLimits_fff->empty()) && !(rel_32_delta_m2_TapeLimits_fff->empty()) &&
+                            rel_52_new_m2_Configuration_fff->empty() &&
+                            rel_14_m2_Configuration_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_52_new_m2_Configuration_fff_op_ctxt,
+                                    rel_52_new_m2_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                            for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                                if (!(rel_38_delta_TapeLimits_fff->contains(
+                                            Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                    ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                    if (!(rel_52_new_m2_Configuration_fff->empty())) break;
+                                    if (!(rel_38_delta_TapeLimits_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                        ramBitCast(env0[2])}},
+                                                READ_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt)))) {
+                                        Tuple<RamDomain, 0> tuple{{}};
+                                        rel_52_new_m2_Configuration_fff->insert(tuple,
+                                                READ_OP_CONTEXT(rel_52_new_m2_Configuration_fff_op_ctxt));
+                                    }
+                                    break;
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m2_Configuration+_fff() :- 
+   +m2_TapeLimits+_fff(),
+   TapeLimits+_fff(step,left,right).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [124:0-124:1])_");
+                    if (!(rel_38_delta_TapeLimits_fff->empty()) && !(rel_16_m2_TapeLimits_fff->empty()) &&
+                            rel_52_new_m2_Configuration_fff->empty() &&
+                            rel_14_m2_Configuration_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_38_delta_TapeLimits_fff_op_ctxt,
+                                    rel_38_delta_TapeLimits_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_52_new_m2_Configuration_fff_op_ctxt,
+                                    rel_52_new_m2_Configuration_fff->createContext());
+                            for (const auto& env0 : *rel_38_delta_TapeLimits_fff) {
+                                if (!(rel_52_new_m2_Configuration_fff->empty())) break;
+                                Tuple<RamDomain, 0> tuple{{}};
+                                rel_52_new_m2_Configuration_fff->insert(
+                                        tuple, READ_OP_CONTEXT(rel_52_new_m2_Configuration_fff_op_ctxt));
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m2_Configuration+_fff() :- 
+   +m2_Tape+_fbf(+abdul6_b_s),
+   +abdul6_b_s = "b".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [140:0-140:1])_");
+                    if (!(rel_31_delta_m2_Tape_fbf->empty()) && rel_52_new_m2_Configuration_fff->empty() &&
+                            rel_14_m2_Configuration_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_31_delta_m2_Tape_fbf_op_ctxt,
+                                    rel_31_delta_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_52_new_m2_Configuration_fff_op_ctxt,
+                                    rel_52_new_m2_Configuration_fff->createContext());
+                            if (rel_31_delta_m2_Tape_fbf->contains(
+                                        Tuple<RamDomain, 1>{{ramBitCast(RamSigned(6))}},
+                                        READ_OP_CONTEXT(rel_31_delta_m2_Tape_fbf_op_ctxt))) {
+                                Tuple<RamDomain, 0> tuple{{}};
+                                rel_52_new_m2_Configuration_fff->insert(
+                                        tuple, READ_OP_CONTEXT(rel_52_new_m2_Configuration_fff_op_ctxt));
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m2_Configuration+_fff() :- 
+   +m2_Tape+_fbf(+abdul11_b_s),
+   +abdul11_b_s = "b".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [143:0-143:1])_");
+                    if (!(rel_31_delta_m2_Tape_fbf->empty()) && rel_52_new_m2_Configuration_fff->empty() &&
+                            rel_14_m2_Configuration_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_31_delta_m2_Tape_fbf_op_ctxt,
+                                    rel_31_delta_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_52_new_m2_Configuration_fff_op_ctxt,
+                                    rel_52_new_m2_Configuration_fff->createContext());
+                            if (rel_31_delta_m2_Tape_fbf->contains(
+                                        Tuple<RamDomain, 1>{{ramBitCast(RamSigned(6))}},
+                                        READ_OP_CONTEXT(rel_31_delta_m2_Tape_fbf_op_ctxt))) {
+                                Tuple<RamDomain, 0> tuple{{}};
+                                rel_52_new_m2_Configuration_fff->insert(
+                                        tuple, READ_OP_CONTEXT(rel_52_new_m2_Configuration_fff_op_ctxt));
+                            }
+                        }();
+                    }
+                SECTION_END
+                SECTION_START
+                    ;
+                    SignalHandler::instance()->setMsg(R"_(+m2_TapeLimits+_fff() :- 
+   +m2_TapeLimits+_fff().
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [117:0-117:1])_");
+                    if (rel_54_new_m2_TapeLimits_fff->empty() && rel_16_m2_TapeLimits_fff->empty() &&
+                            !(rel_32_delta_m2_TapeLimits_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_54_new_m2_TapeLimits_fff_op_ctxt,
+                                    rel_54_new_m2_TapeLimits_fff->createContext());
+                            Tuple<RamDomain, 0> tuple{{}};
+                            rel_54_new_m2_TapeLimits_fff->insert(
+                                    tuple, READ_OP_CONTEXT(rel_54_new_m2_TapeLimits_fff_op_ctxt));
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m2_TapeLimits+_fff() :- 
+   +m2_TapeLimits+_fff().
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [120:0-120:1])_");
+                    if (rel_54_new_m2_TapeLimits_fff->empty() && rel_16_m2_TapeLimits_fff->empty() &&
+                            !(rel_32_delta_m2_TapeLimits_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_54_new_m2_TapeLimits_fff_op_ctxt,
+                                    rel_54_new_m2_TapeLimits_fff->createContext());
+                            Tuple<RamDomain, 0> tuple{{}};
+                            rel_54_new_m2_TapeLimits_fff->insert(
+                                    tuple, READ_OP_CONTEXT(rel_54_new_m2_TapeLimits_fff_op_ctxt));
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m2_TapeLimits+_fff() :- 
+   +m2_TapeLimits+_fff().
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [123:0-123:1])_");
+                    if (rel_54_new_m2_TapeLimits_fff->empty() && rel_16_m2_TapeLimits_fff->empty() &&
+                            !(rel_32_delta_m2_TapeLimits_fff->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_54_new_m2_TapeLimits_fff_op_ctxt,
+                                    rel_54_new_m2_TapeLimits_fff->createContext());
+                            Tuple<RamDomain, 0> tuple{{}};
+                            rel_54_new_m2_TapeLimits_fff->insert(
+                                    tuple, READ_OP_CONTEXT(rel_54_new_m2_TapeLimits_fff_op_ctxt));
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m2_TapeLimits+_fff() :- 
+   +m2_Tape+_fbf(+abdul6_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   +abdul6_b_s = "b".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [141:0-141:1])_");
+                    if (!(rel_31_delta_m2_Tape_fbf->empty()) && !(rel_64_Configuration_fff->empty()) &&
+                            rel_54_new_m2_TapeLimits_fff->empty() && rel_16_m2_TapeLimits_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_31_delta_m2_Tape_fbf_op_ctxt,
+                                    rel_31_delta_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_54_new_m2_TapeLimits_fff_op_ctxt,
+                                    rel_54_new_m2_TapeLimits_fff->createContext());
+                            if (rel_31_delta_m2_Tape_fbf->contains(
+                                        Tuple<RamDomain, 1>{{ramBitCast(RamSigned(6))}},
+                                        READ_OP_CONTEXT(rel_31_delta_m2_Tape_fbf_op_ctxt))) {
+                                for (const auto& env0 : *rel_64_Configuration_fff) {
+                                    if (!(rel_35_delta_Configuration_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                        ramBitCast(env0[2])}},
+                                                READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt)))) {
+                                        if (!(rel_54_new_m2_TapeLimits_fff->empty())) break;
+                                        if (!(rel_35_delta_Configuration_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env0[0]),
+                                                            ramBitCast(env0[1]), ramBitCast(env0[2])}},
+                                                    READ_OP_CONTEXT(
+                                                            rel_35_delta_Configuration_fff_op_ctxt)))) {
+                                            Tuple<RamDomain, 0> tuple{{}};
+                                            rel_54_new_m2_TapeLimits_fff->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_54_new_m2_TapeLimits_fff_op_ctxt));
+                                        }
+                                        break;
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m2_TapeLimits+_fff() :- 
+   +m2_Tape+_fbf(+abdul6_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   +abdul6_b_s = "b".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [141:0-141:1])_");
+                    if (!(rel_15_m2_Tape_fbf->empty()) && !(rel_35_delta_Configuration_fff->empty()) &&
+                            rel_54_new_m2_TapeLimits_fff->empty() && rel_16_m2_TapeLimits_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_15_m2_Tape_fbf_op_ctxt, rel_15_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_54_new_m2_TapeLimits_fff_op_ctxt,
+                                    rel_54_new_m2_TapeLimits_fff->createContext());
+                            if (rel_15_m2_Tape_fbf->contains(Tuple<RamDomain, 1>{{ramBitCast(RamSigned(6))}},
+                                        READ_OP_CONTEXT(rel_15_m2_Tape_fbf_op_ctxt))) {
+                                for (const auto& env0 : *rel_35_delta_Configuration_fff) {
+                                    if (!(rel_54_new_m2_TapeLimits_fff->empty())) break;
+                                    Tuple<RamDomain, 0> tuple{{}};
+                                    rel_54_new_m2_TapeLimits_fff->insert(
+                                            tuple, READ_OP_CONTEXT(rel_54_new_m2_TapeLimits_fff_op_ctxt));
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m2_TapeLimits+_fff() :- 
+   +m2_Tape+_fbf(+abdul11_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   +abdul11_b_s = "b".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [144:0-144:1])_");
+                    if (!(rel_31_delta_m2_Tape_fbf->empty()) && !(rel_64_Configuration_fff->empty()) &&
+                            rel_54_new_m2_TapeLimits_fff->empty() && rel_16_m2_TapeLimits_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_31_delta_m2_Tape_fbf_op_ctxt,
+                                    rel_31_delta_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt,
+                                    rel_64_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(rel_54_new_m2_TapeLimits_fff_op_ctxt,
+                                    rel_54_new_m2_TapeLimits_fff->createContext());
+                            if (rel_31_delta_m2_Tape_fbf->contains(
+                                        Tuple<RamDomain, 1>{{ramBitCast(RamSigned(6))}},
+                                        READ_OP_CONTEXT(rel_31_delta_m2_Tape_fbf_op_ctxt))) {
+                                for (const auto& env0 : *rel_64_Configuration_fff) {
+                                    if (!(rel_35_delta_Configuration_fff->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env0[0]), ramBitCast(env0[1]),
+                                                        ramBitCast(env0[2])}},
+                                                READ_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt)))) {
+                                        if (!(rel_54_new_m2_TapeLimits_fff->empty())) break;
+                                        if (!(rel_35_delta_Configuration_fff->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env0[0]),
+                                                            ramBitCast(env0[1]), ramBitCast(env0[2])}},
+                                                    READ_OP_CONTEXT(
+                                                            rel_35_delta_Configuration_fff_op_ctxt)))) {
+                                            Tuple<RamDomain, 0> tuple{{}};
+                                            rel_54_new_m2_TapeLimits_fff->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_54_new_m2_TapeLimits_fff_op_ctxt));
+                                        }
+                                        break;
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m2_TapeLimits+_fff() :- 
+   +m2_Tape+_fbf(+abdul11_b_s),
+   Configuration+_fff(position,_, _tmp_0),
+   +abdul11_b_s = "b".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [144:0-144:1])_");
+                    if (!(rel_15_m2_Tape_fbf->empty()) && !(rel_35_delta_Configuration_fff->empty()) &&
+                            rel_54_new_m2_TapeLimits_fff->empty() && rel_16_m2_TapeLimits_fff->empty()) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_35_delta_Configuration_fff_op_ctxt,
+                                    rel_35_delta_Configuration_fff->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_15_m2_Tape_fbf_op_ctxt, rel_15_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_54_new_m2_TapeLimits_fff_op_ctxt,
+                                    rel_54_new_m2_TapeLimits_fff->createContext());
+                            if (rel_15_m2_Tape_fbf->contains(Tuple<RamDomain, 1>{{ramBitCast(RamSigned(6))}},
+                                        READ_OP_CONTEXT(rel_15_m2_Tape_fbf_op_ctxt))) {
+                                for (const auto& env0 : *rel_35_delta_Configuration_fff) {
+                                    if (!(rel_54_new_m2_TapeLimits_fff->empty())) break;
+                                    Tuple<RamDomain, 0> tuple{{}};
+                                    rel_54_new_m2_TapeLimits_fff->insert(
+                                            tuple, READ_OP_CONTEXT(rel_54_new_m2_TapeLimits_fff_op_ctxt));
+                                }
+                            }
+                        }();
+                    }
+                SECTION_END
+                SECTION_START
+                    ;
+                    SignalHandler::instance()->setMsg(R"_(+m2_Tape+_fbf(oldSymbol) :- 
+   +m2_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [127:0-127:1])_");
+                    if (!(rel_30_delta_m2_Configuration_fff->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_53_new_m2_Tape_fbf_op_ctxt, rel_53_new_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_15_m2_Tape_fbf_op_ctxt, rel_15_m2_Tape_fbf->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                if (!(rel_15_m2_Tape_fbf->contains(Tuple<RamDomain, 1>{{ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_15_m2_Tape_fbf_op_ctxt)))) {
+                                    Tuple<RamDomain, 1> tuple{{ramBitCast(env0[2])}};
+                                    rel_53_new_m2_Tape_fbf->insert(
+                                            tuple, READ_OP_CONTEXT(rel_53_new_m2_Tape_fbf_op_ctxt));
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m2_Tape+_fbf(oldSymbol) :- 
+   +m2_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [130:0-130:1])_");
+                    if (!(rel_30_delta_m2_Configuration_fff->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_53_new_m2_Tape_fbf_op_ctxt, rel_53_new_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_15_m2_Tape_fbf_op_ctxt, rel_15_m2_Tape_fbf->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                if (!(rel_15_m2_Tape_fbf->contains(Tuple<RamDomain, 1>{{ramBitCast(env0[2])}},
+                                            READ_OP_CONTEXT(rel_15_m2_Tape_fbf_op_ctxt)))) {
+                                    Tuple<RamDomain, 1> tuple{{ramBitCast(env0[2])}};
+                                    rel_53_new_m2_Tape_fbf->insert(
+                                            tuple, READ_OP_CONTEXT(rel_53_new_m2_Tape_fbf_op_ctxt));
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m2_Tape+_fbf(oldSymbol) :- 
+   +m2_Tape+_fbf(newSymbol),
+   Transition(currentState,_,oldSymbol,newSymbol,_).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [134:0-134:1])_");
+                    if (!(rel_31_delta_m2_Tape_fbf->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_31_delta_m2_Tape_fbf_op_ctxt,
+                                    rel_31_delta_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_53_new_m2_Tape_fbf_op_ctxt, rel_53_new_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_15_m2_Tape_fbf_op_ctxt, rel_15_m2_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_31_delta_m2_Tape_fbf) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[4] = MIN_RAM_SIGNED;
+                                upper[4] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00010(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_15_m2_Tape_fbf->contains(
+                                                Tuple<RamDomain, 1>{{ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_15_m2_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 1> tuple{{ramBitCast(env1[2])}};
+                                        rel_53_new_m2_Tape_fbf->insert(
+                                                tuple, READ_OP_CONTEXT(rel_53_new_m2_Tape_fbf_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m2_Tape+_fbf(symbol) :- 
+   +m2_Tape+_fbf(symbol).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [137:0-137:1])_");
+                    if (!(rel_31_delta_m2_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_31_delta_m2_Tape_fbf_op_ctxt,
+                                    rel_31_delta_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_53_new_m2_Tape_fbf_op_ctxt, rel_53_new_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_15_m2_Tape_fbf_op_ctxt, rel_15_m2_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_31_delta_m2_Tape_fbf) {
+                                if (!(rel_15_m2_Tape_fbf->contains(Tuple<RamDomain, 1>{{ramBitCast(env0[0])}},
+                                            READ_OP_CONTEXT(rel_15_m2_Tape_fbf_op_ctxt)))) {
+                                    Tuple<RamDomain, 1> tuple{{ramBitCast(env0[0])}};
+                                    rel_53_new_m2_Tape_fbf->insert(
+                                            tuple, READ_OP_CONTEXT(rel_53_new_m2_Tape_fbf_op_ctxt));
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m2_Tape+_fbf(oldSymbol) :- 
+   +m2_Configuration+_bbb(+functor7,nextState,+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [147:0-147:1])_");
+                    if (!(rel_28_delta_m2_Configuration_bbb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_28_delta_m2_Configuration_bbb_op_ctxt,
+                                    rel_28_delta_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_53_new_m2_Tape_fbf_op_ctxt, rel_53_new_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_15_m2_Tape_fbf_op_ctxt, rel_15_m2_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_28_delta_m2_Configuration_bbb) {
+                                Tuple<RamDomain, 5> lower{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_01001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_15_m2_Tape_fbf->contains(
+                                                Tuple<RamDomain, 1>{{ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_15_m2_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 1> tuple{{ramBitCast(env1[2])}};
+                                        rel_53_new_m2_Tape_fbf->insert(
+                                                tuple, READ_OP_CONTEXT(rel_53_new_m2_Tape_fbf_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m2_Tape+_fbf(oldSymbol) :- 
+   +m2_Configuration+_bbb(+functor9,nextState,+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [150:0-150:1])_");
+                    if (!(rel_28_delta_m2_Configuration_bbb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_28_delta_m2_Configuration_bbb_op_ctxt,
+                                    rel_28_delta_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_53_new_m2_Tape_fbf_op_ctxt, rel_53_new_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_15_m2_Tape_fbf_op_ctxt, rel_15_m2_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_28_delta_m2_Configuration_bbb) {
+                                Tuple<RamDomain, 5> lower{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_01001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_15_m2_Tape_fbf->contains(
+                                                Tuple<RamDomain, 1>{{ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_15_m2_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 1> tuple{{ramBitCast(env1[2])}};
+                                        rel_53_new_m2_Tape_fbf->insert(
+                                                tuple, READ_OP_CONTEXT(rel_53_new_m2_Tape_fbf_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m2_Tape+_fbf(oldSymbol) :- 
+   +m2_Configuration+_ffb(+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [154:0-154:1])_");
+                    if (!(rel_29_delta_m2_Configuration_ffb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_29_delta_m2_Configuration_ffb_op_ctxt,
+                                    rel_29_delta_m2_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_53_new_m2_Tape_fbf_op_ctxt, rel_53_new_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_15_m2_Tape_fbf_op_ctxt, rel_15_m2_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_29_delta_m2_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_15_m2_Tape_fbf->contains(
+                                                Tuple<RamDomain, 1>{{ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_15_m2_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 1> tuple{{ramBitCast(env1[2])}};
+                                        rel_53_new_m2_Tape_fbf->insert(
+                                                tuple, READ_OP_CONTEXT(rel_53_new_m2_Tape_fbf_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m2_Tape+_fbf(oldSymbol) :- 
+   +m2_Configuration+_ffb(+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [157:0-157:1])_");
+                    if (!(rel_29_delta_m2_Configuration_ffb->empty()) && !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_29_delta_m2_Configuration_ffb_op_ctxt,
+                                    rel_29_delta_m2_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_53_new_m2_Tape_fbf_op_ctxt, rel_53_new_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_15_m2_Tape_fbf_op_ctxt, rel_15_m2_Tape_fbf->createContext());
+                            for (const auto& env0 : *rel_29_delta_m2_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_15_m2_Tape_fbf->contains(
+                                                Tuple<RamDomain, 1>{{ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_15_m2_Tape_fbf_op_ctxt)))) {
+                                        Tuple<RamDomain, 1> tuple{{ramBitCast(env1[2])}};
+                                        rel_53_new_m2_Tape_fbf->insert(
+                                                tuple, READ_OP_CONTEXT(rel_53_new_m2_Tape_fbf_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                SECTION_END
+                SECTION_START
+                    ;
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m2_Configuration+_bbb(position,currentState,step) :- 
+   +m2_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [128:0-128:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_30_delta_m2_Configuration_fff->empty()) &&
+                            !(rel_66_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt,
+                                    rel_50_new_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt,
+                                    rel_12_m2_Configuration_bbb->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_36_delta_Tape_fbf->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[2]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                            !(rel_12_m2_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                ramBitCast(env1[2])}};
+                                        rel_50_new_m2_Configuration_bbb->insert(tuple,
+                                                READ_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m2_Configuration+_bbb(position,currentState,step) :- 
+   +m2_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [128:0-128:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_14_m2_Configuration_fff->empty()) &&
+                            !(rel_36_delta_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt,
+                                    rel_50_new_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt,
+                                    rel_12_m2_Configuration_bbb->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_12_m2_Configuration_bbb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                ramBitCast(env1[2])}};
+                                        rel_50_new_m2_Configuration_bbb->insert(tuple,
+                                                READ_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m2_Configuration+_bbb(position,currentState,step) :- 
+   +m2_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [131:0-131:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_30_delta_m2_Configuration_fff->empty()) &&
+                            !(rel_66_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt,
+                                    rel_50_new_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt,
+                                    rel_12_m2_Configuration_bbb->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_36_delta_Tape_fbf->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[2]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                            !(rel_12_m2_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env1[0]),
+                                                            ramBitCast(env0[0]), ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                ramBitCast(env1[2])}};
+                                        rel_50_new_m2_Configuration_bbb->insert(tuple,
+                                                READ_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m2_Configuration+_bbb(position,currentState,step) :- 
+   +m2_Configuration+_fff(),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [131:0-131:1])_");
+                    if (!(rel_70_Transition->empty()) && !(rel_14_m2_Configuration_fff->empty()) &&
+                            !(rel_36_delta_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt,
+                                    rel_50_new_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt,
+                                    rel_12_m2_Configuration_bbb->createContext());
+                            Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            lower[1] = MIN_RAM_SIGNED;
+                            upper[1] = MAX_RAM_SIGNED;
+                            lower[2] = MIN_RAM_SIGNED;
+                            upper[2] = MAX_RAM_SIGNED;
+                            lower[3] = MIN_RAM_SIGNED;
+                            upper[3] = MAX_RAM_SIGNED;
+                            auto range = rel_70_Transition->lowerUpperRange_00001(
+                                    lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                            for (const auto& env0 : range) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[2]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[2]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_12_m2_Configuration_bbb->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt)))) {
+                                        Tuple<RamDomain, 3> tuple{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                ramBitCast(env1[2])}};
+                                        rel_50_new_m2_Configuration_bbb->insert(tuple,
+                                                READ_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m2_Configuration+_bbb(position,currentState,step) :- 
+   +m2_Tape+_fbf(newSymbol),
+   Transition(currentState,_,oldSymbol,newSymbol,_),
+   Tape+_fbf(position,oldSymbol,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [135:0-135:1])_");
+                    if (!(rel_66_Tape_fbf->empty()) && !(rel_31_delta_m2_Tape_fbf->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_31_delta_m2_Tape_fbf_op_ctxt,
+                                    rel_31_delta_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt,
+                                    rel_50_new_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt,
+                                    rel_12_m2_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_31_delta_m2_Tape_fbf) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[4] = MIN_RAM_SIGNED;
+                                upper[4] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00010(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_36_delta_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[2]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                !(rel_12_m2_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_12_m2_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_50_new_m2_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m2_Configuration+_bbb(position,currentState,step) :- 
+   +m2_Tape+_fbf(newSymbol),
+   Transition(currentState,_,oldSymbol,newSymbol,_),
+   Tape+_fbf(position,oldSymbol,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [135:0-135:1])_");
+                    if (!(rel_36_delta_Tape_fbf->empty()) && !(rel_15_m2_Tape_fbf->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_15_m2_Tape_fbf_op_ctxt, rel_15_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt,
+                                    rel_50_new_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt,
+                                    rel_12_m2_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_15_m2_Tape_fbf) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[4] = MIN_RAM_SIGNED;
+                                upper[4] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00010(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_12_m2_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_50_new_m2_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m2_Configuration+_bbb(position,currentState,step) :- 
+   +m2_Configuration+_bbb(+functor7,nextState,+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [148:0-148:1])_");
+                    if (!(rel_66_Tape_fbf->empty()) && !(rel_28_delta_m2_Configuration_bbb->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_28_delta_m2_Configuration_bbb_op_ctxt,
+                                    rel_28_delta_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt,
+                                    rel_50_new_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt,
+                                    rel_12_m2_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_28_delta_m2_Configuration_bbb) {
+                                Tuple<RamDomain, 5> lower{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_01001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_36_delta_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[2]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                !(rel_12_m2_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_12_m2_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_50_new_m2_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m2_Configuration+_bbb(position,currentState,step) :- 
+   +m2_Configuration+_bbb(+functor7,nextState,+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [148:0-148:1])_");
+                    if (!(rel_36_delta_Tape_fbf->empty()) && !(rel_12_m2_Configuration_bbb->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt,
+                                    rel_50_new_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt,
+                                    rel_12_m2_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_12_m2_Configuration_bbb) {
+                                Tuple<RamDomain, 5> lower{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_01001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_12_m2_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_50_new_m2_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m2_Configuration+_bbb(position,currentState,step) :- 
+   +m2_Configuration+_bbb(+functor9,nextState,+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [151:0-151:1])_");
+                    if (!(rel_66_Tape_fbf->empty()) && !(rel_28_delta_m2_Configuration_bbb->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_28_delta_m2_Configuration_bbb_op_ctxt,
+                                    rel_28_delta_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt,
+                                    rel_50_new_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt,
+                                    rel_12_m2_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_28_delta_m2_Configuration_bbb) {
+                                Tuple<RamDomain, 5> lower{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_01001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_36_delta_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[2]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                !(rel_12_m2_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_12_m2_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_50_new_m2_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m2_Configuration+_bbb(position,currentState,step) :- 
+   +m2_Configuration+_bbb(+functor9,nextState,+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [151:0-151:1])_");
+                    if (!(rel_36_delta_Tape_fbf->empty()) && !(rel_12_m2_Configuration_bbb->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt,
+                                    rel_50_new_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt,
+                                    rel_12_m2_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_12_m2_Configuration_bbb) {
+                                Tuple<RamDomain, 5> lower{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{
+                                        {0, ramBitCast(env0[1]), 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_01001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_12_m2_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_50_new_m2_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m2_Configuration+_bbb(position,currentState,step) :- 
+   +m2_Configuration+_ffb(+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [155:0-155:1])_");
+                    if (!(rel_66_Tape_fbf->empty()) && !(rel_29_delta_m2_Configuration_ffb->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_29_delta_m2_Configuration_ffb_op_ctxt,
+                                    rel_29_delta_m2_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt,
+                                    rel_50_new_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt,
+                                    rel_12_m2_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_29_delta_m2_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_36_delta_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[2]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                !(rel_12_m2_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_12_m2_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_50_new_m2_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m2_Configuration+_bbb(position,currentState,step) :- 
+   +m2_Configuration+_ffb(+functor8),
+   Transition(currentState,nextState,oldSymbol,_,+abdul19_L_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul19_L_s = "L".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [155:0-155:1])_");
+                    if (!(rel_36_delta_Tape_fbf->empty()) && !(rel_13_m2_Configuration_ffb->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt,
+                                    rel_50_new_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt,
+                                    rel_12_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_13_m2_Configuration_ffb_op_ctxt,
+                                    rel_13_m2_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_13_m2_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(5))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_12_m2_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_50_new_m2_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m2_Configuration+_bbb(position,currentState,step) :- 
+   +m2_Configuration+_ffb(+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [158:0-158:1])_");
+                    if (!(rel_66_Tape_fbf->empty()) && !(rel_29_delta_m2_Configuration_ffb->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_29_delta_m2_Configuration_ffb_op_ctxt,
+                                    rel_29_delta_m2_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt,
+                                    rel_50_new_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt,
+                                    rel_12_m2_Configuration_bbb->createContext());
+                            for (const auto& env0 : *rel_29_delta_m2_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_36_delta_Tape_fbf->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[2]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                                !(rel_12_m2_Configuration_bbb->contains(
+                                                        Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                                ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                        READ_OP_CONTEXT(
+                                                                rel_12_m2_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_50_new_m2_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(
+                            R"_(+m2_Configuration+_bbb(position,currentState,step) :- 
+   +m2_Configuration+_ffb(+functor10),
+   Transition(currentState,nextState,oldSymbol,_,+abdul23_R_s),
+   Tape+_fbf(position,oldSymbol,step),
+   +abdul23_R_s = "R".
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [158:0-158:1])_");
+                    if (!(rel_36_delta_Tape_fbf->empty()) && !(rel_13_m2_Configuration_ffb->empty()) &&
+                            !(rel_70_Transition->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_70_Transition_op_ctxt, rel_70_Transition->createContext());
+                            CREATE_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt,
+                                    rel_50_new_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt,
+                                    rel_12_m2_Configuration_bbb->createContext());
+                            CREATE_OP_CONTEXT(rel_13_m2_Configuration_ffb_op_ctxt,
+                                    rel_13_m2_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_13_m2_Configuration_ffb) {
+                                Tuple<RamDomain, 5> lower{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                Tuple<RamDomain, 5> upper{{0, 0, 0, 0, ramBitCast(RamSigned(3))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[1] = MIN_RAM_SIGNED;
+                                upper[1] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                lower[3] = MIN_RAM_SIGNED;
+                                upper[3] = MAX_RAM_SIGNED;
+                                auto range = rel_70_Transition->lowerUpperRange_00001(
+                                        lower, upper, READ_OP_CONTEXT(rel_70_Transition_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    Tuple<RamDomain, 3> lower{{0, ramBitCast(env1[2]), 0}};
+                                    Tuple<RamDomain, 3> upper{{0, ramBitCast(env1[2]), 0}};
+                                    lower[0] = MIN_RAM_SIGNED;
+                                    upper[0] = MAX_RAM_SIGNED;
+                                    lower[2] = MIN_RAM_SIGNED;
+                                    upper[2] = MAX_RAM_SIGNED;
+                                    auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                            lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                    for (const auto& env2 : range) {
+                                        if (!(rel_12_m2_Configuration_bbb->contains(
+                                                    Tuple<RamDomain, 3>{{ramBitCast(env2[0]),
+                                                            ramBitCast(env1[0]), ramBitCast(env2[2])}},
+                                                    READ_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt)))) {
+                                            Tuple<RamDomain, 3> tuple{{ramBitCast(env2[0]),
+                                                    ramBitCast(env1[0]), ramBitCast(env2[2])}};
+                                            rel_50_new_m2_Configuration_bbb->insert(tuple,
+                                                    READ_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt));
+                                        }
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                SECTION_END
+                SECTION_START
+                    ;
+                    SignalHandler::instance()->setMsg(R"_(+m2_Configuration+_ffb(step) :- 
+   +m2_Tape+_fbf(symbol),
+   Tape+_fbf(position,symbol,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [138:0-138:1])_");
+                    if (!(rel_31_delta_m2_Tape_fbf->empty()) && !(rel_66_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(rel_31_delta_m2_Tape_fbf_op_ctxt,
+                                    rel_31_delta_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_51_new_m2_Configuration_ffb_op_ctxt,
+                                    rel_51_new_m2_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_13_m2_Configuration_ffb_op_ctxt,
+                                    rel_13_m2_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_31_delta_m2_Tape_fbf) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_66_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_36_delta_Tape_fbf->contains(
+                                                Tuple<RamDomain, 3>{{ramBitCast(env1[0]), ramBitCast(env0[0]),
+                                                        ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt))) &&
+                                            !(rel_13_m2_Configuration_ffb->contains(
+                                                    Tuple<RamDomain, 1>{{ramBitCast(env1[2])}},
+                                                    READ_OP_CONTEXT(rel_13_m2_Configuration_ffb_op_ctxt)))) {
+                                        Tuple<RamDomain, 1> tuple{{ramBitCast(env1[2])}};
+                                        rel_51_new_m2_Configuration_ffb->insert(tuple,
+                                                READ_OP_CONTEXT(rel_51_new_m2_Configuration_ffb_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                    SignalHandler::instance()->setMsg(R"_(+m2_Configuration+_ffb(step) :- 
+   +m2_Tape+_fbf(symbol),
+   Tape+_fbf(position,symbol,step).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE] [138:0-138:1])_");
+                    if (!(rel_15_m2_Tape_fbf->empty()) && !(rel_36_delta_Tape_fbf->empty())) {
+                        [&]() {
+                            CREATE_OP_CONTEXT(
+                                    rel_15_m2_Tape_fbf_op_ctxt, rel_15_m2_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_51_new_m2_Configuration_ffb_op_ctxt,
+                                    rel_51_new_m2_Configuration_ffb->createContext());
+                            CREATE_OP_CONTEXT(
+                                    rel_36_delta_Tape_fbf_op_ctxt, rel_36_delta_Tape_fbf->createContext());
+                            CREATE_OP_CONTEXT(rel_13_m2_Configuration_ffb_op_ctxt,
+                                    rel_13_m2_Configuration_ffb->createContext());
+                            for (const auto& env0 : *rel_15_m2_Tape_fbf) {
+                                Tuple<RamDomain, 3> lower{{0, ramBitCast(env0[0]), 0}};
+                                Tuple<RamDomain, 3> upper{{0, ramBitCast(env0[0]), 0}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                lower[2] = MIN_RAM_SIGNED;
+                                upper[2] = MAX_RAM_SIGNED;
+                                auto range = rel_36_delta_Tape_fbf->lowerUpperRange_010(
+                                        lower, upper, READ_OP_CONTEXT(rel_36_delta_Tape_fbf_op_ctxt));
+                                for (const auto& env1 : range) {
+                                    if (!(rel_13_m2_Configuration_ffb->contains(
+                                                Tuple<RamDomain, 1>{{ramBitCast(env1[2])}},
+                                                READ_OP_CONTEXT(rel_13_m2_Configuration_ffb_op_ctxt)))) {
+                                        Tuple<RamDomain, 1> tuple{{ramBitCast(env1[2])}};
+                                        rel_51_new_m2_Configuration_ffb->insert(tuple,
+                                                READ_OP_CONTEXT(rel_51_new_m2_Configuration_ffb_op_ctxt));
+                                    }
+                                }
+                            }
+                        }();
+                    }
+                SECTION_END
+            SECTIONS_END;
+            if (rel_40_new_m0_Configuration_ffb->empty() && rel_59_new_Tape_fff->empty() &&
+                    rel_42_new_m0_Tape_fbf->empty() && rel_39_new_m0_Configuration_bbb->empty() &&
+                    rel_41_new_m0_Configuration_fff->empty() && rel_44_new_m0_TapeLimits_fff->empty() &&
+                    rel_58_new_Tape_fbf->empty() && rel_55_new_Configuration_bbb->empty() &&
+                    rel_56_new_Configuration_ffb->empty() && rel_57_new_Configuration_fff->empty() &&
+                    rel_60_new_TapeLimits_fff->empty() && rel_47_new_m1_Configuration_fff->empty() &&
+                    rel_48_new_m1_Tape_fbf->empty() && rel_45_new_m1_Configuration_bbb->empty() &&
+                    rel_46_new_m1_Configuration_ffb->empty() && rel_49_new_m1_TapeLimits_fff->empty() &&
+                    rel_52_new_m2_Configuration_fff->empty() && rel_54_new_m2_TapeLimits_fff->empty() &&
+                    rel_53_new_m2_Tape_fbf->empty() && rel_50_new_m2_Configuration_bbb->empty() &&
+                    rel_51_new_m2_Configuration_ffb->empty())
+                break;
+            [&]() {
+                CREATE_OP_CONTEXT(rel_40_new_m0_Configuration_ffb_op_ctxt,
+                        rel_40_new_m0_Configuration_ffb->createContext());
+                CREATE_OP_CONTEXT(
+                        rel_2_m0_Configuration_ffb_op_ctxt, rel_2_m0_Configuration_ffb->createContext());
+                for (const auto& env0 : *rel_40_new_m0_Configuration_ffb) {
+                    Tuple<RamDomain, 1> tuple{{ramBitCast(env0[0])}};
+                    rel_2_m0_Configuration_ffb->insert(
+                            tuple, READ_OP_CONTEXT(rel_2_m0_Configuration_ffb_op_ctxt));
+                }
+            }();
+            std::swap(rel_18_delta_m0_Configuration_ffb, rel_40_new_m0_Configuration_ffb);
+            rel_40_new_m0_Configuration_ffb->purge();
+            [&]() {
+                CREATE_OP_CONTEXT(rel_59_new_Tape_fff_op_ctxt, rel_59_new_Tape_fff->createContext());
+                CREATE_OP_CONTEXT(rel_67_Tape_fff_op_ctxt, rel_67_Tape_fff->createContext());
+                for (const auto& env0 : *rel_59_new_Tape_fff) {
+                    Tuple<RamDomain, 3> tuple{
+                            {ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                    rel_67_Tape_fff->insert(tuple, READ_OP_CONTEXT(rel_67_Tape_fff_op_ctxt));
+                }
+            }();
+            std::swap(rel_37_delta_Tape_fff, rel_59_new_Tape_fff);
+            rel_59_new_Tape_fff->purge();
+            [&]() {
+                CREATE_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt, rel_4_m0_Tape_fbf->createContext());
+                CREATE_OP_CONTEXT(rel_42_new_m0_Tape_fbf_op_ctxt, rel_42_new_m0_Tape_fbf->createContext());
+                for (const auto& env0 : *rel_42_new_m0_Tape_fbf) {
+                    Tuple<RamDomain, 1> tuple{{ramBitCast(env0[0])}};
+                    rel_4_m0_Tape_fbf->insert(tuple, READ_OP_CONTEXT(rel_4_m0_Tape_fbf_op_ctxt));
+                }
+            }();
+            std::swap(rel_20_delta_m0_Tape_fbf, rel_42_new_m0_Tape_fbf);
+            rel_42_new_m0_Tape_fbf->purge();
+            [&]() {
+                CREATE_OP_CONTEXT(
+                        rel_1_m0_Configuration_bbb_op_ctxt, rel_1_m0_Configuration_bbb->createContext());
+                CREATE_OP_CONTEXT(rel_39_new_m0_Configuration_bbb_op_ctxt,
+                        rel_39_new_m0_Configuration_bbb->createContext());
+                for (const auto& env0 : *rel_39_new_m0_Configuration_bbb) {
+                    Tuple<RamDomain, 3> tuple{
+                            {ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                    rel_1_m0_Configuration_bbb->insert(
+                            tuple, READ_OP_CONTEXT(rel_1_m0_Configuration_bbb_op_ctxt));
+                }
+            }();
+            std::swap(rel_17_delta_m0_Configuration_bbb, rel_39_new_m0_Configuration_bbb);
+            rel_39_new_m0_Configuration_bbb->purge();
+            if (!(rel_41_new_m0_Configuration_fff->empty())) {
+                [&]() {
+                    CREATE_OP_CONTEXT(
+                            rel_3_m0_Configuration_fff_op_ctxt, rel_3_m0_Configuration_fff->createContext());
+                    Tuple<RamDomain, 0> tuple{{}};
+                    rel_3_m0_Configuration_fff->insert(
+                            tuple, READ_OP_CONTEXT(rel_3_m0_Configuration_fff_op_ctxt));
+                }();
+            }
+            std::swap(rel_19_delta_m0_Configuration_fff, rel_41_new_m0_Configuration_fff);
+            rel_41_new_m0_Configuration_fff->purge();
+            if (!(rel_44_new_m0_TapeLimits_fff->empty())) {
+                [&]() {
+                    CREATE_OP_CONTEXT(
+                            rel_6_m0_TapeLimits_fff_op_ctxt, rel_6_m0_TapeLimits_fff->createContext());
+                    Tuple<RamDomain, 0> tuple{{}};
+                    rel_6_m0_TapeLimits_fff->insert(tuple, READ_OP_CONTEXT(rel_6_m0_TapeLimits_fff_op_ctxt));
+                }();
+            }
+            std::swap(rel_22_delta_m0_TapeLimits_fff, rel_44_new_m0_TapeLimits_fff);
+            rel_44_new_m0_TapeLimits_fff->purge();
+            [&]() {
+                CREATE_OP_CONTEXT(rel_58_new_Tape_fbf_op_ctxt, rel_58_new_Tape_fbf->createContext());
+                CREATE_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt, rel_66_Tape_fbf->createContext());
+                for (const auto& env0 : *rel_58_new_Tape_fbf) {
+                    Tuple<RamDomain, 3> tuple{
+                            {ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                    rel_66_Tape_fbf->insert(tuple, READ_OP_CONTEXT(rel_66_Tape_fbf_op_ctxt));
+                }
+            }();
+            std::swap(rel_36_delta_Tape_fbf, rel_58_new_Tape_fbf);
+            rel_58_new_Tape_fbf->purge();
+            [&]() {
+                CREATE_OP_CONTEXT(
+                        rel_62_Configuration_bbb_op_ctxt, rel_62_Configuration_bbb->createContext());
+                CREATE_OP_CONTEXT(
+                        rel_55_new_Configuration_bbb_op_ctxt, rel_55_new_Configuration_bbb->createContext());
+                for (const auto& env0 : *rel_55_new_Configuration_bbb) {
+                    Tuple<RamDomain, 3> tuple{
+                            {ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                    rel_62_Configuration_bbb->insert(
+                            tuple, READ_OP_CONTEXT(rel_62_Configuration_bbb_op_ctxt));
+                }
+            }();
+            std::swap(rel_33_delta_Configuration_bbb, rel_55_new_Configuration_bbb);
+            rel_55_new_Configuration_bbb->purge();
+            [&]() {
+                CREATE_OP_CONTEXT(
+                        rel_56_new_Configuration_ffb_op_ctxt, rel_56_new_Configuration_ffb->createContext());
+                CREATE_OP_CONTEXT(
+                        rel_63_Configuration_ffb_op_ctxt, rel_63_Configuration_ffb->createContext());
+                for (const auto& env0 : *rel_56_new_Configuration_ffb) {
+                    Tuple<RamDomain, 3> tuple{
+                            {ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                    rel_63_Configuration_ffb->insert(
+                            tuple, READ_OP_CONTEXT(rel_63_Configuration_ffb_op_ctxt));
+                }
+            }();
+            std::swap(rel_34_delta_Configuration_ffb, rel_56_new_Configuration_ffb);
+            rel_56_new_Configuration_ffb->purge();
+            [&]() {
+                CREATE_OP_CONTEXT(
+                        rel_64_Configuration_fff_op_ctxt, rel_64_Configuration_fff->createContext());
+                CREATE_OP_CONTEXT(
+                        rel_57_new_Configuration_fff_op_ctxt, rel_57_new_Configuration_fff->createContext());
+                for (const auto& env0 : *rel_57_new_Configuration_fff) {
+                    Tuple<RamDomain, 3> tuple{
+                            {ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                    rel_64_Configuration_fff->insert(
+                            tuple, READ_OP_CONTEXT(rel_64_Configuration_fff_op_ctxt));
+                }
+            }();
+            std::swap(rel_35_delta_Configuration_fff, rel_57_new_Configuration_fff);
+            rel_57_new_Configuration_fff->purge();
+            [&]() {
+                CREATE_OP_CONTEXT(
+                        rel_60_new_TapeLimits_fff_op_ctxt, rel_60_new_TapeLimits_fff->createContext());
+                CREATE_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                for (const auto& env0 : *rel_60_new_TapeLimits_fff) {
+                    Tuple<RamDomain, 3> tuple{
+                            {ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                    rel_69_TapeLimits_fff->insert(tuple, READ_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt));
+                }
+            }();
+            std::swap(rel_38_delta_TapeLimits_fff, rel_60_new_TapeLimits_fff);
+            rel_60_new_TapeLimits_fff->purge();
+            if (!(rel_47_new_m1_Configuration_fff->empty())) {
+                [&]() {
+                    CREATE_OP_CONTEXT(
+                            rel_9_m1_Configuration_fff_op_ctxt, rel_9_m1_Configuration_fff->createContext());
+                    Tuple<RamDomain, 0> tuple{{}};
+                    rel_9_m1_Configuration_fff->insert(
+                            tuple, READ_OP_CONTEXT(rel_9_m1_Configuration_fff_op_ctxt));
+                }();
+            }
+            std::swap(rel_25_delta_m1_Configuration_fff, rel_47_new_m1_Configuration_fff);
+            rel_47_new_m1_Configuration_fff->purge();
+            [&]() {
+                CREATE_OP_CONTEXT(rel_10_m1_Tape_fbf_op_ctxt, rel_10_m1_Tape_fbf->createContext());
+                CREATE_OP_CONTEXT(rel_48_new_m1_Tape_fbf_op_ctxt, rel_48_new_m1_Tape_fbf->createContext());
+                for (const auto& env0 : *rel_48_new_m1_Tape_fbf) {
+                    Tuple<RamDomain, 1> tuple{{ramBitCast(env0[0])}};
+                    rel_10_m1_Tape_fbf->insert(tuple, READ_OP_CONTEXT(rel_10_m1_Tape_fbf_op_ctxt));
+                }
+            }();
+            std::swap(rel_26_delta_m1_Tape_fbf, rel_48_new_m1_Tape_fbf);
+            rel_48_new_m1_Tape_fbf->purge();
+            [&]() {
+                CREATE_OP_CONTEXT(
+                        rel_7_m1_Configuration_bbb_op_ctxt, rel_7_m1_Configuration_bbb->createContext());
+                CREATE_OP_CONTEXT(rel_45_new_m1_Configuration_bbb_op_ctxt,
+                        rel_45_new_m1_Configuration_bbb->createContext());
+                for (const auto& env0 : *rel_45_new_m1_Configuration_bbb) {
+                    Tuple<RamDomain, 3> tuple{
+                            {ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                    rel_7_m1_Configuration_bbb->insert(
+                            tuple, READ_OP_CONTEXT(rel_7_m1_Configuration_bbb_op_ctxt));
+                }
+            }();
+            std::swap(rel_23_delta_m1_Configuration_bbb, rel_45_new_m1_Configuration_bbb);
+            rel_45_new_m1_Configuration_bbb->purge();
+            [&]() {
+                CREATE_OP_CONTEXT(rel_46_new_m1_Configuration_ffb_op_ctxt,
+                        rel_46_new_m1_Configuration_ffb->createContext());
+                CREATE_OP_CONTEXT(
+                        rel_8_m1_Configuration_ffb_op_ctxt, rel_8_m1_Configuration_ffb->createContext());
+                for (const auto& env0 : *rel_46_new_m1_Configuration_ffb) {
+                    Tuple<RamDomain, 1> tuple{{ramBitCast(env0[0])}};
+                    rel_8_m1_Configuration_ffb->insert(
+                            tuple, READ_OP_CONTEXT(rel_8_m1_Configuration_ffb_op_ctxt));
+                }
+            }();
+            std::swap(rel_24_delta_m1_Configuration_ffb, rel_46_new_m1_Configuration_ffb);
+            rel_46_new_m1_Configuration_ffb->purge();
+            if (!(rel_49_new_m1_TapeLimits_fff->empty())) {
+                [&]() {
+                    CREATE_OP_CONTEXT(
+                            rel_11_m1_TapeLimits_fff_op_ctxt, rel_11_m1_TapeLimits_fff->createContext());
+                    Tuple<RamDomain, 0> tuple{{}};
+                    rel_11_m1_TapeLimits_fff->insert(
+                            tuple, READ_OP_CONTEXT(rel_11_m1_TapeLimits_fff_op_ctxt));
+                }();
+            }
+            std::swap(rel_27_delta_m1_TapeLimits_fff, rel_49_new_m1_TapeLimits_fff);
+            rel_49_new_m1_TapeLimits_fff->purge();
+            if (!(rel_52_new_m2_Configuration_fff->empty())) {
+                [&]() {
+                    CREATE_OP_CONTEXT(rel_14_m2_Configuration_fff_op_ctxt,
+                            rel_14_m2_Configuration_fff->createContext());
+                    Tuple<RamDomain, 0> tuple{{}};
+                    rel_14_m2_Configuration_fff->insert(
+                            tuple, READ_OP_CONTEXT(rel_14_m2_Configuration_fff_op_ctxt));
+                }();
+            }
+            std::swap(rel_30_delta_m2_Configuration_fff, rel_52_new_m2_Configuration_fff);
+            rel_52_new_m2_Configuration_fff->purge();
+            if (!(rel_54_new_m2_TapeLimits_fff->empty())) {
+                [&]() {
+                    CREATE_OP_CONTEXT(
+                            rel_16_m2_TapeLimits_fff_op_ctxt, rel_16_m2_TapeLimits_fff->createContext());
+                    Tuple<RamDomain, 0> tuple{{}};
+                    rel_16_m2_TapeLimits_fff->insert(
+                            tuple, READ_OP_CONTEXT(rel_16_m2_TapeLimits_fff_op_ctxt));
+                }();
+            }
+            std::swap(rel_32_delta_m2_TapeLimits_fff, rel_54_new_m2_TapeLimits_fff);
+            rel_54_new_m2_TapeLimits_fff->purge();
+            [&]() {
+                CREATE_OP_CONTEXT(rel_53_new_m2_Tape_fbf_op_ctxt, rel_53_new_m2_Tape_fbf->createContext());
+                CREATE_OP_CONTEXT(rel_15_m2_Tape_fbf_op_ctxt, rel_15_m2_Tape_fbf->createContext());
+                for (const auto& env0 : *rel_53_new_m2_Tape_fbf) {
+                    Tuple<RamDomain, 1> tuple{{ramBitCast(env0[0])}};
+                    rel_15_m2_Tape_fbf->insert(tuple, READ_OP_CONTEXT(rel_15_m2_Tape_fbf_op_ctxt));
+                }
+            }();
+            std::swap(rel_31_delta_m2_Tape_fbf, rel_53_new_m2_Tape_fbf);
+            rel_53_new_m2_Tape_fbf->purge();
+            [&]() {
+                CREATE_OP_CONTEXT(rel_50_new_m2_Configuration_bbb_op_ctxt,
+                        rel_50_new_m2_Configuration_bbb->createContext());
+                CREATE_OP_CONTEXT(
+                        rel_12_m2_Configuration_bbb_op_ctxt, rel_12_m2_Configuration_bbb->createContext());
+                for (const auto& env0 : *rel_50_new_m2_Configuration_bbb) {
+                    Tuple<RamDomain, 3> tuple{
+                            {ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                    rel_12_m2_Configuration_bbb->insert(
+                            tuple, READ_OP_CONTEXT(rel_12_m2_Configuration_bbb_op_ctxt));
+                }
+            }();
+            std::swap(rel_28_delta_m2_Configuration_bbb, rel_50_new_m2_Configuration_bbb);
+            rel_50_new_m2_Configuration_bbb->purge();
+            [&]() {
+                CREATE_OP_CONTEXT(rel_51_new_m2_Configuration_ffb_op_ctxt,
+                        rel_51_new_m2_Configuration_ffb->createContext());
+                CREATE_OP_CONTEXT(
+                        rel_13_m2_Configuration_ffb_op_ctxt, rel_13_m2_Configuration_ffb->createContext());
+                for (const auto& env0 : *rel_51_new_m2_Configuration_ffb) {
+                    Tuple<RamDomain, 1> tuple{{ramBitCast(env0[0])}};
+                    rel_13_m2_Configuration_ffb->insert(
+                            tuple, READ_OP_CONTEXT(rel_13_m2_Configuration_ffb_op_ctxt));
+                }
+            }();
+            std::swap(rel_29_delta_m2_Configuration_ffb, rel_51_new_m2_Configuration_ffb);
+            rel_51_new_m2_Configuration_ffb->purge();
+            iter++;
+        }
+        iter = 0;
+        rel_18_delta_m0_Configuration_ffb->purge();
+        rel_40_new_m0_Configuration_ffb->purge();
+        rel_37_delta_Tape_fff->purge();
+        rel_59_new_Tape_fff->purge();
+        rel_20_delta_m0_Tape_fbf->purge();
+        rel_42_new_m0_Tape_fbf->purge();
+        rel_17_delta_m0_Configuration_bbb->purge();
+        rel_39_new_m0_Configuration_bbb->purge();
+        rel_19_delta_m0_Configuration_fff->purge();
+        rel_41_new_m0_Configuration_fff->purge();
+        rel_22_delta_m0_TapeLimits_fff->purge();
+        rel_44_new_m0_TapeLimits_fff->purge();
+        rel_36_delta_Tape_fbf->purge();
+        rel_58_new_Tape_fbf->purge();
+        rel_33_delta_Configuration_bbb->purge();
+        rel_55_new_Configuration_bbb->purge();
+        rel_34_delta_Configuration_ffb->purge();
+        rel_56_new_Configuration_ffb->purge();
+        rel_35_delta_Configuration_fff->purge();
+        rel_57_new_Configuration_fff->purge();
+        rel_38_delta_TapeLimits_fff->purge();
+        rel_60_new_TapeLimits_fff->purge();
+        rel_25_delta_m1_Configuration_fff->purge();
+        rel_47_new_m1_Configuration_fff->purge();
+        rel_26_delta_m1_Tape_fbf->purge();
+        rel_48_new_m1_Tape_fbf->purge();
+        rel_23_delta_m1_Configuration_bbb->purge();
+        rel_45_new_m1_Configuration_bbb->purge();
+        rel_24_delta_m1_Configuration_ffb->purge();
+        rel_46_new_m1_Configuration_ffb->purge();
+        rel_27_delta_m1_TapeLimits_fff->purge();
+        rel_49_new_m1_TapeLimits_fff->purge();
+        rel_30_delta_m2_Configuration_fff->purge();
+        rel_52_new_m2_Configuration_fff->purge();
+        rel_32_delta_m2_TapeLimits_fff->purge();
+        rel_54_new_m2_TapeLimits_fff->purge();
+        rel_31_delta_m2_Tape_fbf->purge();
+        rel_53_new_m2_Tape_fbf->purge();
+        rel_28_delta_m2_Configuration_bbb->purge();
+        rel_50_new_m2_Configuration_bbb->purge();
+        rel_29_delta_m2_Configuration_ffb->purge();
+        rel_51_new_m2_Configuration_ffb->purge();
+        if (performIO) rel_71_newedb1->purge();
+        if (performIO) rel_2_m0_Configuration_ffb->purge();
+        if (performIO) rel_70_Transition->purge();
+        if (performIO) rel_4_m0_Tape_fbf->purge();
+        if (performIO) rel_1_m0_Configuration_bbb->purge();
+        if (performIO) rel_5_m0_Tape_fff->purge();
+        if (performIO) rel_72_newedb2->purge();
+        if (performIO) rel_73_newedb3->purge();
+        if (performIO) rel_3_m0_Configuration_fff->purge();
+        if (performIO) rel_6_m0_TapeLimits_fff->purge();
+        if (performIO) rel_66_Tape_fbf->purge();
+        if (performIO) rel_62_Configuration_bbb->purge();
+        if (performIO) rel_63_Configuration_ffb->purge();
+        if (performIO) rel_9_m1_Configuration_fff->purge();
+        if (performIO) rel_10_m1_Tape_fbf->purge();
+        if (performIO) rel_7_m1_Configuration_bbb->purge();
+        if (performIO) rel_8_m1_Configuration_ffb->purge();
+        if (performIO) rel_11_m1_TapeLimits_fff->purge();
+        if (performIO) rel_14_m2_Configuration_fff->purge();
+        if (performIO) rel_16_m2_TapeLimits_fff->purge();
+        if (performIO) rel_15_m2_Tape_fbf->purge();
+        if (performIO) rel_12_m2_Configuration_bbb->purge();
+        if (performIO) rel_13_m2_Configuration_ffb->purge();
+        SignalHandler::instance()->setMsg(R"_(Tape(arg0,arg1,arg2) :- 
+   Tape+_fff(arg0,arg1,arg2).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE][MAGIC_FILE][MAGIC_FILE] [162:0-162:1])_");
+        if (!(rel_67_Tape_fff->empty())) {
+            [&]() {
+                CREATE_OP_CONTEXT(rel_65_Tape_op_ctxt, rel_65_Tape->createContext());
+                CREATE_OP_CONTEXT(rel_67_Tape_fff_op_ctxt, rel_67_Tape_fff->createContext());
+                for (const auto& env0 : *rel_67_Tape_fff) {
+                    Tuple<RamDomain, 3> tuple{
+                            {ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                    rel_65_Tape->insert(tuple, READ_OP_CONTEXT(rel_65_Tape_op_ctxt));
+                }
+            }();
+        }
+        if (performIO) {
+            try {
+                std::map<std::string, std::string> directiveMap(
+                        {{"IO", "file"}, {"attributeNames", "position\tsymbol\tstep"},
+                                {"filename", "./Tape.csv"}, {"name", "Tape"}, {"operation", "output"},
+                                {"types",
+                                        "{\"Tape\": {\"arity\": 3, \"auxArity\": 0, \"types\": "
+                                        "[\"i:number\", \"s:Alphabet\", \"i:number\"]}, \"records\": {}}"}});
+                if (!outputDirectory.empty() && directiveMap["filename"].front() != '/') {
+                    directiveMap["filename"] = outputDirectory + "/" + directiveMap["filename"];
+                }
+                IOSystem::getInstance()
+                        .getWriter(directiveMap, symTable, recordTable)
+                        ->writeAll(*rel_65_Tape);
+            } catch (std::exception& e) {
+                std::cerr << e.what();
+                exit(1);
+            }
+        }
+        if (performIO) rel_67_Tape_fff->purge();
+        SignalHandler::instance()->setMsg(R"_(Configuration(arg0,arg1,arg2) :- 
+   Configuration+_fff(arg0,arg1,arg2).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE][MAGIC_FILE][MAGIC_FILE] [164:0-164:1])_");
+        if (!(rel_64_Configuration_fff->empty())) {
+            [&]() {
+                CREATE_OP_CONTEXT(
+                        rel_64_Configuration_fff_op_ctxt, rel_64_Configuration_fff->createContext());
+                CREATE_OP_CONTEXT(rel_61_Configuration_op_ctxt, rel_61_Configuration->createContext());
+                for (const auto& env0 : *rel_64_Configuration_fff) {
+                    Tuple<RamDomain, 3> tuple{
+                            {ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                    rel_61_Configuration->insert(tuple, READ_OP_CONTEXT(rel_61_Configuration_op_ctxt));
+                }
+            }();
+        }
+        if (performIO) {
+            try {
+                std::map<std::string, std::string> directiveMap({{"IO", "file"},
+                        {"attributeNames", "position\tstate\tstep"}, {"filename", "./Configuration.csv"},
+                        {"name", "Configuration"}, {"operation", "output"},
+                        {"types",
+                                "{\"Configuration\": {\"arity\": 3, \"auxArity\": 0, \"types\": "
+                                "[\"i:number\", \"s:State\", \"i:number\"]}, \"records\": {}}"}});
+                if (!outputDirectory.empty() && directiveMap["filename"].front() != '/') {
+                    directiveMap["filename"] = outputDirectory + "/" + directiveMap["filename"];
+                }
+                IOSystem::getInstance()
+                        .getWriter(directiveMap, symTable, recordTable)
+                        ->writeAll(*rel_61_Configuration);
+            } catch (std::exception& e) {
+                std::cerr << e.what();
+                exit(1);
+            }
+        }
+        if (performIO) rel_64_Configuration_fff->purge();
+        SignalHandler::instance()->setMsg(R"_(TapeLimits(arg0,arg1,arg2) :- 
+   TapeLimits+_fff(arg0,arg1,arg2).
+in file /home/sarc9328/souffle/tests/evaluation/magic_turing1/magic_turing1.dl[MAGIC_FILE][MAGIC_FILE][MAGIC_FILE] [166:0-166:1])_");
+        if (!(rel_69_TapeLimits_fff->empty())) {
+            [&]() {
+                CREATE_OP_CONTEXT(rel_68_TapeLimits_op_ctxt, rel_68_TapeLimits->createContext());
+                CREATE_OP_CONTEXT(rel_69_TapeLimits_fff_op_ctxt, rel_69_TapeLimits_fff->createContext());
+                for (const auto& env0 : *rel_69_TapeLimits_fff) {
+                    Tuple<RamDomain, 3> tuple{
+                            {ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2])}};
+                    rel_68_TapeLimits->insert(tuple, READ_OP_CONTEXT(rel_68_TapeLimits_op_ctxt));
+                }
+            }();
+        }
+        if (performIO) {
+            try {
+                std::map<std::string, std::string> directiveMap({{"IO", "file"},
+                        {"attributeNames", "step\tleft\tright"}, {"filename", "./TapeLimits.csv"},
+                        {"name", "TapeLimits"}, {"operation", "output"},
+                        {"types",
+                                "{\"TapeLimits\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"i:number\", "
+                                "\"i:number\", \"i:number\"]}, \"records\": {}}"}});
+                if (!outputDirectory.empty() && directiveMap["filename"].front() != '/') {
+                    directiveMap["filename"] = outputDirectory + "/" + directiveMap["filename"];
+                }
+                IOSystem::getInstance()
+                        .getWriter(directiveMap, symTable, recordTable)
+                        ->writeAll(*rel_68_TapeLimits);
+            } catch (std::exception& e) {
+                std::cerr << e.what();
+                exit(1);
+            }
+        }
+        if (performIO) rel_69_TapeLimits_fff->purge();
+
+        // -- relation hint statistics --
+        SignalHandler::instance()->reset();
+    }
+
+public:
+    void run() override {
+        runFunction(".", ".", false);
+    }
+
+public:
+    void runAll(std::string inputDirectory = ".", std::string outputDirectory = ".") override {
+        runFunction(inputDirectory, outputDirectory, true);
+    }
+
+public:
+    void printAll(std::string outputDirectory = ".") override {
+        try {
+            std::map<std::string, std::string> directiveMap(
+                    {{"IO", "file"}, {"attributeNames", "position\tsymbol\tstep"}, {"filename", "./Tape.csv"},
+                            {"name", "Tape"}, {"operation", "output"},
+                            {"types",
+                                    "{\"Tape\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"i:number\", "
+                                    "\"s:Alphabet\", \"i:number\"]}, \"records\": {}}"}});
+            if (!outputDirectory.empty() && directiveMap["IO"] == "file" &&
+                    directiveMap["filename"].front() != '/') {
+                directiveMap["filename"] = outputDirectory + "/" + directiveMap["filename"];
+            }
+            IOSystem::getInstance().getWriter(directiveMap, symTable, recordTable)->writeAll(*rel_65_Tape);
+        } catch (std::exception& e) {
+            std::cerr << e.what();
+            exit(1);
+        }
+        try {
+            std::map<std::string, std::string> directiveMap({{"IO", "file"},
+                    {"attributeNames", "position\tstate\tstep"}, {"filename", "./Configuration.csv"},
+                    {"name", "Configuration"}, {"operation", "output"},
+                    {"types",
+                            "{\"Configuration\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"i:number\", "
+                            "\"s:State\", \"i:number\"]}, \"records\": {}}"}});
+            if (!outputDirectory.empty() && directiveMap["IO"] == "file" &&
+                    directiveMap["filename"].front() != '/') {
+                directiveMap["filename"] = outputDirectory + "/" + directiveMap["filename"];
+            }
+            IOSystem::getInstance()
+                    .getWriter(directiveMap, symTable, recordTable)
+                    ->writeAll(*rel_61_Configuration);
+        } catch (std::exception& e) {
+            std::cerr << e.what();
+            exit(1);
+        }
+        try {
+            std::map<std::string, std::string> directiveMap(
+                    {{"IO", "file"}, {"attributeNames", "step\tleft\tright"},
+                            {"filename", "./TapeLimits.csv"}, {"name", "TapeLimits"}, {"operation", "output"},
+                            {"types",
+                                    "{\"TapeLimits\": {\"arity\": 3, \"auxArity\": 0, \"types\": "
+                                    "[\"i:number\", \"i:number\", \"i:number\"]}, \"records\": {}}"}});
+            if (!outputDirectory.empty() && directiveMap["IO"] == "file" &&
+                    directiveMap["filename"].front() != '/') {
+                directiveMap["filename"] = outputDirectory + "/" + directiveMap["filename"];
+            }
+            IOSystem::getInstance()
+                    .getWriter(directiveMap, symTable, recordTable)
+                    ->writeAll(*rel_68_TapeLimits);
+        } catch (std::exception& e) {
+            std::cerr << e.what();
+            exit(1);
+        }
+    }
+
+public:
+    void loadAll(std::string inputDirectory = ".") override {}
+
+public:
+    void dumpInputs(std::ostream& out = std::cout) override {}
+
+public:
+    void dumpOutputs(std::ostream& out = std::cout) override {
+        try {
+            std::map<std::string, std::string> rwOperation;
+            rwOperation["IO"] = "stdout";
+            rwOperation["name"] = "Tape";
+            rwOperation["types"] =
+                    "{\"Tape\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"i:number\", \"s:Alphabet\", "
+                    "\"i:number\"]}}";
+            IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_65_Tape);
+        } catch (std::exception& e) {
+            std::cerr << e.what();
+            exit(1);
+        }
+        try {
+            std::map<std::string, std::string> rwOperation;
+            rwOperation["IO"] = "stdout";
+            rwOperation["name"] = "Configuration";
+            rwOperation["types"] =
+                    "{\"Configuration\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"i:number\", "
+                    "\"s:State\", \"i:number\"]}}";
+            IOSystem::getInstance()
+                    .getWriter(rwOperation, symTable, recordTable)
+                    ->writeAll(*rel_61_Configuration);
+        } catch (std::exception& e) {
+            std::cerr << e.what();
+            exit(1);
+        }
+        try {
+            std::map<std::string, std::string> rwOperation;
+            rwOperation["IO"] = "stdout";
+            rwOperation["name"] = "TapeLimits";
+            rwOperation["types"] =
+                    "{\"TapeLimits\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"i:number\", "
+                    "\"i:number\", \"i:number\"]}}";
+            IOSystem::getInstance()
+                    .getWriter(rwOperation, symTable, recordTable)
+                    ->writeAll(*rel_68_TapeLimits);
+        } catch (std::exception& e) {
+            std::cerr << e.what();
+            exit(1);
+        }
+    }
+
+public:
+    SymbolTable& getSymbolTable() override {
+        return symTable;
+    }
+};
+SouffleProgram* newInstance_bad() {
+    return new Sf_bad;
+}
+SymbolTable* getST_bad(SouffleProgram* p) {
+    return &reinterpret_cast<Sf_bad*>(p)->symTable;
+}
+
+#ifdef __EMBEDDED_SOUFFLE__
+class factory_Sf_bad : public souffle::ProgramFactory {
+    SouffleProgram* newInstance() {
+        return new Sf_bad();
+    };
+
+public:
+    factory_Sf_bad() : ProgramFactory("bad") {}
+};
+static factory_Sf_bad __factory_Sf_bad_instance;
+}
+#else
+}
+int main(int argc, char** argv) {
+    try {
+        souffle::CmdOptions opt(R"(magic_turing1.dl)", R"(.)", R"(.)", false, R"()", 1);
+        if (!opt.parse(argc, argv)) return 1;
+        souffle::Sf_bad obj;
+#if defined(_OPENMP)
+        obj.setNumThreads(opt.getNumJobs());
+
+#endif
+        obj.runAll(opt.getInputFileDir(), opt.getOutputFileDir());
+        return 0;
+    } catch (std::exception& e) {
+        souffle::SignalHandler::instance()->error(e.what());
+    }
+}
+
+#endif
diff --git a/tests/example/minpath1/ShortestPath.csv b/tests/example/minpath1/ShortestPath.csv
index fad8f8a41..a353a0d67 100644
--- a/tests/example/minpath1/ShortestPath.csv
+++ b/tests/example/minpath1/ShortestPath.csv
@@ -1,36 +1,36 @@
 a	a	1
 a	b	1
 a	c	2
-b	d	2
-b	e	3
-c	d	3
-c	e	4
-d	f	1
-e	f	6
-b	a	1
-c	a	2
-d	b	2
-e	b	3
-d	c	3
-e	c	4
-f	d	1
-f	e	6
 a	d	3
 a	e	4
-b	f	3
-c	f	4
-d	d	2
+a	f	4
+b	a	1
 b	b	2
 b	c	3
+b	d	2
+b	e	3
+b	f	3
+c	a	2
 c	b	3
 c	c	4
+c	d	3
+c	e	4
+c	f	4
 d	a	3
+d	b	2
+d	c	3
+d	d	2
 d	e	5
+d	f	1
 e	a	4
+e	b	3
+e	c	4
 e	d	5
 e	e	6
+e	f	6
+f	a	4
 f	b	3
 f	c	4
+f	d	1
+f	e	6
 f	f	2
-a	f	4
-f	a	4
diff --git a/tests/example/minpath1/minpath1.dl b/tests/example/minpath1/minpath1.dl
index 2e949b93b..e05656af2 100644
--- a/tests/example/minpath1/minpath1.dl
+++ b/tests/example/minpath1/minpath1.dl
@@ -18,13 +18,16 @@ Edge("c","e",4).
 Edge("d","f",1).
 Edge("e","f",6).
 
+.decl Limit(weight:number)
+Limit(h) :- h = sum w : Edge(_,_,w).
+
 .decl Path(source:symbol,destination:symbol,path:number)
 Path(a,c,w) :- Edge(a,c,w).
 Path(a,c,w1+w2) :-
-  Path(a,b,w1),
-  Edge(b,c,w2),
-  h = sum w :Edge(_,_,w),
-  (w1+w2) < h.
+  Limit(h),
+  Edge(a,b,w1), 
+  Path(b,c,w2),
+    w2 < h-w1.
 
 .decl FindingShorterPath(source:symbol,destination:symbol,weight:number)
 FindingShorterPath(a,b,w1) :-
diff --git a/tests/experimental.stats b/tests/experimental.stats
new file mode 100644
index 000000000..3b2c415e9
--- /dev/null
+++ b/tests/experimental.stats
@@ -0,0 +1,3245 @@
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11110000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11110000-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11110000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11110000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11110000-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11110000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11110000-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->101-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1102-->1111|
+Indexes: 2	Inequalities: 0	Chains: |100100|100000-->110000-->110100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->110000-->111111|
+Indexes: 1	Inequalities: 0	Chains: |11000-->11010-->11111|
+Indexes: 2	Inequalities: 0	Chains: |100100|100000-->110000-->110100-->111111|
+Indexes: 2	Inequalities: 0	Chains: |100100|100000-->110000-->110100-->111111|
+Indexes: 2	Inequalities: 0	Chains: |100100|100000-->110000-->110100-->111111|
+Indexes: 2	Inequalities: 0	Chains: |100100|100000-->110000-->110100-->111111|
+Indexes: 2	Inequalities: 0	Chains: |100100|100000-->110000-->110100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111111|
+Indexes: 2	Inequalities: 0	Chains: |1001|1100-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1001|1100-->1101-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110000-->110100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |01000000000-->11111111111|
+Indexes: 1	Inequalities: 0	Chains: |111111100-->111111101-->111111111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |01000000100|01000000000-->11111110000-->11111111111|
+Indexes: 1	Inequalities: 0	Chains: |100-->102-->111|
+Indexes: 2	Inequalities: 1	Chains: |100-->111|002-->102|
+Indexes: 2	Inequalities: 1	Chains: |100-->111|002-->102|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1102-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1102-->1111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111100-->111111|
+Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111100-->111111|
+Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111100-->111111|
+Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |02-->11|
+Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1102-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1000-->1002-->1102|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1102-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1000-->1002-->1102|
+Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1000-->1002-->1102|
+Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1000-->1002-->1102|
+Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1000-->1002-->1102|
+Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1000-->1002-->1102|
+Indexes: 2	Inequalities: 1	Chains: |1002|0100-->1100-->1102-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|0100-->1100-->1102-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|0100-->1100-->1102-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|0100-->1100-->1102-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|0100-->1100-->1102-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1102-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111111|
+Indexes: 2	Inequalities: 0	Chains: |1001|1100-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1001|1100-->1101-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110000-->110100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111111|
+Indexes: 2	Inequalities: 0	Chains: |1001|1100-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1001|1100-->1101-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110000-->110100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1102-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 3	Inequalities: 2	Chains: |0102|0100-->1100-->1111|1000-->1002-->1102|
+Indexes: 3	Inequalities: 2	Chains: |0102|0100-->1100-->1111|1000-->1002-->1102|
+Indexes: 3	Inequalities: 2	Chains: |0102|0100-->1100-->1111|1000-->1002-->1102|
+Indexes: 1	Inequalities: 0	Chains: |100-->102-->111|
+Indexes: 3	Inequalities: 2	Chains: |0102|0100-->1100-->1111|1000-->1002-->1102|
+Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1111|
+Indexes: 3	Inequalities: 2	Chains: |0102|0100-->1100-->1111|1000-->1002-->1102|
+Indexes: 1	Inequalities: 0	Chains: |100-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 2	Inequalities: 1	Chains: |002|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->102-->111|
+Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1102-->1111|
+Indexes: 1	Inequalities: 0	Chains: |010000000-->111111111|
+Indexes: 1	Inequalities: 0	Chains: |111111100-->111111102-->111111111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1102-->1111|
+Indexes: 2	Inequalities: 1	Chains: |010000002|010000000-->111111100-->111111111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |011|001-->101-->111|
+Indexes: 2	Inequalities: 0	Chains: |011|001-->101-->111|
+Indexes: 2	Inequalities: 0	Chains: |011|001-->101-->111|
+Indexes: 2	Inequalities: 0	Chains: |011|001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 1	Chains: |10-->11-->12|
+Indexes: 1	Inequalities: 1	Chains: |10-->11-->12|
+Indexes: 1	Inequalities: 1	Chains: |10-->11-->12|
+Indexes: 1	Inequalities: 1	Chains: |10-->11-->12|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |002-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1002-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1002-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1002-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |02-->11|
+Indexes: 1	Inequalities: 0	Chains: |02-->11|
+Indexes: 1	Inequalities: 0	Chains: |02-->11|
+Indexes: 1	Inequalities: 0	Chains: |02-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001000-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |0001000-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0101010-->0111110|1001000-->1011100-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0101010-->0111110|1001000-->1011100-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0101010-->0111110|1001000-->1011100-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0101010-->0111110|1001000-->1011100-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0101010-->0111110|1001000-->1011100-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |0010|1000-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0010|1000-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1010|1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1010|1100-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1010|1100-->1111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |101-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |001-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |001-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 1	Chains: |20-->11-->12|
+Indexes: 1	Inequalities: 1	Chains: |20-->11-->12|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |0001000-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0111010-->0111110|1001000-->1001110-->1011110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0111010-->0111110|1001000-->1001110-->1011110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0111010-->0111110|1001000-->1001110-->1011110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0111010-->0111110|1001000-->1001110-->1011110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0111010-->0111110|1001000-->1001110-->1011110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |201-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->02-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->02-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->02-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->02-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->02-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->02-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->02-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->02-->11|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |0010-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+    ~/souffle/src/souffle_experimental $line --compile --show=transformed-ram | grep "Inequalities" > "./${trimmed}_default.out"
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |00000010000-->11111111111|
+Indexes: 2	Inequalities: 0	Chains: |010|100-->111|
+Indexes: 2	Inequalities: 0	Chains: |010|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->120-->111|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->120-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->120-->111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->120-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->120-->111|
+Indexes: 2	Inequalities: 0	Chains: |0101|1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->120-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->120-->111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->120-->111|
+Indexes: 2	Inequalities: 0	Chains: |0101|1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |0010|1000-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0010|1000-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1010|1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1010|1100-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1010|1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->20-->11|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 0	Chains: |220-->111|
+Indexes: 1	Inequalities: 0	Chains: |220-->111|
+Indexes: 1	Inequalities: 0	Chains: |220-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->20-->11|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 1	Chains: |111-->112|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 0	Chains: |010|100-->111|
+Indexes: 2	Inequalities: 0	Chains: |010|100-->111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 1	Inequalities: 0	Chains: |10100-->10101-->11111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 1	Inequalities: 0	Chains: |10100-->10101-->11111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 1	Inequalities: 0	Chains: |10100-->10101-->11111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 1	Inequalities: 0	Chains: |10100-->10101-->11111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 1	Inequalities: 0	Chains: |10100-->10101-->11111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 1	Inequalities: 0	Chains: |10100-->10101-->11111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->201-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->110-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |011|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |0011|1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 3	Inequalities: 0	Chains: |0000100-->0000110|0000010-->1000010|1000000-->1000100-->1000110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000010-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 3	Inequalities: 0	Chains: |0000100-->0000110|0000010-->1000010|1000000-->1000100-->1000110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 3	Inequalities: 0	Chains: |0000100-->0000110|0000010-->1000010|1000000-->1000100-->1000110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 3	Inequalities: 0	Chains: |0000100-->0000110|0000010-->1000010|1000000-->1000100-->1000110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |011|100-->111|
+Indexes: 3	Inequalities: 0	Chains: |0000100-->0000110|0000010-->1000010|1000000-->1000100-->1000110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |011|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |011-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |0011|1000-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0000100-->0000110|0000010-->1000010|1000000-->1000100-->1000110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |0011|1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 3	Inequalities: 0	Chains: |0000100-->0000110|0000010-->1000010|1000000-->1000100-->1000110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |010-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 1	Chains: |110-->120|101-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |110-->120|101-->111|
+Indexes: 1	Inequalities: 1	Chains: |10-->11-->12|
+Indexes: 2	Inequalities: 1	Chains: |110-->120|101-->111|
+Indexes: 1	Inequalities: 1	Chains: |10-->11-->12|
+Indexes: 1	Inequalities: 1	Chains: |10-->11-->12|
+Indexes: 2	Inequalities: 1	Chains: |110-->120|101-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |110-->120|101-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |110-->120|101-->111|
+Indexes: 2	Inequalities: 1	Chains: |110-->120|101-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |01|10-->11-->12|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |01|10-->11-->12|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 1	Chains: |01|10-->11-->12|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 1	Chains: |01|10-->11-->12|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |0000000001-->1111111111|
+Indexes: 1	Inequalities: 0	Chains: |0000000001-->1111111111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1111111111000000000-->1111111111111111111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1111111111000000000-->1111111111111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 1	Inequalities: 0	Chains: |0000000001-->1111111111|
+Indexes: 1	Inequalities: 0	Chains: |0000000001-->1111111111|
+Indexes: 1	Inequalities: 0	Chains: |11111111110-->11111111111|
+Indexes: 1	Inequalities: 0	Chains: |00000000011-->11111111111|
+Indexes: 1	Inequalities: 0	Chains: |00000000011-->11111111111|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |21000-->11100-->11200-->11111|
+Indexes: 1	Inequalities: 0	Chains: |21000-->11100-->11200-->11111|
+Indexes: 1	Inequalities: 0	Chains: |21000-->11100-->11200-->11111|
+Indexes: 1	Inequalities: 0	Chains: |11100-->11200-->11111|
+Indexes: 1	Inequalities: 0	Chains: |21000-->11100-->11200-->11111|
+Indexes: 1	Inequalities: 0	Chains: |21000-->11100-->11200-->11111|
+Indexes: 1	Inequalities: 0	Chains: |21000-->11100-->11200-->11111|
+Indexes: 1	Inequalities: 0	Chains: |11100-->11200-->11111|
+Indexes: 1	Inequalities: 0	Chains: |21000-->11100-->11200-->11111|
+Indexes: 1	Inequalities: 0	Chains: |21000-->11100-->11200-->11111|
+Indexes: 1	Inequalities: 0	Chains: |21000-->11100-->11200-->11111|
+Indexes: 1	Inequalities: 0	Chains: |11100-->11200-->11111|
+Indexes: 1	Inequalities: 0	Chains: |21000-->11100-->11200-->11111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |111-->112|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 1	Chains: |11-->12|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 2	Inequalities: 1	Chains: |2200|0022-->1111|
+Indexes: 2	Inequalities: 1	Chains: |2200|0022-->1111|
+Indexes: 2	Inequalities: 1	Chains: |2200|0022-->1111|
+Indexes: 1	Inequalities: 0	Chains: |11111111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->20-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->20-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->20-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->20-->11|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |0001-->1111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |101-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |002-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |011-->111|
+Indexes: 1	Inequalities: 0	Chains: |20-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 1	Chains: |11-->12|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 1	Chains: |11-->12|
+Indexes: 1	Inequalities: 0	Chains: |101-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->102-->111|
+Indexes: 1	Inequalities: 0	Chains: |01-->02-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->02-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->111|
+Indexes: 2	Inequalities: 0	Chains: |011|010-->110-->111|
+Indexes: 2	Inequalities: 0	Chains: |011|010-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->111|
+Indexes: 2	Inequalities: 0	Chains: |011|010-->110-->111|
+Indexes: 2	Inequalities: 0	Chains: |011|010-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->111|
+Indexes: 2	Inequalities: 0	Chains: |011|010-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 1	Chains: |111-->112|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
diff --git a/tests/find_diff.sh b/tests/find_diff.sh
new file mode 100755
index 000000000..a72aacc09
--- /dev/null
+++ b/tests/find_diff.sh
@@ -0,0 +1,6 @@
+find . -type f -name "*.dl"|while read fname; do
+    default=$(~/souffle/src/souffle_default "$fname" --compile --show=transformed-ram | grep "Chains:")
+    merged=$(~/souffle/src/souffle_merge "$fname" --compile --show=transformed-ram | grep "Chains:")
+    echo "$fname"
+    diff <( echo "$default" ) <( echo "$merged" ) 
+done
diff --git a/tests/new.diff b/tests/new.diff
new file mode 100644
index 000000000..61e9f3a22
--- /dev/null
+++ b/tests/new.diff
@@ -0,0 +1,92 @@
+41c41
+< Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+---
+> Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+101c101
+< Indexes: 2	Inequalities: 1	Chains: |002|100-->102-->111|
+---
+> Indexes: 2	Inequalities: 1	Chains: |100-->111|002-->102|
+115c115
+< Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+---
+> Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+130c130
+< Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+---
+> Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+148c148
+< Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+---
+> Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+173c173
+< Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+---
+> Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+185c185
+< Indexes: 2	Inequalities: 1	Chains: |1002|1000-->1100-->1102-->1111|
+---
+> Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1000-->1002-->1102|
+258c258
+< Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+---
+> Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+271c271
+< Indexes: 3	Inequalities: 2	Chains: |0100-->0102|1002|1000-->1100-->1102-->1111|
+---
+> Indexes: 3	Inequalities: 2	Chains: |0102|0100-->1100-->1111|1000-->1002-->1102|
+287c287
+< Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+---
+> Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+2326,2328c2326,2328
+< Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+< Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+< Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+---
+> Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+> Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+> Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+2378,2380c2378,2380
+< Indexes: 1	Inequalities: 0	Chains: |002-->111|
+< Indexes: 1	Inequalities: 0	Chains: |002-->111|
+< Indexes: 1	Inequalities: 0	Chains: |002-->111|
+---
+> Indexes: 1	Inequalities: 0	Chains: |020-->111|
+> Indexes: 1	Inequalities: 0	Chains: |020-->111|
+> Indexes: 1	Inequalities: 0	Chains: |020-->111|
+4167,4168c4167,4168
+< Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+< Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+---
+> Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+> Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+4171c4171
+< Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+---
+> Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+4177,4178c4177,4178
+< Indexes: 1	Inequalities: 0	Chains: |002-->111|
+< Indexes: 1	Inequalities: 0	Chains: |002-->111|
+---
+> Indexes: 1	Inequalities: 0	Chains: |020-->111|
+> Indexes: 1	Inequalities: 0	Chains: |020-->111|
+4181c4181
+< Indexes: 1	Inequalities: 0	Chains: |002-->111|
+---
+> Indexes: 1	Inequalities: 0	Chains: |020-->111|
+4445c4445
+< Indexes: 2	Inequalities: 0	Chains: |101|110-->120-->111|
+---
+> Indexes: 2	Inequalities: 1	Chains: |110-->120|101-->111|
+4484c4484
+< Indexes: 1	Inequalities: 0	Chains: |100-->101-->111|
+---
+> Indexes: 2	Inequalities: 1	Chains: |110-->120|101-->111|
+5655c5655
+< Indexes: 2	Inequalities: 1	Chains: |0022|2200-->1111|
+---
+> Indexes: 2	Inequalities: 1	Chains: |2200|0022-->1111|
+5659c5659
+< Indexes: 1	Inequalities: 0	Chains: |0002-->1111|
+---
+> Indexes: 1	Inequalities: 0	Chains: |0200-->1111|
diff --git a/tests/restricted.out b/tests/restricted.out
new file mode 100644
index 000000000..0c0246787
--- /dev/null
+++ b/tests/restricted.out
@@ -0,0 +1,3244 @@
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 5
+#Discharged: 1	#Indexes: 5
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 5
+#Discharged: 1	#Indexes: 5
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 5
+#Discharged: 1	#Indexes: 5
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 5
+#Discharged: 1	#Indexes: 5
+#Discharged: 1	#Indexes: 5
+#Discharged: 1	#Indexes: 5
+#Discharged: 1	#Indexes: 5
+#Discharged: 1	#Indexes: 5
+#Discharged: 1	#Indexes: 5
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 4
+#Discharged: 1	#Indexes: 4
+#Discharged: 1	#Indexes: 4
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 4
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 4
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 2	#Indexes: 2
+#Discharged: 2	#Indexes: 2
+#Discharged: 2	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 7
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 6
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 4
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 9
+#Discharged: 0	#Indexes: 9
+#Discharged: 0	#Indexes: 9
+#Discharged: 0	#Indexes: 9
+#Discharged: 0	#Indexes: 9
+#Discharged: 0	#Indexes: 9
+#Discharged: 0	#Indexes: 9
+#Discharged: 0	#Indexes: 9
+#Discharged: 0	#Indexes: 9
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 3
+#Discharged: 1	#Indexes: 3
+#Discharged: 0	#Indexes: 2
+#Discharged: 1	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 2	#Indexes: 3
+#Discharged: 2	#Indexes: 3
+#Discharged: 2	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 5
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 3
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 1	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 1	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 2
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
+#Discharged: 0	#Indexes: 1
diff --git a/tests/restricted.stats b/tests/restricted.stats
new file mode 100644
index 000000000..fd2264c45
--- /dev/null
+++ b/tests/restricted.stats
@@ -0,0 +1,3245 @@
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11110000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11110000-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11110000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11110000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11110000-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11110000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11110000-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 5	Inequalities: 0	Chains: |10010000-->10010100|10100100|10100000-->10110000|10000000-->11000100|11000000-->11100000-->11110000-->11110100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->101-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 3	Inequalities: 2	Chains: |1002|1102|1100-->1111|
+Indexes: 3	Inequalities: 2	Chains: |1002|1102|1100-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1102|1100-->1111|
+Indexes: 2	Inequalities: 0	Chains: |100100|100000-->110000-->110100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->110000-->111111|
+Indexes: 1	Inequalities: 0	Chains: |11000-->11010-->11111|
+Indexes: 2	Inequalities: 0	Chains: |100100|100000-->110000-->110100-->111111|
+Indexes: 2	Inequalities: 0	Chains: |100100|100000-->110000-->110100-->111111|
+Indexes: 2	Inequalities: 0	Chains: |100100|100000-->110000-->110100-->111111|
+Indexes: 2	Inequalities: 0	Chains: |100100|100000-->110000-->110100-->111111|
+Indexes: 2	Inequalities: 0	Chains: |100100|100000-->110000-->110100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111111|
+Indexes: 2	Inequalities: 0	Chains: |1001|1100-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1001|1100-->1101-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110000-->110100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |01000000000-->11111111111|
+Indexes: 1	Inequalities: 0	Chains: |111111100-->111111101-->111111111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |01000000100|01000000000-->11111110000-->11111111111|
+Indexes: 2	Inequalities: 1	Chains: |102|100-->111|
+Indexes: 3	Inequalities: 2	Chains: |002|102|100-->111|
+Indexes: 3	Inequalities: 2	Chains: |002|102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 3	Inequalities: 2	Chains: |1002|1102|1100-->1111|
+Indexes: 3	Inequalities: 2	Chains: |1002|1102|1100-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1102|1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 3	Inequalities: 2	Chains: |1002|1102|1100-->1111|
+Indexes: 3	Inequalities: 2	Chains: |1002|1102|1100-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1102|1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111100-->111111|
+Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111100-->111111|
+Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111100-->111111|
+Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+Indexes: 2	Inequalities: 1	Chains: |02|11|
+Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+Indexes: 2	Inequalities: 1	Chains: |102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 3	Inequalities: 2	Chains: |1002|1102|1100-->1111|
+Indexes: 3	Inequalities: 2	Chains: |1002|1102|1100-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1102|1100-->1111|
+Indexes: 3	Inequalities: 2	Chains: |1002|1000-->1102|1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1100-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1102|1100-->1111|
+Indexes: 3	Inequalities: 2	Chains: |1002|1000-->1102|1100-->1111|
+Indexes: 3	Inequalities: 2	Chains: |1002|1000-->1102|1100-->1111|
+Indexes: 3	Inequalities: 2	Chains: |1002|1000-->1102|1100-->1111|
+Indexes: 3	Inequalities: 2	Chains: |1002|1000-->1102|1100-->1111|
+Indexes: 3	Inequalities: 2	Chains: |1002|1000-->1102|1100-->1111|
+Indexes: 3	Inequalities: 2	Chains: |1002|0100-->1102|1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 3	Inequalities: 2	Chains: |1002|0100-->1102|1100-->1111|
+Indexes: 3	Inequalities: 2	Chains: |1002|0100-->1102|1100-->1111|
+Indexes: 3	Inequalities: 2	Chains: |1002|0100-->1102|1100-->1111|
+Indexes: 3	Inequalities: 2	Chains: |1002|0100-->1102|1100-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1102|1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |100-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111111|
+Indexes: 2	Inequalities: 0	Chains: |1001|1100-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1001|1100-->1101-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110000-->110100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111111|
+Indexes: 2	Inequalities: 0	Chains: |1001|1100-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1001|1100-->1101-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110000-->110100-->111111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 3	Inequalities: 2	Chains: |1002|1102|1100-->1111|
+Indexes: 3	Inequalities: 2	Chains: |1002|1102|1100-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1102|1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 4	Inequalities: 3	Chains: |0102|1002|1000-->1102|0100-->1100-->1111|
+Indexes: 4	Inequalities: 3	Chains: |0102|1002|1000-->1102|0100-->1100-->1111|
+Indexes: 4	Inequalities: 3	Chains: |0102|1002|1000-->1102|0100-->1100-->1111|
+Indexes: 2	Inequalities: 1	Chains: |102|100-->111|
+Indexes: 4	Inequalities: 3	Chains: |0102|1002|1000-->1102|0100-->1100-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1111|
+Indexes: 4	Inequalities: 3	Chains: |0102|1002|1000-->1102|0100-->1100-->1111|
+Indexes: 2	Inequalities: 1	Chains: |102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 2	Inequalities: 1	Chains: |002|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |102|100-->111|
+Indexes: 3	Inequalities: 2	Chains: |1002|1102|1100-->1111|
+Indexes: 3	Inequalities: 2	Chains: |1002|1102|1100-->1111|
+Indexes: 3	Inequalities: 2	Chains: |1002|1102|1100-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1102|1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |010000000-->111111111|
+Indexes: 2	Inequalities: 1	Chains: |111111102|111111100-->111111111|
+Indexes: 2	Inequalities: 1	Chains: |1102|1100-->1111|
+Indexes: 2	Inequalities: 1	Chains: |010000002|010000000-->111111100-->111111111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |011|001-->101-->111|
+Indexes: 2	Inequalities: 0	Chains: |011|001-->101-->111|
+Indexes: 2	Inequalities: 0	Chains: |011|001-->101-->111|
+Indexes: 2	Inequalities: 0	Chains: |011|001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 1	Chains: |10-->11-->12|
+Indexes: 1	Inequalities: 1	Chains: |10-->11-->12|
+Indexes: 1	Inequalities: 1	Chains: |10-->11-->12|
+Indexes: 1	Inequalities: 1	Chains: |10-->11-->12|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |002|111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 1	Chains: |1000-->1111-->1211|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|1000-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 2	Inequalities: 1	Chains: |1002|1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |02|11|
+Indexes: 2	Inequalities: 1	Chains: |02|11|
+Indexes: 2	Inequalities: 1	Chains: |02|11|
+Indexes: 2	Inequalities: 1	Chains: |02|11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001000-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |0001000-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0101010-->0111110|1001000-->1011100-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0101010-->0111110|1001000-->1011100-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0101010-->0111110|1001000-->1011100-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0101010-->0111110|1001000-->1011100-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0101010-->0111110|1001000-->1011100-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0101-->0111|1011|1001-->1101-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1010-->1111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |0010|1000-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0010|1000-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1010|1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1010|1100-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1010|1100-->1111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |101-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |001-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |001-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 2	Chains: |20|11-->12|
+Indexes: 2	Inequalities: 2	Chains: |20|11-->12|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |20|11|
+Indexes: 2	Inequalities: 1	Chains: |20|11|
+Indexes: 2	Inequalities: 1	Chains: |20|11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |0001000-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0111010-->0111110|1001000-->1001110-->1011110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0111010-->0111110|1001000-->1001110-->1011110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0111010-->0111110|1001000-->1001110-->1011110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0111010-->0111110|1001000-->1001110-->1011110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0111010-->0111110|1001000-->1001110-->1011110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0111|1011|1001-->1101-->1111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 3	Inequalities: 2	Chains: |002|020|111|
+Indexes: 3	Inequalities: 2	Chains: |002|020|111|
+Indexes: 3	Inequalities: 2	Chains: |002|020|111|
+Indexes: 3	Inequalities: 2	Chains: |002|020|111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 3	Inequalities: 2	Chains: |002|020|111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 3	Inequalities: 2	Chains: |002|020|111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 3	Inequalities: 2	Chains: |002|020|111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 3	Inequalities: 2	Chains: |002|020|111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 3	Inequalities: 2	Chains: |002|020|111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 3	Inequalities: 2	Chains: |002|020|111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 3	Inequalities: 2	Chains: |002|020|111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 3	Inequalities: 2	Chains: |002|020|111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 3	Inequalities: 2	Chains: |002|020|111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 3	Inequalities: 2	Chains: |002|020|111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 3	Inequalities: 2	Chains: |002|020|111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 3	Inequalities: 2	Chains: |002|020|111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 3	Inequalities: 2	Chains: |002|020|111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 3	Inequalities: 2	Chains: |002|020|111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 3	Inequalities: 2	Chains: |002|020|111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 3	Inequalities: 2	Chains: |002|020|111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 3	Inequalities: 2	Chains: |002|020|111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 3	Inequalities: 2	Chains: |002|020|111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 2	Inequalities: 1	Chains: |201|111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |00010|00001-->01001-->11111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |01-->02|11|
+Indexes: 2	Inequalities: 1	Chains: |01-->02|11|
+Indexes: 2	Inequalities: 1	Chains: |01-->02|11|
+Indexes: 2	Inequalities: 1	Chains: |01-->02|11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |20|11|
+Indexes: 2	Inequalities: 1	Chains: |20|11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |01-->02|11|
+Indexes: 2	Inequalities: 1	Chains: |01-->02|11|
+Indexes: 2	Inequalities: 1	Chains: |01-->02|11|
+Indexes: 2	Inequalities: 1	Chains: |01-->02|11|
+Indexes: 2	Inequalities: 1	Chains: |20|11|
+Indexes: 2	Inequalities: 1	Chains: |20|11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |20|11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |0010-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |20|11|
+Indexes: 2	Inequalities: 1	Chains: |20|11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+    ~/souffle/src/souffle_restricted $line --compile --show=transformed-ram | grep "Inequalities" > "./${trimmed}_default.out"
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1011-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |00000010000-->11111111111|
+Indexes: 2	Inequalities: 0	Chains: |010|100-->111|
+Indexes: 2	Inequalities: 0	Chains: |010|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |110-->120|010-->111|
+Indexes: 2	Inequalities: 1	Chains: |20|11|
+Indexes: 2	Inequalities: 1	Chains: |110-->120|010-->111|
+Indexes: 2	Inequalities: 1	Chains: |110-->120|010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 2	Inequalities: 1	Chains: |110-->120|010-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 1	Chains: |110-->120|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |0101|1000-->1111|
+Indexes: 2	Inequalities: 1	Chains: |110-->120|010-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 1	Chains: |110-->120|010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1111|
+Indexes: 2	Inequalities: 1	Chains: |110-->120|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |0101|1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0011|1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1110-->1111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |0010|1000-->1111|
+Indexes: 2	Inequalities: 0	Chains: |0010|1000-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1010|1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1010|1100-->1111|
+Indexes: 2	Inequalities: 0	Chains: |1010|1100-->1111|
+Indexes: 2	Inequalities: 1	Chains: |10-->20|11|
+Indexes: 2	Inequalities: 1	Chains: |20|11|
+Indexes: 2	Inequalities: 1	Chains: |220|111|
+Indexes: 2	Inequalities: 1	Chains: |220|111|
+Indexes: 2	Inequalities: 1	Chains: |220|111|
+Indexes: 2	Inequalities: 1	Chains: |10-->20|11|
+Indexes: 2	Inequalities: 1	Chains: |20|11|
+Indexes: 1	Inequalities: 1	Chains: |111-->112|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 0	Chains: |010|100-->111|
+Indexes: 2	Inequalities: 0	Chains: |010|100-->111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 7	Inequalities: 0	Chains: |0001110-->0101110|0000110-->0100110-->0110110|0100010-->0110010-->0111010|0110000-->0111000-->0111100|0011110-->0111110|0011000-->1011100|1000010-->1100110-->1111110-->1111111|
+Indexes: 2	Inequalities: 1	Chains: |101-->201|001-->111|
+Indexes: 1	Inequalities: 0	Chains: |10100-->10101-->11111|
+Indexes: 2	Inequalities: 1	Chains: |101-->201|001-->111|
+Indexes: 1	Inequalities: 0	Chains: |10100-->10101-->11111|
+Indexes: 2	Inequalities: 1	Chains: |101-->201|001-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->201|001-->111|
+Indexes: 3	Inequalities: 2	Chains: |002|020|111|
+Indexes: 3	Inequalities: 2	Chains: |002|020|111|
+Indexes: 3	Inequalities: 2	Chains: |002|020|111|
+Indexes: 3	Inequalities: 2	Chains: |002|020|111|
+Indexes: 2	Inequalities: 1	Chains: |101-->201|001-->111|
+Indexes: 1	Inequalities: 0	Chains: |10100-->10101-->11111|
+Indexes: 2	Inequalities: 1	Chains: |101-->201|001-->111|
+Indexes: 1	Inequalities: 0	Chains: |10100-->10101-->11111|
+Indexes: 2	Inequalities: 1	Chains: |101-->201|001-->111|
+Indexes: 1	Inequalities: 0	Chains: |10100-->10101-->11111|
+Indexes: 2	Inequalities: 1	Chains: |101-->201|001-->111|
+Indexes: 1	Inequalities: 0	Chains: |10100-->10101-->11111|
+Indexes: 2	Inequalities: 1	Chains: |101-->201|001-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->201|001-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->201|001-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->201|001-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->201|001-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->201|001-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->110-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 6	Inequalities: 0	Chains: |0011110-->0111110|0001110-->1011110|0000110-->1001110-->1101110|1000110-->1100110-->1110110|1000010-->1100010-->1110010-->1111010|1100000-->1110000-->1111000-->1111100-->1111110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 2	Inequalities: 0	Chains: |10000010|10000000-->10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |1110-->1111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |011|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |0011|1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 3	Inequalities: 0	Chains: |0000100-->0000110|0000010-->1000010|1000000-->1000100-->1000110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000010-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 3	Inequalities: 0	Chains: |0000100-->0000110|0000010-->1000010|1000000-->1000100-->1000110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 3	Inequalities: 0	Chains: |0000100-->0000110|0000010-->1000010|1000000-->1000100-->1000110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 3	Inequalities: 0	Chains: |0000100-->0000110|0000010-->1000010|1000000-->1000100-->1000110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |011|100-->111|
+Indexes: 3	Inequalities: 0	Chains: |0000100-->0000110|0000010-->1000010|1000000-->1000100-->1000110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |011|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |011-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |0011|1000-->1111|
+Indexes: 3	Inequalities: 0	Chains: |0000100-->0000110|0000010-->1000010|1000000-->1000100-->1000110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |0011|1000-->1111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |0011-->1111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 3	Inequalities: 0	Chains: |0000100-->0000110|0000010-->1000010|1000000-->1000100-->1000110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000110-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |001-->111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10000010-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000100-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |10000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |001-->101-->111|
+Indexes: 1	Inequalities: 0	Chains: |11000000-->11111111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |010-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->011-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 4	Inequalities: 0	Chains: |1001110-->1011110|1000110-->1100110-->1101110|1000000-->1000010-->1100010-->1110010-->1110110|1100000-->1110000-->1111000-->1111010-->1111110-->1111111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 1	Chains: |110-->120|101-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |110-->120|101-->111|
+Indexes: 1	Inequalities: 1	Chains: |10-->11-->12|
+Indexes: 2	Inequalities: 1	Chains: |110-->120|101-->111|
+Indexes: 1	Inequalities: 1	Chains: |10-->11-->12|
+Indexes: 1	Inequalities: 1	Chains: |10-->11-->12|
+Indexes: 2	Inequalities: 1	Chains: |110-->120|101-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |110-->120|101-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |110-->120|101-->111|
+Indexes: 2	Inequalities: 1	Chains: |110-->120|101-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |01|10-->11-->12|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |01|10-->11-->12|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 1	Chains: |01|10-->11-->12|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 1	Chains: |01|10-->11-->12|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |0000000001-->1111111111|
+Indexes: 1	Inequalities: 0	Chains: |0000000001-->1111111111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1111111111000000000-->1111111111111111111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1111111111000000000-->1111111111111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 9	Inequalities: 0	Chains: |0000000010|0000000100|0000001000|0000010000|0000100000|0001000000|0010000000|0100000000|1000000000-->1111111111|
+Indexes: 1	Inequalities: 0	Chains: |0000000001-->1111111111|
+Indexes: 1	Inequalities: 0	Chains: |0000000001-->1111111111|
+Indexes: 1	Inequalities: 0	Chains: |11111111110-->11111111111|
+Indexes: 1	Inequalities: 0	Chains: |00000000011-->11111111111|
+Indexes: 1	Inequalities: 0	Chains: |00000000011-->11111111111|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |001|010-->111|
+Indexes: 2	Inequalities: 0	Chains: |001|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 3	Inequalities: 2	Chains: |21000|11100-->11200|11111|
+Indexes: 3	Inequalities: 2	Chains: |21000|11100-->11200|11111|
+Indexes: 3	Inequalities: 2	Chains: |21000|11100-->11200|11111|
+Indexes: 2	Inequalities: 1	Chains: |11100-->11200|11111|
+Indexes: 3	Inequalities: 2	Chains: |21000|11100-->11200|11111|
+Indexes: 3	Inequalities: 2	Chains: |21000|11100-->11200|11111|
+Indexes: 3	Inequalities: 2	Chains: |21000|11100-->11200|11111|
+Indexes: 2	Inequalities: 1	Chains: |11100-->11200|11111|
+Indexes: 3	Inequalities: 2	Chains: |21000|11100-->11200|11111|
+Indexes: 3	Inequalities: 2	Chains: |21000|11100-->11200|11111|
+Indexes: 3	Inequalities: 2	Chains: |21000|11100-->11200|11111|
+Indexes: 2	Inequalities: 1	Chains: |11100-->11200|11111|
+Indexes: 3	Inequalities: 2	Chains: |21000|11100-->11200|11111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |111-->112|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1000-->1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |0100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |11|
+Indexes: 1	Inequalities: 1	Chains: |11-->12|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 3	Inequalities: 2	Chains: |0022|2200|1111|
+Indexes: 3	Inequalities: 2	Chains: |0022|2200|1111|
+Indexes: 3	Inequalities: 2	Chains: |0022|2200|1111|
+Indexes: 1	Inequalities: 0	Chains: |11111111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |0011110-->1011110|1100110|0101010-->1101010-->1101110|1110100|1111000-->1111110-->1111111|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |10-->20|11|
+Indexes: 2	Inequalities: 1	Chains: |10-->20|11|
+Indexes: 2	Inequalities: 1	Chains: |10-->20|11|
+Indexes: 2	Inequalities: 1	Chains: |10-->20|11|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 5	Inequalities: 0	Chains: |1010010|1011000|1000110-->1001110-->1101110|1000000-->1100010-->1100110-->1110110|1100000-->1110000-->1111010-->1111110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 3	Inequalities: 0	Chains: |0011000-->1011000|1000000-->1101000|0100000-->1100000-->1110000-->1111000-->1111110-->1111111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |0001-->1111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |101-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |002|111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |011-->111|
+Indexes: 2	Inequalities: 1	Chains: |20|11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |100000-->111111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 1	Chains: |11-->12|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 1	Chains: |11-->12|
+Indexes: 1	Inequalities: 0	Chains: |101-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |01-->11|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |1100-->1111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 2	Inequalities: 1	Chains: |101-->102|100-->111|
+Indexes: 2	Inequalities: 1	Chains: |01-->02|11|
+Indexes: 2	Inequalities: 1	Chains: |01-->02|11|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->111|
+Indexes: 2	Inequalities: 0	Chains: |011|010-->110-->111|
+Indexes: 2	Inequalities: 0	Chains: |011|010-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->111|
+Indexes: 2	Inequalities: 0	Chains: |011|010-->110-->111|
+Indexes: 2	Inequalities: 0	Chains: |011|010-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |010-->110-->111|
+Indexes: 2	Inequalities: 0	Chains: |011|010-->110-->111|
+Indexes: 1	Inequalities: 0	Chains: |111|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 1	Chains: |11-->22|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |110-->111|
+Indexes: 1	Inequalities: 0	Chains: |100-->111|
+Indexes: 1	Inequalities: 1	Chains: |111-->112|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 1	Chains: |1-->2|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 2	Inequalities: 0	Chains: |01|10-->11|
+Indexes: 1	Inequalities: 0	Chains: |1|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
+Indexes: 1	Inequalities: 0	Chains: |10-->11|
diff --git a/tests/results.txt b/tests/results.txt
new file mode 100644
index 000000000..630f3851b
--- /dev/null
+++ b/tests/results.txt
@@ -0,0 +1,703 @@
+./provenance/cprog1_subtreeHeights/cprog1_subtreeHeights.dl
+./provenance/components_subtreeHeights/components_subtreeHeights.dl
+./provenance/query_1/query_1.dl
+2,3c2,3
+< Relation: edge	Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+< Relation: edge	Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+---
+> Relation: edge	Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+> Relation: edge	Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+./provenance/eqrel_tests3_subtreeHeights/eqrel_tests3_subtreeHeights.dl
+./provenance/path_explain_negation_subtreeHeights/path_explain_negation_subtreeHeights.dl
+./provenance/high_arity_subtreeHeights/high_arity_subtreeHeights.dl
+./provenance/components/components.dl
+2,3c2,3
+< Relation: myCompInstance1.TheAnswer	Indexes: 2	Inequalities: 1	Chains: |002|100-->102-->111|
+< Relation: myCompInstance1.TheAnswer	Indexes: 2	Inequalities: 1	Chains: |002|100-->102-->111|
+---
+> Relation: myCompInstance1.TheAnswer	Indexes: 2	Inequalities: 1	Chains: |100-->111|002-->102|
+> Relation: myCompInstance1.TheAnswer	Indexes: 2	Inequalities: 1	Chains: |100-->111|002-->102|
+./provenance/path/path.dl
+2,3c2,3
+< Relation: edge	Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+< Relation: edge	Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+---
+> Relation: edge	Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+> Relation: edge	Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+./provenance/path_explain_negation/path_explain_negation.dl
+2,3c2,3
+< Relation: edge	Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+< Relation: edge	Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+---
+> Relation: edge	Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+> Relation: edge	Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+./provenance/cprog1/cprog1.dl
+3,4c3,4
+< Relation: loop	Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+< Relation: loop	Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+---
+> Relation: loop	Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+> Relation: loop	Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+8,9c8,9
+< Relation: loop	Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+< Relation: loop	Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+---
+> Relation: loop	Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+> Relation: loop	Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+12,13c12,13
+< Relation: loop	Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+< Relation: loop	Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+---
+> Relation: loop	Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+> Relation: loop	Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+15,21c15,21
+< Relation: loop	Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+< Relation: loop	Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+< Relation: loop	Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+< Relation: loop	Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+< Relation: loop	Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+< Relation: loop	Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+< Relation: loop	Indexes: 5	Inequalities: 3	Chains: |100100-->100102|101002|101000-->101100|100000-->110002|110000-->111000-->111100-->111102-->111111|
+---
+> Relation: loop	Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+> Relation: loop	Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+> Relation: loop	Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+> Relation: loop	Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+> Relation: loop	Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+> Relation: loop	Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+> Relation: loop	Indexes: 5	Inequalities: 4	Chains: |100102|101000-->101002|100000-->110002|110000-->111000-->111102|100100-->101100-->111100-->111111|
+./provenance/negation/negation.dl
+./provenance/query_2/query_2.dl
+2,3c2,3
+< Relation: edge	Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+< Relation: edge	Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+---
+> Relation: edge	Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+> Relation: edge	Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+./provenance/eqrel_tests3/eqrel_tests3.dl
+1c1
+< Relation: isEqrel	Indexes: 2	Inequalities: 1	Chains: |1002|1000-->1100-->1102-->1111|
+---
+> Relation: isEqrel	Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1000-->1002-->1102|
+4,8c4,8
+< Relation: isEqrel	Indexes: 2	Inequalities: 1	Chains: |1002|1000-->1100-->1102-->1111|
+< Relation: isEqrel	Indexes: 2	Inequalities: 1	Chains: |1002|1000-->1100-->1102-->1111|
+< Relation: isEqrel	Indexes: 2	Inequalities: 1	Chains: |1002|1000-->1100-->1102-->1111|
+< Relation: isEqrel	Indexes: 2	Inequalities: 1	Chains: |1002|1000-->1100-->1102-->1111|
+< Relation: isEqrel	Indexes: 2	Inequalities: 1	Chains: |1002|1000-->1100-->1102-->1111|
+---
+> Relation: isEqrel	Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1000-->1002-->1102|
+> Relation: isEqrel	Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1000-->1002-->1102|
+> Relation: isEqrel	Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1000-->1002-->1102|
+> Relation: isEqrel	Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1000-->1002-->1102|
+> Relation: isEqrel	Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1000-->1002-->1102|
+./provenance/same_gen/same_gen.dl
+./provenance/negation_subtreeHeights/negation_subtreeHeights.dl
+./provenance/path_subtreeHeights/path_subtreeHeights.dl
+./provenance/query_float_unsigned/query_float_unsigned.dl
+./provenance/path_explain_output_subtreeHeights/path_explain_output_subtreeHeights.dl
+./provenance/path_explain_output/path_explain_output.dl
+2,3c2,3
+< Relation: edge	Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+< Relation: edge	Indexes: 2	Inequalities: 1	Chains: |1002|1100-->1102-->1111|
+---
+> Relation: edge	Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+> Relation: edge	Indexes: 2	Inequalities: 1	Chains: |1100-->1111|1002-->1102|
+./provenance/query_3/query_3.dl
+2,4c2,4
+< Relation: parent	Indexes: 3	Inequalities: 2	Chains: |0100-->0102|1002|1000-->1100-->1102-->1111|
+< Relation: parent	Indexes: 3	Inequalities: 2	Chains: |0100-->0102|1002|1000-->1100-->1102-->1111|
+< Relation: parent	Indexes: 3	Inequalities: 2	Chains: |0100-->0102|1002|1000-->1100-->1102-->1111|
+---
+> Relation: parent	Indexes: 3	Inequalities: 2	Chains: |0102|0100-->1100-->1111|1000-->1002-->1102|
+> Relation: parent	Indexes: 3	Inequalities: 2	Chains: |0102|0100-->1100-->1111|1000-->1002-->1102|
+> Relation: parent	Indexes: 3	Inequalities: 2	Chains: |0102|0100-->1100-->1111|1000-->1002-->1102|
+6c6
+< Relation: parent	Indexes: 3	Inequalities: 2	Chains: |0100-->0102|1002|1000-->1100-->1102-->1111|
+---
+> Relation: parent	Indexes: 3	Inequalities: 2	Chains: |0102|0100-->1100-->1111|1000-->1002-->1102|
+8c8
+< Relation: parent	Indexes: 3	Inequalities: 2	Chains: |0100-->0102|1002|1000-->1100-->1102-->1111|
+---
+> Relation: parent	Indexes: 3	Inequalities: 2	Chains: |0102|0100-->1100-->1111|1000-->1002-->1102|
+./provenance/explain_float_unsigned/explain_float_unsigned.dl
+./provenance/high_arity/high_arity.dl
+./interface/signal_error/signal_error.dl
+./interface/insert_for/insert_for.dl
+./interface/repeat_analysis/repeat_analysis.dl
+./interface/insert_print/insert_print.dl
+./interface/contain_insert/contain_insert.dl
+./interface/load_print/load_print.dl
+./interface/functors/functors.dl
+./interface/tuple_insertion_diff_element_type/tuple_insertion_diff_element_type.dl
+./interface/tuple_insertion_diff_relation/tuple_insertion_diff_relation.dl
+./interface/get_symboltabletype/get_symboltabletype.dl
+./evaluation/recursion/recursion.dl
+./evaluation/neg4/neg4.dl
+./evaluation/aggregates/aggregates.dl
+./evaluation/match2/match2.dl
+./evaluation/plus/plus.dl
+./evaluation/math/math.dl
+./evaluation/binop/binop.dl
+./evaluation/set_ops/set_ops.dl
+./evaluation/rec_underscore/rec_underscore.dl
+./evaluation/relop/relop.dl
+./evaluation/magic_dominance/magic_dominance.dl
+./evaluation/counter/counter.dl
+./evaluation/cproject/cproject.dl
+./evaluation/rec_lists2/rec_lists2.dl
+./evaluation/set_ops_output/set_ops_output.dl
+./evaluation/singleton/singleton.dl
+./evaluation/access1/access1.dl
+./evaluation/aggregates6/aggregates6.dl
+./evaluation/subtype2/subtype2.dl
+./evaluation/aggregates2/aggregates2.dl
+./evaluation/mul/mul.dl
+./evaluation/components/components.dl
+./evaluation/arithm/arithm.dl
+./evaluation/rmut2/rmut2.dl
+./evaluation/neg5/neg5.dl
+./evaluation/inline_underscore/inline_underscore.dl
+./evaluation/neg2/neg2.dl
+./evaluation/ordinals/ordinals.dl
+./evaluation/rec_lists/rec_lists.dl
+./evaluation/float_operations/float_operations.dl
+./evaluation/number_constants/number_constants.dl
+./evaluation/match3/match3.dl
+./evaluation/aggregates4/aggregates4.dl
+./evaluation/average/average.dl
+./evaluation/subtype/subtype.dl
+./evaluation/count_sccs1/count_sccs1.dl
+./evaluation/magic_centroids/magic_centroids.dl
+./evaluation/contains/contains.dl
+./evaluation/magic_nqueens/magic_nqueens.dl
+./evaluation/multiple_heads/multiple_heads.dl
+./evaluation/comp-override2/comp-override2.dl
+./evaluation/minmaxnum/minmaxnum.dl
+./evaluation/unpacking/unpacking.dl
+./evaluation/hex/hex.dl
+./evaluation/minmax/minmax.dl
+./evaluation/cprog2/cprog2.dl
+./evaluation/magic_samegen/magic_samegen.dl
+./evaluation/cprog3/cprog3.dl
+./evaluation/cprog5/cprog5.dl
+./evaluation/magic_perfect_numbers/magic_perfect_numbers.dl
+./evaluation/magic_records4/magic_records4.dl
+./evaluation/inline_unification/inline_unification.dl
+./evaluation/magic_strategies/magic_strategies.dl
+./evaluation/magic_factoring/magic_factoring.dl
+./evaluation/range/range.dl
+./evaluation/aliases/aliases.dl
+./evaluation/mrtc/mrtc.dl
+./evaluation/inline_negation1/inline_negation1.dl
+./evaluation/neg3/neg3.dl
+./evaluation/sum-aggregate/sum-aggregate.dl
+./evaluation/components2/components2.dl
+./evaluation/cprog4/cprog4.dl
+./evaluation/inline_records/inline_records.dl
+./evaluation/inline_nqueens/inline_nqueens.dl
+./evaluation/magic_cprog1/magic_cprog1.dl
+./evaluation/magic_components/magic_components.dl
+./evaluation/numeric_conversions/numeric_conversions.dl
+./evaluation/access3/access3.dl
+./evaluation/cprog1/cprog1.dl
+./evaluation/indirect_negation/indirect_negation.dl
+./evaluation/numeric_binary_constraint_op/numeric_binary_constraint_op.dl
+./evaluation/list/list.dl
+./evaluation/unused_constraints/unused_constraints.dl
+./evaluation/components1/components1.dl
+./evaluation/index/index.dl
+./evaluation/magic_movies/magic_movies.dl
+./evaluation/components_generic/components_generic.dl
+./evaluation/magic_names1/magic_names1.dl
+./evaluation/magic_goal/magic_goal.dl
+./evaluation/neg1/neg1.dl
+./evaluation/magic_2sat/magic_2sat.dl
+./evaluation/magic_dfa/magic_dfa.dl
+./evaluation/grammar/grammar.dl
+./evaluation/unsigned_operations/unsigned_operations.dl
+./evaluation/x9/x9.dl
+./evaluation/magic_circuit_sat/magic_circuit_sat.dl
+./evaluation/rmut/rmut.dl
+./evaluation/count/count.dl
+./evaluation/comp-override1/comp-override1.dl
+./evaluation/term/term.dl
+./evaluation/subsumption/subsumption.dl
+./evaluation/sum-aggregate2/sum-aggregate2.dl
+./evaluation/components3/components3.dl
+./evaluation/magic_lrg_attr_id/magic_lrg_attr_id.dl
+./evaluation/independent_body2/independent_body2.dl
+./evaluation/existential/existential.dl
+./evaluation/neg6/neg6.dl
+./evaluation/aggregates_complex/aggregates_complex.dl
+./evaluation/access2/access2.dl
+./evaluation/magic_aggregates/magic_aggregates.dl
+./evaluation/comp-override3/comp-override3.dl
+./evaluation/empty_relations/empty_relations.dl
+./evaluation/magic_string_substr/magic_string_substr.dl
+./evaluation/aggregates3/aggregates3.dl
+./evaluation/inline_functors/inline_functors.dl
+./evaluation/match/match.dl
+./evaluation/inline_negation2/inline_negation2.dl
+./evaluation/aggregates5/aggregates5.dl
+./evaluation/independent_body1/independent_body1.dl
+./evaluation/magic_turing1/magic_turing1.dl
+14,17c14,17
+< Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+< Relation: @delta_TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+< Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+< Relation: @delta_TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+---
+> Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+> Relation: @delta_TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+> Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+> Relation: @delta_TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+74c74
+< Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+---
+> Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+76c76
+< Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+---
+> Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+78c78
+< Relation: @delta_TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+---
+> Relation: @delta_TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+80c80
+< Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+---
+> Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+82c82
+< Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+---
+> Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+84c84
+< Relation: @delta_TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+---
+> Relation: @delta_TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+101c101
+< Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+---
+> Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+103c103
+< Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+---
+> Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+105c105
+< Relation: @delta_TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+---
+> Relation: @delta_TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+107c107
+< Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+---
+> Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+109c109
+< Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+---
+> Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+111c111
+< Relation: @delta_TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+---
+> Relation: @delta_TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+128c128
+< Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+---
+> Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+130c130
+< Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+---
+> Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+132c132
+< Relation: @delta_TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+---
+> Relation: @delta_TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+134c134
+< Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+---
+> Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+136c136
+< Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+---
+> Relation: TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+138c138
+< Relation: @delta_TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+---
+> Relation: @delta_TapeLimits+_fff	Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+./evaluation/mutrecursion/mutrecursion.dl
+./evaluation/simple/simple.dl
+./evaluation/functor_arity/functor_arity.dl
+./evaluation/facts/facts.dl
+./evaluation/max/max.dl
+./evaluation/cat/cat.dl
+./syntactic/printsize/printsize.dl
+./syntactic/syntax4/syntax4.dl
+./syntactic/comment/comment.dl
+./syntactic/duplicates/duplicates.dl
+./syntactic/qualifiers3/qualifiers3.dl
+./syntactic/liberal_identifiers/liberal_identifiers.dl
+./syntactic/printsize_directive2/printsize_directive2.dl
+./syntactic/name_clash/name_clash.dl
+./syntactic/syntax9/syntax9.dl
+./syntactic/syntax10/syntax10.dl
+./syntactic/output_directive_quotes2/output_directive_quotes2.dl
+./syntactic/qualifiers2/qualifiers2.dl
+./syntactic/input/input.dl
+./syntactic/input_directive3/input_directive3.dl
+./syntactic/input_directive_quotes4/input_directive_quotes4.dl
+./syntactic/rule/rule.dl
+./syntactic/empty/empty.dl
+./syntactic/syntax1/syntax1.dl
+./syntactic/string/string.dl
+./syntactic/union_comp_type/union_comp_type.dl
+./syntactic/relation/relation.dl
+./syntactic/output/output.dl
+./syntactic/multiple_heads/multiple_heads.dl
+./syntactic/syntax3/syntax3.dl
+./syntactic/cpp_keywords/cpp_keywords.dl
+./syntactic/printsize_directive/printsize_directive.dl
+./syntactic/execution_plan/execution_plan.dl
+./syntactic/syntax2/syntax2.dl
+./syntactic/syntax7/syntax7.dl
+./syntactic/comment_rule/comment_rule.dl
+./syntactic/syntax6/syntax6.dl
+./syntactic/type/type.dl
+./syntactic/input_directive_quotes2/input_directive_quotes2.dl
+./syntactic/comment2/comment2.dl
+./syntactic/input_directive4/input_directive4.dl
+./syntactic/syntax8/syntax8.dl
+./syntactic/syntax5/syntax5.dl
+./syntactic/output_directive_quotes3/output_directive_quotes3.dl
+./syntactic/binary/binary.dl
+./syntactic/output_directive1/output_directive1.dl
+./syntactic/qualifiers/qualifiers.dl
+./syntactic/input_directive_quotes/input_directive_quotes.dl
+./semantic/load_record_large2/load_record_large2.dl
+./semantic/rule_arity/rule_arity.dl
+./semantic/load7/load7.dl
+./semantic/rule_undeclared_relation/rule_undeclared_relation.dl
+./semantic/underscore/underscore.dl
+./semantic/duplicates/duplicates.dl
+./semantic/rule_typecompat/rule_typecompat.dl
+./semantic/load8/load8.dl
+./semantic/aggregate1/aggregate1.dl
+./semantic/inline_negation/inline_negation.dl
+./semantic/progmin1/progmin1.dl
+./semantic/comp_infinite_recursion/comp_infinite_recursion.dl
+./semantic/comp_override/comp_override.dl
+./semantic/counter/counter.dl
+./semantic/fact_cat/fact_cat.dl
+./semantic/type_system9/type_system9.dl
+./semantic/load9/load9.dl
+./semantic/records9/records9.dl
+./semantic/store/store.dl
+./semantic/comp_nonexistent_type/comp_nonexistent_type.dl
+./semantic/extended_subtypes2/extended_subtypes2.dl
+./semantic/comp_relation/comp_relation.dl
+./semantic/recursive_unions/recursive_unions.dl
+./semantic/fact_arity/fact_arity.dl
+./semantic/type_as2/type_as2.dl
+./semantic/rule_undeclared_relation2/rule_undeclared_relation2.dl
+./semantic/inline_cycle2/inline_cycle2.dl
+./semantic/fact_number2/fact_number2.dl
+./semantic/store4/store4.dl
+./semantic/type_system5/type_system5.dl
+./semantic/suppress_warnings/suppress_warnings.dl
+./semantic/plan3/plan3.dl
+./semantic/type_udef/type_udef.dl
+./semantic/inline_ungrounded/inline_ungrounded.dl
+./semantic/comparison/comparison.dl
+./semantic/negative_numbers/negative_numbers.dl
+./semantic/load6/load6.dl
+./semantic/type_system3/type_system3.dl
+./semantic/store2/store2.dl
+./semantic/progmin2/progmin2.dl
+./semantic/type_system12/type_system12.dl
+./semantic/load3/load3.dl
+./semantic/extended_subtypes/extended_subtypes.dl
+./semantic/records1/records1.dl
+./semantic/bin/bin.dl
+./semantic/plan2/plan2.dl
+./semantic/aggregate3/aggregate3.dl
+./semantic/rel_stratification/rel_stratification.dl
+./semantic/string_substr/string_substr.dl
+./semantic/records5/records5.dl
+./semantic/equivalent/equivalent.dl
+./semantic/bool/bool.dl
+./semantic/union_types/union_types.dl
+./semantic/load_symbol_in_record/load_symbol_in_record.dl
+./semantic/records3/records3.dl
+./semantic/hex/hex.dl
+./semantic/aggregate2/aggregate2.dl
+./semantic/comp_clauses/comp_clauses.dl
+./semantic/type_dupl/type_dupl.dl
+./semantic/inline_cycle1/inline_cycle1.dl
+./semantic/load2/load2.dl
+./semantic/comp_params_inheritance/comp_params_inheritance.dl
+./semantic/fact_plus/fact_plus.dl
+./semantic/rel_copy_cycles/rel_copy_cycles.dl
+./semantic/range/range.dl
+./semantic/agg_checks/agg_checks.dl
+./semantic/type_system14/type_system14.dl
+./semantic/fact_number/fact_number.dl
+./semantic/rel_list/rel_list.dl
+./semantic/type_as/type_as.dl
+./semantic/comp_opt/comp_opt.dl
+./semantic/bin1/bin1.dl
+./semantic/records6/records6.dl
+./semantic/choice/choice.dl
+./semantic/type_system7/type_system7.dl
+./semantic/rel_redundant/rel_redundant.dl
+./semantic/eqrel_tests/eqrel_tests.dl
+./semantic/binhex/binhex.dl
+./semantic/type_system8/type_system8.dl
+./semantic/store_record_large/store_record_large.dl
+./semantic/type_system4/type_system4.dl
+./semantic/agg_checks2/agg_checks2.dl
+./semantic/fact_ctr/fact_ctr.dl
+./semantic/rel_udef/rel_udef.dl
+./semantic/execution_plan/execution_plan.dl
+./semantic/underscore2/underscore2.dl
+./semantic/rel_stratification2/rel_stratification2.dl
+./semantic/record_null/record_null.dl
+./semantic/load_record_delimiter/load_record_delimiter.dl
+./semantic/disjoint_names/disjoint_names.dl
+./semantic/string_len/string_len.dl
+./semantic/string_minmax/string_minmax.dl
+./semantic/var_single/var_single.dl
+./semantic/plan1/plan1.dl
+./semantic/records7/records7.dl
+./semantic/not_copy/not_copy.dl
+./semantic/witness_check/witness_check.dl
+./semantic/comp_name_resolution/comp_name_resolution.dl
+./semantic/type_system_records/type_system_records.dl
+./semantic/eqrel_tests3/eqrel_tests3.dl
+./semantic/type_system10/type_system10.dl
+./semantic/not_copy1/not_copy1.dl
+./semantic/ipv4/ipv4.dl
+./semantic/recursive_unions2/recursive_unions2.dl
+./semantic/type_system6/type_system6.dl
+./semantic/comp_types/comp_types.dl
+./semantic/alias/alias.dl
+./semantic/type_system_records2/type_system_records2.dl
+./semantic/store5/store5.dl
+./semantic/comp_inner_types/comp_inner_types.dl
+./semantic/type_system2/type_system2.dl
+./semantic/type_system13/type_system13.dl
+./semantic/hex1/hex1.dl
+./semantic/store_record_one_level/store_record_one_level.dl
+./semantic/load4/load4.dl
+./semantic/load_simple_record/load_simple_record.dl
+./semantic/underscore3/underscore3.dl
+./semantic/strconv/strconv.dl
+./semantic/lrg_rel_id1/lrg_rel_id1.dl
+./semantic/rqualifiers/rqualifiers.dl
+./semantic/fact_variable/fact_variable.dl
+./semantic/records4/records4.dl
+./semantic/ipv4_1/ipv4_1.dl
+./semantic/divide_by_zero/divide_by_zero.dl
+./semantic/rel_dupl/rel_dupl.dl
+./semantic/agg_checks3/agg_checks3.dl
+./semantic/inline_output/inline_output.dl
+./semantic/counter2/counter2.dl
+./semantic/records8/records8.dl
+./semantic/bitwise/bitwise.dl
+./semantic/eqrel_tests2/eqrel_tests2.dl
+./semantic/fact_empty/fact_empty.dl
+./semantic/store3/store3.dl
+./semantic/store_record_multilevel/store_record_multilevel.dl
+./semantic/rule_grounded/rule_grounded.dl
+./semantic/lrg_attr_id/lrg_attr_id.dl
+./semantic/load_record_invalid_parenthesis/load_record_invalid_parenthesis.dl
+./semantic/type_system11/type_system11.dl
+./semantic/records0/records0.dl
+./semantic/rel_nullary/rel_nullary.dl
+./semantic/attrib_dupl/attrib_dupl.dl
+./semantic/extended_subtypes3/extended_subtypes3.dl
+./semantic/lrg_rel_id2/lrg_rel_id2.dl
+./semantic/type_system1/type_system1.dl
+./semantic/load_record_large/load_record_large.dl
+./semantic/not_copy2/not_copy2.dl
+./semantic/agg_nested/agg_nested.dl
+./semantic/logical/logical.dl
+./semantic/records2/records2.dl
+./semantic/load10/load10.dl
+./semantic/disjoint_names2/disjoint_names2.dl
+./semantic/load_simple_record2/load_simple_record2.dl
+./semantic/string_substr1/string_substr1.dl
+./profile/recursive/recursive.dl
+./profile/lrg_attr_id/lrg_attr_id.dl
+./swig/java/insert_for/insert_for.dl
+./swig/java/paths/paths.dl
+./swig/java/dump_input/dump_input.dl
+./swig/java/movies/movies.dl
+./swig/java/dump_output/dump_output.dl
+./swig/java/flights/flights.dl
+./swig/java/family/family.dl
+./swig/python/insert_for/insert_for.dl
+./swig/python/paths/paths.dl
+./swig/python/dump_input/dump_input.dl
+./swig/python/movies/movies.dl
+./swig/python/dump_output/dump_output.dl
+./swig/python/flights/flights.dl
+./swig/python/family/family.dl
+./example/josephus/josephus.dl
+./example/catalan/catalan.dl
+./example/traffic/traffic.dl
+./example/k-permutations/k-permutations.dl
+./example/puzzle/puzzle.dl
+./example/fib/fib.dl
+./example/minesweeper/minesweeper.dl
+./example/minesweeper/grid.dl
+./example/factorial/factorial.dl
+./example/highest_degree/highest_degree.dl
+./example/earley/earley.dl
+./example/andersen/andersen.dl
+./example/perfect_numbers/perfect_numbers.dl
+./example/floydwarshall/floydwarshall.dl
+./example/cba_expr_value/cba_expr_value.dl
+./example/comp-parametrized/comp-parametrized.dl
+./example/counter/counter.dl
+./example/topological_ordering/topological_ordering.dl
+./example/2sat/2sat.dl
+./example/nfsa2fsa/nfsa2fsa.dl
+./example/edit_distance/edit_distance.dl
+./example/graph/graph.dl
+./example/bigrams/bigrams.dl
+./example/trains/trains.dl
+./example/minpath2/minpath2.dl
+./example/degree/degree.dl
+./example/cellular_automata/array.dl
+./example/cellular_automata/cellular_automata.dl
+./example/disconnected/disconnected.dl
+./example/ship/ship.dl
+./example/dfa_live_vars/dfa_live_vars.dl
+./example/paths/paths.dl
+./example/factoring/factoring.dl
+./example/metro/metro.dl
+./example/po2/po2.dl
+./example/turing1/turing1.dl
+7,10c7,10
+< Relation: TapeLimits	Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+< Relation: @delta_TapeLimits	Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+< Relation: TapeLimits	Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+< Relation: @delta_TapeLimits	Indexes: 2	Inequalities: 1	Chains: |002|020-->111|
+---
+> Relation: TapeLimits	Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+> Relation: @delta_TapeLimits	Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+> Relation: TapeLimits	Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+> Relation: @delta_TapeLimits	Indexes: 2	Inequalities: 1	Chains: |020|002-->111|
+./example/tree/tree.dl
+./example/circuit_eval/circuit_eval.dl
+./example/longest_path/longest_path.dl
+./example/po1/po1.dl
+./example/dominance/dominance.dl
+./example/access-policy/access-policy.dl
+./example/palindrome/palindrome.dl
+./example/comp-parametrized-multilvl/comp-parametrized-multilvl.dl
+./example/minpath3/minpath3.dl
+./example/magic_access-policy/magic_access-policy.dl
+./example/func/func.dl
+./example/po3/po3.dl
+./example/sequences/sequences.dl
+5c5
+< Relation: op_add	Indexes: 2	Inequalities: 0	Chains: |101|110-->120-->111|
+---
+> Relation: op_add	Indexes: 2	Inequalities: 1	Chains: |110-->120|101-->111|
+10c10
+< Relation: op_add	Indexes: 2	Inequalities: 0	Chains: |101|110-->120-->111|
+---
+> Relation: op_add	Indexes: 2	Inequalities: 1	Chains: |110-->120|101-->111|
+12c12
+< Relation: op_add	Indexes: 2	Inequalities: 0	Chains: |101|110-->120-->111|
+---
+> Relation: op_add	Indexes: 2	Inequalities: 1	Chains: |110-->120|101-->111|
+15c15
+< Relation: op_add	Indexes: 2	Inequalities: 0	Chains: |101|110-->120-->111|
+---
+> Relation: op_add	Indexes: 2	Inequalities: 1	Chains: |110-->120|101-->111|
+18c18
+< Relation: op_add	Indexes: 2	Inequalities: 0	Chains: |101|110-->120-->111|
+---
+> Relation: op_add	Indexes: 2	Inequalities: 1	Chains: |110-->120|101-->111|
+21,22c21,22
+< Relation: op_add	Indexes: 2	Inequalities: 0	Chains: |101|110-->120-->111|
+< Relation: op_add	Indexes: 2	Inequalities: 0	Chains: |101|110-->120-->111|
+---
+> Relation: op_add	Indexes: 2	Inequalities: 1	Chains: |110-->120|101-->111|
+> Relation: op_add	Indexes: 2	Inequalities: 1	Chains: |110-->120|101-->111|
+./example/tic-tac-toe/tic-tac-toe.dl
+./example/magic_pointsto/edb.dl
+./example/magic_pointsto/magic_pointsto.dl
+./example/clique/clique.dl
+./example/tak/tak.dl
+./example/minpath1/minpath1.dl
+./example/tc/tc.dl
+./example/sort/sort.dl
+./example/input_output/input_output.dl
+./example/movies/movies.dl
+./example/dfa_summary_function/dfa_summary_function.dl
+./example/java-pointsto/java-pointsto.dl
+./example/cliquer/cliquer.dl
+./example/game2/game2.dl
+./example/amicable/amicable.dl
+./example/profile_default/profile_default.dl
+./example/dfa_min/dfa_min.dl
+./example/equal/equal.dl
+./example/lucas/lucas.dl
+./example/inline_nats/inline_nats.dl
+./example/double_tree/double_tree.dl
+./example/linksum/linksum.dl
+./example/hmmer/hmmer.dl
+./example/prime2/prime2.dl
+./example/dnf/dnf.dl
+./example/nqueens/nqueens.dl
+./example/small/small.dl
+./example/prime/prime.dl
+./example/triangle/triangle.dl
+./example/shortest_edges/shortest_edges.dl
+./example/planar/planar.dl
+1,3c1,3
+< Relation: edge	Indexes: 2	Inequalities: 1	Chains: |0022|2200-->1111|
+< Relation: edge	Indexes: 2	Inequalities: 1	Chains: |0022|2200-->1111|
+< Relation: edge	Indexes: 2	Inequalities: 1	Chains: |0022|2200-->1111|
+---
+> Relation: edge	Indexes: 2	Inequalities: 1	Chains: |2200|0022-->1111|
+> Relation: edge	Indexes: 2	Inequalities: 1	Chains: |2200|0022-->1111|
+> Relation: edge	Indexes: 2	Inequalities: 1	Chains: |2200|0022-->1111|
+./example/shortest_path/shortest_path.dl
+./example/ackermann/ackermann.dl
+./example/ranpo/ranpo.dl
+./example/independent_body3/independent_body3.dl
+./example/rsg/rsg.dl
+./example/trans/trans.dl
+./example/fib1/fib1.dl
+./example/po5/po5.dl
+./example/orbits/orbits.dl
+./example/po4/po4.dl
+./example/flights2/flights2.dl
+./example/mmult/mmult.dl
+./example/profile_json/profile_json.dl
+./example/circuit_records/circuit_records.dl
+./example/flights/flights.dl
+./example/dfa_parse/dfa_parse.dl
+./example/grad/grad.dl
+./example/magic_prime2/magic_prime2.dl
+./example/pointsto/edb.dl
+./example/pointsto/pointsto.dl
+./example/centroids/centroids.dl
+./example/rewrite/rewrite.dl
+./example/speed/speed.dl
+./example/not_match/not_match.dl
+./example/comp-parametrized-inherit/comp-parametrized-inherit.dl
+./example/recipes/recipes.dl
+./example/euclid/euclid.dl
+./example/circuit_sat/circuit_sat.dl
+./example/lubm/lubm.dl
+./example/grid/grid.dl
+./example/weighted_distances/weighted_distances.dl
+./example/array/array.dl
+./example/dfa/dfa.dl
+./example/strategies/strategies.dl
+./example/orbits1/orbits1.dl
+./example/family/family.dl
diff --git a/tests/semantic/store_record_large/test.cpp b/tests/semantic/store_record_large/test.cpp
new file mode 100644
index 000000000..51c7a0c64
--- /dev/null
+++ b/tests/semantic/store_record_large/test.cpp
@@ -0,0 +1,915 @@
+
+#include "souffle/CompiledSouffle.h"
+
+extern "C" {}
+
+namespace souffle {
+static const RamDomain RAM_BIT_SHIFT_MASK = RAM_DOMAIN_SIZE - 1;
+struct t_btree_2__0_1__11 {
+    using t_tuple = Tuple<RamDomain, 2>;
+    using t_ind_0 = btree_set<t_tuple, index_utils::comparator<0, 1>>;
+    t_ind_0 ind_0;
+    using iterator = t_ind_0::iterator;
+    struct context {
+        t_ind_0::operation_hints hints_0;
+    };
+    context createContext() {
+        return context();
+    }
+    bool insert(const t_tuple& t) {
+        context h;
+        return insert(t, h);
+    }
+    bool insert(const t_tuple& t, context& h) {
+        if (ind_0.insert(t, h.hints_0)) {
+            return true;
+        } else
+            return false;
+    }
+    bool insert(const RamDomain* ramDomain) {
+        RamDomain data[2];
+        std::copy(ramDomain, ramDomain + 2, data);
+        const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
+        context h;
+        return insert(tuple, h);
+    }
+    bool insert(RamDomain a0, RamDomain a1) {
+        RamDomain data[2] = {a0, a1};
+        return insert(data);
+    }
+    bool contains(const t_tuple& t, context& h) const {
+        return ind_0.contains(t, h.hints_0);
+    }
+    bool contains(const t_tuple& t) const {
+        context h;
+        return contains(t, h);
+    }
+    std::size_t size() const {
+        return ind_0.size();
+    }
+    iterator find(const t_tuple& t, context& h) const {
+        return ind_0.find(t, h.hints_0);
+    }
+    iterator find(const t_tuple& t) const {
+        context h;
+        return find(t, h);
+    }
+    range<iterator> lowerUpperRange_00(const t_tuple& lower, const t_tuple& upper, context& h) const {
+        return range<iterator>(ind_0.begin(), ind_0.end());
+    }
+    range<iterator> lowerUpperRange_00(const t_tuple& lower, const t_tuple& upper) const {
+        return range<iterator>(ind_0.begin(), ind_0.end());
+    }
+    range<t_ind_0::iterator> lowerUpperRange_11(
+            const t_tuple& lower, const t_tuple& upper, context& h) const {
+        auto pos = ind_0.find(lower, h.hints_0);
+        auto fin = ind_0.end();
+        if (pos != fin) {
+            fin = pos;
+            ++fin;
+        }
+        return make_range(pos, fin);
+    }
+    range<t_ind_0::iterator> lowerUpperRange_11(const t_tuple& lower, const t_tuple& upper) const {
+        context h;
+        return lowerUpperRange_11(lower, upper, h);
+    }
+    bool empty() const {
+        return ind_0.empty();
+    }
+    std::vector<range<iterator>> partition() const {
+        return ind_0.getChunks(400);
+    }
+    void purge() {
+        ind_0.clear();
+    }
+    iterator begin() const {
+        return ind_0.begin();
+    }
+    iterator end() const {
+        return ind_0.end();
+    }
+    void printStatistics(std::ostream& o) const {
+        o << " arity 2 direct b-tree index 0 lex-order [0,1]\n";
+        ind_0.printStats(o);
+    }
+};
+struct t_btree_2__0_1__1_0__11__20 {
+    using t_tuple = Tuple<RamDomain, 2>;
+    using t_ind_0 = btree_set<t_tuple, index_utils::comparator<0, 1>>;
+    t_ind_0 ind_0;
+    using t_ind_1 = btree_set<t_tuple, index_utils::comparator<1, 0>>;
+    t_ind_1 ind_1;
+    using iterator = t_ind_0::iterator;
+    struct context {
+        t_ind_0::operation_hints hints_0;
+        t_ind_1::operation_hints hints_1;
+    };
+    context createContext() {
+        return context();
+    }
+    bool insert(const t_tuple& t) {
+        context h;
+        return insert(t, h);
+    }
+    bool insert(const t_tuple& t, context& h) {
+        if (ind_0.insert(t, h.hints_0)) {
+            ind_1.insert(t, h.hints_1);
+            return true;
+        } else
+            return false;
+    }
+    bool insert(const RamDomain* ramDomain) {
+        RamDomain data[2];
+        std::copy(ramDomain, ramDomain + 2, data);
+        const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
+        context h;
+        return insert(tuple, h);
+    }
+    bool insert(RamDomain a0, RamDomain a1) {
+        RamDomain data[2] = {a0, a1};
+        return insert(data);
+    }
+    bool contains(const t_tuple& t, context& h) const {
+        return ind_0.contains(t, h.hints_0);
+    }
+    bool contains(const t_tuple& t) const {
+        context h;
+        return contains(t, h);
+    }
+    std::size_t size() const {
+        return ind_0.size();
+    }
+    iterator find(const t_tuple& t, context& h) const {
+        return ind_0.find(t, h.hints_0);
+    }
+    iterator find(const t_tuple& t) const {
+        context h;
+        return find(t, h);
+    }
+    range<iterator> lowerUpperRange_00(const t_tuple& lower, const t_tuple& upper, context& h) const {
+        return range<iterator>(ind_0.begin(), ind_0.end());
+    }
+    range<iterator> lowerUpperRange_00(const t_tuple& lower, const t_tuple& upper) const {
+        return range<iterator>(ind_0.begin(), ind_0.end());
+    }
+    range<t_ind_0::iterator> lowerUpperRange_11(
+            const t_tuple& lower, const t_tuple& upper, context& h) const {
+        auto pos = ind_0.find(lower, h.hints_0);
+        auto fin = ind_0.end();
+        if (pos != fin) {
+            fin = pos;
+            ++fin;
+        }
+        return make_range(pos, fin);
+    }
+    range<t_ind_0::iterator> lowerUpperRange_11(const t_tuple& lower, const t_tuple& upper) const {
+        context h;
+        return lowerUpperRange_11(lower, upper, h);
+    }
+    range<t_ind_1::iterator> lowerUpperRange_20(
+            const t_tuple& lower, const t_tuple& upper, context& h) const {
+        t_tuple low(lower);
+        t_tuple high(upper);
+        low[0] = MIN_RAM_SIGNED;
+        high[0] = MAX_RAM_SIGNED;
+        return make_range(ind_1.lower_bound(low, h.hints_1), ind_1.upper_bound(high, h.hints_1));
+    }
+    range<t_ind_1::iterator> lowerUpperRange_20(const t_tuple& lower, const t_tuple& upper) const {
+        context h;
+        return lowerUpperRange_20(lower, upper, h);
+    }
+    bool empty() const {
+        return ind_0.empty();
+    }
+    std::vector<range<iterator>> partition() const {
+        return ind_0.getChunks(400);
+    }
+    void purge() {
+        ind_0.clear();
+        ind_1.clear();
+    }
+    iterator begin() const {
+        return ind_0.begin();
+    }
+    iterator end() const {
+        return ind_0.end();
+    }
+    void printStatistics(std::ostream& o) const {
+        o << " arity 2 direct b-tree index 0 lex-order [0,1]\n";
+        ind_0.printStats(o);
+        o << " arity 2 direct b-tree index 1 lex-order [1,0]\n";
+        ind_1.printStats(o);
+    }
+};
+struct t_btree_2__1_0__10__11 {
+    using t_tuple = Tuple<RamDomain, 2>;
+    using t_ind_0 = btree_set<t_tuple, index_utils::comparator<1, 0>>;
+    t_ind_0 ind_0;
+    using iterator = t_ind_0::iterator;
+    struct context {
+        t_ind_0::operation_hints hints_0;
+    };
+    context createContext() {
+        return context();
+    }
+    bool insert(const t_tuple& t) {
+        context h;
+        return insert(t, h);
+    }
+    bool insert(const t_tuple& t, context& h) {
+        if (ind_0.insert(t, h.hints_0)) {
+            return true;
+        } else
+            return false;
+    }
+    bool insert(const RamDomain* ramDomain) {
+        RamDomain data[2];
+        std::copy(ramDomain, ramDomain + 2, data);
+        const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
+        context h;
+        return insert(tuple, h);
+    }
+    bool insert(RamDomain a0, RamDomain a1) {
+        RamDomain data[2] = {a0, a1};
+        return insert(data);
+    }
+    bool contains(const t_tuple& t, context& h) const {
+        return ind_0.contains(t, h.hints_0);
+    }
+    bool contains(const t_tuple& t) const {
+        context h;
+        return contains(t, h);
+    }
+    std::size_t size() const {
+        return ind_0.size();
+    }
+    iterator find(const t_tuple& t, context& h) const {
+        return ind_0.find(t, h.hints_0);
+    }
+    iterator find(const t_tuple& t) const {
+        context h;
+        return find(t, h);
+    }
+    range<iterator> lowerUpperRange_00(const t_tuple& lower, const t_tuple& upper, context& h) const {
+        return range<iterator>(ind_0.begin(), ind_0.end());
+    }
+    range<iterator> lowerUpperRange_00(const t_tuple& lower, const t_tuple& upper) const {
+        return range<iterator>(ind_0.begin(), ind_0.end());
+    }
+    range<t_ind_0::iterator> lowerUpperRange_10(
+            const t_tuple& lower, const t_tuple& upper, context& h) const {
+        t_tuple low(lower);
+        t_tuple high(upper);
+        low[0] = MIN_RAM_SIGNED;
+        high[0] = MAX_RAM_SIGNED;
+        return make_range(ind_0.lower_bound(low, h.hints_0), ind_0.upper_bound(high, h.hints_0));
+    }
+    range<t_ind_0::iterator> lowerUpperRange_10(const t_tuple& lower, const t_tuple& upper) const {
+        context h;
+        return lowerUpperRange_10(lower, upper, h);
+    }
+    range<t_ind_0::iterator> lowerUpperRange_11(
+            const t_tuple& lower, const t_tuple& upper, context& h) const {
+        auto pos = ind_0.find(lower, h.hints_0);
+        auto fin = ind_0.end();
+        if (pos != fin) {
+            fin = pos;
+            ++fin;
+        }
+        return make_range(pos, fin);
+    }
+    range<t_ind_0::iterator> lowerUpperRange_11(const t_tuple& lower, const t_tuple& upper) const {
+        context h;
+        return lowerUpperRange_11(lower, upper, h);
+    }
+    bool empty() const {
+        return ind_0.empty();
+    }
+    std::vector<range<iterator>> partition() const {
+        return ind_0.getChunks(400);
+    }
+    void purge() {
+        ind_0.clear();
+    }
+    iterator begin() const {
+        return ind_0.begin();
+    }
+    iterator end() const {
+        return ind_0.end();
+    }
+    void printStatistics(std::ostream& o) const {
+        o << " arity 2 direct b-tree index 0 lex-order [1,0]\n";
+        ind_0.printStats(o);
+    }
+};
+struct t_btree_5__0_1_2_3_4__11111 {
+    using t_tuple = Tuple<RamDomain, 5>;
+    using t_ind_0 = btree_set<t_tuple, index_utils::comparator<0, 1, 2, 3, 4>>;
+    t_ind_0 ind_0;
+    using iterator = t_ind_0::iterator;
+    struct context {
+        t_ind_0::operation_hints hints_0;
+    };
+    context createContext() {
+        return context();
+    }
+    bool insert(const t_tuple& t) {
+        context h;
+        return insert(t, h);
+    }
+    bool insert(const t_tuple& t, context& h) {
+        if (ind_0.insert(t, h.hints_0)) {
+            return true;
+        } else
+            return false;
+    }
+    bool insert(const RamDomain* ramDomain) {
+        RamDomain data[5];
+        std::copy(ramDomain, ramDomain + 5, data);
+        const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
+        context h;
+        return insert(tuple, h);
+    }
+    bool insert(RamDomain a0, RamDomain a1, RamDomain a2, RamDomain a3, RamDomain a4) {
+        RamDomain data[5] = {a0, a1, a2, a3, a4};
+        return insert(data);
+    }
+    bool contains(const t_tuple& t, context& h) const {
+        return ind_0.contains(t, h.hints_0);
+    }
+    bool contains(const t_tuple& t) const {
+        context h;
+        return contains(t, h);
+    }
+    std::size_t size() const {
+        return ind_0.size();
+    }
+    iterator find(const t_tuple& t, context& h) const {
+        return ind_0.find(t, h.hints_0);
+    }
+    iterator find(const t_tuple& t) const {
+        context h;
+        return find(t, h);
+    }
+    range<iterator> lowerUpperRange_00000(const t_tuple& lower, const t_tuple& upper, context& h) const {
+        return range<iterator>(ind_0.begin(), ind_0.end());
+    }
+    range<iterator> lowerUpperRange_00000(const t_tuple& lower, const t_tuple& upper) const {
+        return range<iterator>(ind_0.begin(), ind_0.end());
+    }
+    range<t_ind_0::iterator> lowerUpperRange_11111(
+            const t_tuple& lower, const t_tuple& upper, context& h) const {
+        auto pos = ind_0.find(lower, h.hints_0);
+        auto fin = ind_0.end();
+        if (pos != fin) {
+            fin = pos;
+            ++fin;
+        }
+        return make_range(pos, fin);
+    }
+    range<t_ind_0::iterator> lowerUpperRange_11111(const t_tuple& lower, const t_tuple& upper) const {
+        context h;
+        return lowerUpperRange_11111(lower, upper, h);
+    }
+    bool empty() const {
+        return ind_0.empty();
+    }
+    std::vector<range<iterator>> partition() const {
+        return ind_0.getChunks(400);
+    }
+    void purge() {
+        ind_0.clear();
+    }
+    iterator begin() const {
+        return ind_0.begin();
+    }
+    iterator end() const {
+        return ind_0.end();
+    }
+    void printStatistics(std::ostream& o) const {
+        o << " arity 5 direct b-tree index 0 lex-order [0,1,2,3,4]\n";
+        ind_0.printStats(o);
+    }
+};
+
+class Sf_test : public SouffleProgram {
+private:
+    static inline bool regex_wrapper(const std::string& pattern, const std::string& text) {
+        bool result = false;
+        try {
+            result = std::regex_match(text, std::regex(pattern));
+        } catch (...) {
+            std::cerr << "warning: wrong pattern provided for match(\"" << pattern << "\",\"" << text
+                      << "\").\n";
+        }
+        return result;
+    }
+
+private:
+    static inline std::string substr_wrapper(const std::string& str, size_t idx, size_t len) {
+        std::string result;
+        try {
+            result = str.substr(idx, len);
+        } catch (...) {
+            std::cerr << "warning: wrong index position provided by substr(\"";
+            std::cerr << str << "\"," << (int32_t)idx << "," << (int32_t)len << ") functor.\n";
+        }
+        return result;
+    }
+
+private:
+    static inline RamDomain wrapper_tonumber(const std::string& str) {
+        RamDomain result = 0;
+        try {
+            result = RamSignedFromString(str);
+        } catch (...) {
+            std::cerr << "error: wrong string provided by to_number(\"";
+            std::cerr << str << "\") functor.\n";
+            raise(SIGFPE);
+        }
+        return result;
+    }
+
+public:
+    // -- initialize symbol table --
+    SymbolTable symTable;  // -- initialize record table --
+    RecordTable recordTable;
+    // -- Table: @delta_L
+    std::unique_ptr<t_btree_2__0_1__11> rel_1_delta_L = std::make_unique<t_btree_2__0_1__11>();
+    // -- Table: @delta_T
+    std::unique_ptr<t_btree_2__0_1__1_0__11__20> rel_2_delta_T =
+            std::make_unique<t_btree_2__0_1__1_0__11__20>();
+    // -- Table: @new_L
+    std::unique_ptr<t_btree_2__0_1__11> rel_3_new_L = std::make_unique<t_btree_2__0_1__11>();
+    // -- Table: @new_T
+    std::unique_ptr<t_btree_2__0_1__1_0__11__20> rel_4_new_T =
+            std::make_unique<t_btree_2__0_1__1_0__11__20>();
+    // -- Table: L
+    std::unique_ptr<t_btree_2__1_0__10__11> rel_5_L = std::make_unique<t_btree_2__1_0__10__11>();
+    souffle::RelationWrapper<0, t_btree_2__1_0__10__11, Tuple<RamDomain, 2>, 2, 0> wrapper_rel_5_L;
+    // -- Table: O
+    std::unique_ptr<t_btree_5__0_1_2_3_4__11111> rel_6_O = std::make_unique<t_btree_5__0_1_2_3_4__11111>();
+    souffle::RelationWrapper<1, t_btree_5__0_1_2_3_4__11111, Tuple<RamDomain, 5>, 5, 0> wrapper_rel_6_O;
+    // -- Table: T
+    std::unique_ptr<t_btree_2__0_1__1_0__11__20> rel_7_T = std::make_unique<t_btree_2__0_1__1_0__11__20>();
+    souffle::RelationWrapper<2, t_btree_2__0_1__1_0__11__20, Tuple<RamDomain, 2>, 2, 0> wrapper_rel_7_T;
+
+public:
+    Sf_test()
+            : wrapper_rel_5_L(*rel_5_L, symTable, "L",
+                      std::array<const char*, 2>{
+                              {"r:List{head#r:Tree{left#r:Tree,val#i:number,right#r:Tree},tail#r:List}",
+                                      "i:number"}},
+                      std::array<const char*, 2>{{"l", "m"}}),
+
+              wrapper_rel_6_O(*rel_6_O, symTable, "O",
+                      std::array<const char*,
+                              5>{{"r:List{head#r:Tree{left#r:Tree,val#i:number,right#r:Tree},tail#r:List}",
+                              "r:List{head#r:Tree{left#r:Tree,val#i:number,right#r:Tree},tail#r:List}",
+                              "r:List{head#r:Tree{left#r:Tree,val#i:number,right#r:Tree},tail#r:List}",
+                              "r:List{head#r:Tree{left#r:Tree,val#i:number,right#r:Tree},tail#r:List}",
+                              "r:List{head#r:Tree{left#r:Tree,val#i:number,right#r:Tree},tail#r:List}"}},
+                      std::array<const char*, 5>{{"l5", "l6", "l7", "l8", "l9"}}),
+
+              wrapper_rel_7_T(*rel_7_T, symTable, "T",
+                      std::array<const char*, 2>{
+                              {"r:Tree{left#r:Tree,val#i:number,right#r:Tree}", "i:number"}},
+                      std::array<const char*, 2>{{"t", "height"}}) {
+        addRelation("L", &wrapper_rel_5_L, false, false);
+        addRelation("O", &wrapper_rel_6_O, false, true);
+        addRelation("T", &wrapper_rel_7_T, false, false);
+    }
+    ~Sf_test() {}
+
+private:
+    void runFunction(
+            std::string inputDirectory = ".", std::string outputDirectory = ".", bool performIO = false) {
+        SignalHandler::instance()->set();
+        std::atomic<size_t> iter(0);
+
+#if defined(_OPENMP)
+        if (getNumThreads() > 0) {
+            omp_set_num_threads(getNumThreads());
+        }
+#endif
+
+        // -- query evaluation --
+        SignalHandler::instance()->setMsg(R"_(T(nil,0).
+in file /home/sarc9328/souffle/tests/semantic/store_record_large/store_record_large.dl [17:1-17:11])_");
+        [&]() {
+            CREATE_OP_CONTEXT(rel_7_T_op_ctxt, rel_7_T->createContext());
+            Tuple<RamDomain, 2> tuple{{ramBitCast(RamSigned(0)), ramBitCast(RamSigned(0))}};
+            rel_7_T->insert(tuple, READ_OP_CONTEXT(rel_7_T_op_ctxt));
+        }();
+        [&]() {
+            CREATE_OP_CONTEXT(rel_7_T_op_ctxt, rel_7_T->createContext());
+            CREATE_OP_CONTEXT(rel_2_delta_T_op_ctxt, rel_2_delta_T->createContext());
+            for (const auto& env0 : *rel_7_T) {
+                Tuple<RamDomain, 2> tuple{{ramBitCast(env0[0]), ramBitCast(env0[1])}};
+                rel_2_delta_T->insert(tuple, READ_OP_CONTEXT(rel_2_delta_T_op_ctxt));
+            }
+        }();
+        iter = 0;
+        for (;;) {
+            SignalHandler::instance()->setMsg(R"_(T([left,(m+1),right],(m+1)) :- 
+   T(left,m),
+   T(right,m),
+   m < 10.
+in file /home/sarc9328/souffle/tests/semantic/store_record_large/store_record_large.dl [18:1-19:39])_");
+            if (!(rel_2_delta_T->empty()) && !(rel_7_T->empty())) {
+                [&]() {
+                    CREATE_OP_CONTEXT(rel_7_T_op_ctxt, rel_7_T->createContext());
+                    CREATE_OP_CONTEXT(rel_2_delta_T_op_ctxt, rel_2_delta_T->createContext());
+                    CREATE_OP_CONTEXT(rel_4_new_T_op_ctxt, rel_4_new_T->createContext());
+                    Tuple<RamDomain, 2> lower{{0, 0}};
+                    Tuple<RamDomain, 2> upper{{0, ramBitCast((ramBitCast<RamSigned>(RamSigned(10)) -
+                                                              ramBitCast<RamSigned>(RamSigned(1))))}};
+                    lower[0] = MIN_RAM_SIGNED;
+                    upper[0] = MAX_RAM_SIGNED;
+                    lower[1] = MIN_RAM_SIGNED;
+                    auto range = rel_2_delta_T->lowerUpperRange_20(
+                            lower, upper, READ_OP_CONTEXT(rel_2_delta_T_op_ctxt));
+                    for (const auto& env0 : range) {
+                        Tuple<RamDomain, 2> lower{{0, ramBitCast(env0[1])}};
+                        Tuple<RamDomain, 2> upper{{0, ramBitCast(env0[1])}};
+                        lower[0] = MIN_RAM_SIGNED;
+                        upper[0] = MAX_RAM_SIGNED;
+                        auto range =
+                                rel_7_T->lowerUpperRange_10(lower, upper, READ_OP_CONTEXT(rel_7_T_op_ctxt));
+                        for (const auto& env1 : range) {
+                            if (!(rel_2_delta_T->contains(
+                                        Tuple<RamDomain, 2>{{ramBitCast(env1[0]), ramBitCast(env0[1])}},
+                                        READ_OP_CONTEXT(rel_2_delta_T_op_ctxt))) &&
+                                    !(rel_7_T->contains(
+                                            Tuple<RamDomain, 2>{
+                                                    {ramBitCast(pack(recordTable,
+                                                             Tuple<RamDomain, 3>{{ramBitCast(ramBitCast(
+                                                                                          env0[0])),
+                                                                     ramBitCast(ramBitCast(
+                                                                             (ramBitCast<RamSigned>(env0[1]) +
+                                                                                     ramBitCast<RamSigned>(
+                                                                                             RamSigned(1))))),
+                                                                     ramBitCast(ramBitCast(env1[0]))}})),
+                                                            ramBitCast((
+                                                                    ramBitCast<RamSigned>(env0[1]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                            READ_OP_CONTEXT(rel_7_T_op_ctxt)))) {
+                                Tuple<RamDomain, 2> tuple{
+                                        {ramBitCast(pack(recordTable,
+                                                 Tuple<RamDomain, 3>{{ramBitCast(ramBitCast(env0[0])),
+                                                         ramBitCast(ramBitCast((
+                                                                 ramBitCast<RamSigned>(env0[1]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1))))),
+                                                         ramBitCast(ramBitCast(env1[0]))}})),
+                                                ramBitCast((ramBitCast<RamSigned>(env0[1]) +
+                                                            ramBitCast<RamSigned>(RamSigned(1))))}};
+                                rel_4_new_T->insert(tuple, READ_OP_CONTEXT(rel_4_new_T_op_ctxt));
+                            }
+                        }
+                    }
+                }();
+            }
+            SignalHandler::instance()->setMsg(R"_(T([left,(m+1),right],(m+1)) :- 
+   T(left,m),
+   T(right,m),
+   m < 10.
+in file /home/sarc9328/souffle/tests/semantic/store_record_large/store_record_large.dl [18:1-19:39])_");
+            if (!(rel_7_T->empty()) && !(rel_2_delta_T->empty())) {
+                [&]() {
+                    CREATE_OP_CONTEXT(rel_7_T_op_ctxt, rel_7_T->createContext());
+                    CREATE_OP_CONTEXT(rel_2_delta_T_op_ctxt, rel_2_delta_T->createContext());
+                    CREATE_OP_CONTEXT(rel_4_new_T_op_ctxt, rel_4_new_T->createContext());
+                    Tuple<RamDomain, 2> lower{{0, 0}};
+                    Tuple<RamDomain, 2> upper{{0, ramBitCast((ramBitCast<RamSigned>(RamSigned(10)) -
+                                                              ramBitCast<RamSigned>(RamSigned(1))))}};
+                    lower[0] = MIN_RAM_SIGNED;
+                    upper[0] = MAX_RAM_SIGNED;
+                    lower[1] = MIN_RAM_SIGNED;
+                    auto range = rel_7_T->lowerUpperRange_20(lower, upper, READ_OP_CONTEXT(rel_7_T_op_ctxt));
+                    for (const auto& env0 : range) {
+                        Tuple<RamDomain, 2> lower{{0, ramBitCast(env0[1])}};
+                        Tuple<RamDomain, 2> upper{{0, ramBitCast(env0[1])}};
+                        lower[0] = MIN_RAM_SIGNED;
+                        upper[0] = MAX_RAM_SIGNED;
+                        auto range = rel_2_delta_T->lowerUpperRange_10(
+                                lower, upper, READ_OP_CONTEXT(rel_2_delta_T_op_ctxt));
+                        for (const auto& env1 : range) {
+                            if (!(rel_7_T->contains(
+                                        Tuple<RamDomain, 2>{
+                                                {ramBitCast(pack(recordTable,
+                                                         Tuple<RamDomain, 3>{{ramBitCast(ramBitCast(env0[0])),
+                                                                 ramBitCast(ramBitCast(
+                                                                         (ramBitCast<RamSigned>(env0[1]) +
+                                                                                 ramBitCast<RamSigned>(
+                                                                                         RamSigned(1))))),
+                                                                 ramBitCast(ramBitCast(env1[0]))}})),
+                                                        ramBitCast((ramBitCast<RamSigned>(env0[1]) +
+                                                                    ramBitCast<RamSigned>(RamSigned(1))))}},
+                                        READ_OP_CONTEXT(rel_7_T_op_ctxt)))) {
+                                Tuple<RamDomain, 2> tuple{
+                                        {ramBitCast(pack(recordTable,
+                                                 Tuple<RamDomain, 3>{{ramBitCast(ramBitCast(env0[0])),
+                                                         ramBitCast(ramBitCast((
+                                                                 ramBitCast<RamSigned>(env0[1]) +
+                                                                 ramBitCast<RamSigned>(RamSigned(1))))),
+                                                         ramBitCast(ramBitCast(env1[0]))}})),
+                                                ramBitCast((ramBitCast<RamSigned>(env0[1]) +
+                                                            ramBitCast<RamSigned>(RamSigned(1))))}};
+                                rel_4_new_T->insert(tuple, READ_OP_CONTEXT(rel_4_new_T_op_ctxt));
+                            }
+                        }
+                    }
+                }();
+            }
+            if (rel_4_new_T->empty()) break;
+            [&]() {
+                CREATE_OP_CONTEXT(rel_7_T_op_ctxt, rel_7_T->createContext());
+                CREATE_OP_CONTEXT(rel_4_new_T_op_ctxt, rel_4_new_T->createContext());
+                for (const auto& env0 : *rel_4_new_T) {
+                    Tuple<RamDomain, 2> tuple{{ramBitCast(env0[0]), ramBitCast(env0[1])}};
+                    rel_7_T->insert(tuple, READ_OP_CONTEXT(rel_7_T_op_ctxt));
+                }
+            }();
+            std::swap(rel_2_delta_T, rel_4_new_T);
+            rel_4_new_T->purge();
+            iter++;
+        }
+        iter = 0;
+        rel_2_delta_T->purge();
+        rel_4_new_T->purge();
+        SignalHandler::instance()->setMsg(R"_(L([nil,nil],0).
+in file /home/sarc9328/souffle/tests/semantic/store_record_large/store_record_large.dl [22:1-22:18])_");
+        [&]() {
+            CREATE_OP_CONTEXT(rel_5_L_op_ctxt, rel_5_L->createContext());
+            Tuple<RamDomain, 2> tuple{
+                    {ramBitCast(pack(recordTable, Tuple<RamDomain, 2>{{ramBitCast(ramBitCast(RamSigned(0))),
+                                                          ramBitCast(ramBitCast(RamSigned(0)))}})),
+                            ramBitCast(RamSigned(0))}};
+            rel_5_L->insert(tuple, READ_OP_CONTEXT(rel_5_L_op_ctxt));
+        }();
+        [&]() {
+            CREATE_OP_CONTEXT(rel_1_delta_L_op_ctxt, rel_1_delta_L->createContext());
+            CREATE_OP_CONTEXT(rel_5_L_op_ctxt, rel_5_L->createContext());
+            for (const auto& env0 : *rel_5_L) {
+                Tuple<RamDomain, 2> tuple{{ramBitCast(env0[0]), ramBitCast(env0[1])}};
+                rel_1_delta_L->insert(tuple, READ_OP_CONTEXT(rel_1_delta_L_op_ctxt));
+            }
+        }();
+        iter = 0;
+        for (;;) {
+            SignalHandler::instance()->setMsg(R"_(L([h,t],l) :- 
+   L(t, _tmp_0),
+   T([h,l,+underscore_0],_),
+    _tmp_0 = (l-1).
+in file /home/sarc9328/souffle/tests/semantic/store_record_large/store_record_large.dl [23:1-23:46])_");
+            if (!(rel_1_delta_L->empty()) && !(rel_7_T->empty())) {
+                [&]() {
+                    CREATE_OP_CONTEXT(rel_7_T_op_ctxt, rel_7_T->createContext());
+                    CREATE_OP_CONTEXT(rel_3_new_L_op_ctxt, rel_3_new_L->createContext());
+                    CREATE_OP_CONTEXT(rel_1_delta_L_op_ctxt, rel_1_delta_L->createContext());
+                    CREATE_OP_CONTEXT(rel_5_L_op_ctxt, rel_5_L->createContext());
+                    for (const auto& env0 : *rel_1_delta_L) {
+                        for (const auto& env1 : *rel_7_T) {
+                            RamDomain const ref = env1[0];
+                            if (ref == 0) continue;
+                            const RamDomain* env2 = recordTable.unpack(ref, 3);
+                            {
+                                if ((ramBitCast<RamDomain>(env0[1]) ==
+                                            ramBitCast<RamDomain>((ramBitCast<RamSigned>(env2[1]) -
+                                                                   ramBitCast<RamSigned>(RamSigned(1))))) &&
+                                        !(rel_5_L->contains(
+                                                Tuple<RamDomain, 2>{
+                                                        {ramBitCast(pack(recordTable,
+                                                                 Tuple<RamDomain, 2>{{ramBitCast(ramBitCast(
+                                                                                              env2[0])),
+                                                                         ramBitCast(ramBitCast(env0[0]))}})),
+                                                                ramBitCast(env2[1])}},
+                                                READ_OP_CONTEXT(rel_5_L_op_ctxt)))) {
+                                    Tuple<RamDomain, 2> tuple{
+                                            {ramBitCast(pack(recordTable,
+                                                     Tuple<RamDomain, 2>{{ramBitCast(ramBitCast(env2[0])),
+                                                             ramBitCast(ramBitCast(env0[0]))}})),
+                                                    ramBitCast(env2[1])}};
+                                    rel_3_new_L->insert(tuple, READ_OP_CONTEXT(rel_3_new_L_op_ctxt));
+                                }
+                            }
+                        }
+                    }
+                }();
+            }
+            if (rel_3_new_L->empty()) break;
+            [&]() {
+                CREATE_OP_CONTEXT(rel_3_new_L_op_ctxt, rel_3_new_L->createContext());
+                CREATE_OP_CONTEXT(rel_5_L_op_ctxt, rel_5_L->createContext());
+                for (const auto& env0 : *rel_3_new_L) {
+                    Tuple<RamDomain, 2> tuple{{ramBitCast(env0[0]), ramBitCast(env0[1])}};
+                    rel_5_L->insert(tuple, READ_OP_CONTEXT(rel_5_L_op_ctxt));
+                }
+            }();
+            std::swap(rel_1_delta_L, rel_3_new_L);
+            rel_3_new_L->purge();
+            iter++;
+        }
+        iter = 0;
+        rel_1_delta_L->purge();
+        rel_3_new_L->purge();
+        if (performIO) rel_7_T->purge();
+        SignalHandler::instance()->setMsg(R"_(O(l5,l6,l7,l8,l9) :- 
+   L(l5,5),
+   L(l6,6),
+   L(l7,7),
+   L(l8,8),
+   L(l9,9).
+in file /home/sarc9328/souffle/tests/semantic/store_record_large/store_record_large.dl [27:1-27:75])_");
+        if (!(rel_5_L->empty())) {
+            [&]() {
+                CREATE_OP_CONTEXT(rel_6_O_op_ctxt, rel_6_O->createContext());
+                CREATE_OP_CONTEXT(rel_5_L_op_ctxt, rel_5_L->createContext());
+                Tuple<RamDomain, 2> lower{{0, ramBitCast(RamSigned(5))}};
+                Tuple<RamDomain, 2> upper{{0, ramBitCast(RamSigned(5))}};
+                lower[0] = MIN_RAM_SIGNED;
+                upper[0] = MAX_RAM_SIGNED;
+                auto range = rel_5_L->lowerUpperRange_10(lower, upper, READ_OP_CONTEXT(rel_5_L_op_ctxt));
+                for (const auto& env0 : range) {
+                    Tuple<RamDomain, 2> lower{{0, ramBitCast(RamSigned(6))}};
+                    Tuple<RamDomain, 2> upper{{0, ramBitCast(RamSigned(6))}};
+                    lower[0] = MIN_RAM_SIGNED;
+                    upper[0] = MAX_RAM_SIGNED;
+                    auto range = rel_5_L->lowerUpperRange_10(lower, upper, READ_OP_CONTEXT(rel_5_L_op_ctxt));
+                    for (const auto& env1 : range) {
+                        Tuple<RamDomain, 2> lower{{0, ramBitCast(RamSigned(7))}};
+                        Tuple<RamDomain, 2> upper{{0, ramBitCast(RamSigned(7))}};
+                        lower[0] = MIN_RAM_SIGNED;
+                        upper[0] = MAX_RAM_SIGNED;
+                        auto range =
+                                rel_5_L->lowerUpperRange_10(lower, upper, READ_OP_CONTEXT(rel_5_L_op_ctxt));
+                        for (const auto& env2 : range) {
+                            Tuple<RamDomain, 2> lower{{0, ramBitCast(RamSigned(8))}};
+                            Tuple<RamDomain, 2> upper{{0, ramBitCast(RamSigned(8))}};
+                            lower[0] = MIN_RAM_SIGNED;
+                            upper[0] = MAX_RAM_SIGNED;
+                            auto range = rel_5_L->lowerUpperRange_10(
+                                    lower, upper, READ_OP_CONTEXT(rel_5_L_op_ctxt));
+                            for (const auto& env3 : range) {
+                                Tuple<RamDomain, 2> lower{{0, ramBitCast(RamSigned(9))}};
+                                Tuple<RamDomain, 2> upper{{0, ramBitCast(RamSigned(9))}};
+                                lower[0] = MIN_RAM_SIGNED;
+                                upper[0] = MAX_RAM_SIGNED;
+                                auto range = rel_5_L->lowerUpperRange_10(
+                                        lower, upper, READ_OP_CONTEXT(rel_5_L_op_ctxt));
+                                for (const auto& env4 : range) {
+                                    Tuple<RamDomain, 5> tuple{{ramBitCast(env0[0]), ramBitCast(env1[0]),
+                                            ramBitCast(env2[0]), ramBitCast(env3[0]), ramBitCast(env4[0])}};
+                                    rel_6_O->insert(tuple, READ_OP_CONTEXT(rel_6_O_op_ctxt));
+                                }
+                            }
+                        }
+                    }
+                }
+            }();
+        }
+        if (performIO) {
+            try {
+                std::map<std::string, std::string> directiveMap({{"IO", "file"},
+                        {"attributeNames", "l5\tl6\tl7\tl8\tl9"}, {"filename", "./O.csv"}, {"name", "O"},
+                        {"operation", "output"},
+                        {"types",
+                                "{\"O\": {\"arity\": 5, \"auxArity\": 0, \"types\": "
+                                "[\"r:List{head#r:Tree{left#r:Tree,val#i:number,right#r:Tree},tail#r:List}\","
+                                " \"r:List{head#r:Tree{left#r:Tree,val#i:number,right#r:Tree},tail#r:List}\","
+                                " \"r:List{head#r:Tree{left#r:Tree,val#i:number,right#r:Tree},tail#r:List}\","
+                                " \"r:List{head#r:Tree{left#r:Tree,val#i:number,right#r:Tree},tail#r:List}\","
+                                " \"r:List{head#r:Tree{left#r:Tree,val#i:number,right#r:Tree},tail#r:List}\"]"
+                                "}, \"records\": "
+                                "{\"r:List{head#r:Tree{left#r:Tree,val#i:number,right#r:Tree},tail#r:List}\":"
+                                " {\"arity\": 2, \"types\": "
+                                "[\"r:Tree{left#r:Tree,val#i:number,right#r:Tree}\", "
+                                "\"r:List{head#r:Tree{left#r:Tree,val#i:number,right#r:Tree},tail#r:List}\"]}"
+                                ", \"r:Tree{left#r:Tree,val#i:number,right#r:Tree}\": {\"arity\": 3, "
+                                "\"types\": [\"r:Tree{left#r:Tree,val#i:number,right#r:Tree}\", "
+                                "\"i:number\", \"r:Tree{left#r:Tree,val#i:number,right#r:Tree}\"]}}}"}});
+                if (!outputDirectory.empty() && directiveMap["filename"].front() != '/') {
+                    directiveMap["filename"] = outputDirectory + "/" + directiveMap["filename"];
+                }
+                IOSystem::getInstance().getWriter(directiveMap, symTable, recordTable)->writeAll(*rel_6_O);
+            } catch (std::exception& e) {
+                std::cerr << e.what();
+                exit(1);
+            }
+        }
+        if (performIO) rel_5_L->purge();
+
+        // -- relation hint statistics --
+        SignalHandler::instance()->reset();
+    }
+
+public:
+    void run() override {
+        runFunction(".", ".", false);
+    }
+
+public:
+    void runAll(std::string inputDirectory = ".", std::string outputDirectory = ".") override {
+        runFunction(inputDirectory, outputDirectory, true);
+    }
+
+public:
+    void printAll(std::string outputDirectory = ".") override {
+        try {
+            std::map<std::string, std::string> directiveMap({{"IO", "file"},
+                    {"attributeNames", "l5\tl6\tl7\tl8\tl9"}, {"filename", "./O.csv"}, {"name", "O"},
+                    {"operation", "output"},
+                    {"types",
+                            "{\"O\": {\"arity\": 5, \"auxArity\": 0, \"types\": "
+                            "[\"r:List{head#r:Tree{left#r:Tree,val#i:number,right#r:Tree},tail#r:List}\", "
+                            "\"r:List{head#r:Tree{left#r:Tree,val#i:number,right#r:Tree},tail#r:List}\", "
+                            "\"r:List{head#r:Tree{left#r:Tree,val#i:number,right#r:Tree},tail#r:List}\", "
+                            "\"r:List{head#r:Tree{left#r:Tree,val#i:number,right#r:Tree},tail#r:List}\", "
+                            "\"r:List{head#r:Tree{left#r:Tree,val#i:number,right#r:Tree},tail#r:List}\"]}, "
+                            "\"records\": "
+                            "{\"r:List{head#r:Tree{left#r:Tree,val#i:number,right#r:Tree},tail#r:List}\": "
+                            "{\"arity\": 2, \"types\": [\"r:Tree{left#r:Tree,val#i:number,right#r:Tree}\", "
+                            "\"r:List{head#r:Tree{left#r:Tree,val#i:number,right#r:Tree},tail#r:List}\"]}, "
+                            "\"r:Tree{left#r:Tree,val#i:number,right#r:Tree}\": {\"arity\": 3, \"types\": "
+                            "[\"r:Tree{left#r:Tree,val#i:number,right#r:Tree}\", \"i:number\", "
+                            "\"r:Tree{left#r:Tree,val#i:number,right#r:Tree}\"]}}}"}});
+            if (!outputDirectory.empty() && directiveMap["IO"] == "file" &&
+                    directiveMap["filename"].front() != '/') {
+                directiveMap["filename"] = outputDirectory + "/" + directiveMap["filename"];
+            }
+            IOSystem::getInstance().getWriter(directiveMap, symTable, recordTable)->writeAll(*rel_6_O);
+        } catch (std::exception& e) {
+            std::cerr << e.what();
+            exit(1);
+        }
+    }
+
+public:
+    void loadAll(std::string inputDirectory = ".") override {}
+
+public:
+    void dumpInputs(std::ostream& out = std::cout) override {}
+
+public:
+    void dumpOutputs(std::ostream& out = std::cout) override {
+        try {
+            std::map<std::string, std::string> rwOperation;
+            rwOperation["IO"] = "stdout";
+            rwOperation["name"] = "O";
+            rwOperation["types"] =
+                    "{\"O\": {\"arity\": 5, \"auxArity\": 0, \"types\": "
+                    "[\"r:List{head#r:Tree{left#r:Tree,val#i:number,right#r:Tree},tail#r:List}\", "
+                    "\"r:List{head#r:Tree{left#r:Tree,val#i:number,right#r:Tree},tail#r:List}\", "
+                    "\"r:List{head#r:Tree{left#r:Tree,val#i:number,right#r:Tree},tail#r:List}\", "
+                    "\"r:List{head#r:Tree{left#r:Tree,val#i:number,right#r:Tree},tail#r:List}\", "
+                    "\"r:List{head#r:Tree{left#r:Tree,val#i:number,right#r:Tree},tail#r:List}\"]}}";
+            IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_6_O);
+        } catch (std::exception& e) {
+            std::cerr << e.what();
+            exit(1);
+        }
+    }
+
+public:
+    SymbolTable& getSymbolTable() override {
+        return symTable;
+    }
+};
+SouffleProgram* newInstance_test() {
+    return new Sf_test;
+}
+SymbolTable* getST_test(SouffleProgram* p) {
+    return &reinterpret_cast<Sf_test*>(p)->symTable;
+}
+
+#ifdef __EMBEDDED_SOUFFLE__
+class factory_Sf_test : public souffle::ProgramFactory {
+    SouffleProgram* newInstance() {
+        return new Sf_test();
+    };
+
+public:
+    factory_Sf_test() : ProgramFactory("test") {}
+};
+static factory_Sf_test __factory_Sf_test_instance;
+}
+#else
+}
+int main(int argc, char** argv) {
+    try {
+        souffle::CmdOptions opt(R"(store_record_large.dl)", R"(.)", R"(.)", false, R"()", 1);
+        if (!opt.parse(argc, argv)) return 1;
+        souffle::Sf_test obj;
+#if defined(_OPENMP)
+        obj.setNumThreads(opt.getNumJobs());
+
+#endif
+        obj.runAll(opt.getInputFileDir(), opt.getOutputFileDir());
+        return 0;
+    } catch (std::exception& e) {
+        souffle::SignalHandler::instance()->error(e.what());
+    }
+}
+
+#endif
diff --git a/utilities/CMakeLists.txt b/utilities/CMakeLists.txt
index b49633a7b..cc6635865 100644
--- a/utilities/CMakeLists.txt
+++ b/utilities/CMakeLists.txt
@@ -5,7 +5,6 @@ ADD_EXECUTABLE(souffle
         ./src/swig/SwigInterface.h
         ./src/swig/SwigInterface.cpp
         ./src/swig/SwigInterface.i
-        ./src/CompiledIndexUtils.h
         ./src/ProfileEvent.h
         ./src/CompiledRecord.h
         ./src/AstAttribute.h
